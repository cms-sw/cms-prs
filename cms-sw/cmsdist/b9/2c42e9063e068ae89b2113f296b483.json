{"additions": 86, "auther_ref": "IB/CMSSW_8_0_X/next", "auther_sha": "85e10525180cf0775bbd3a82bdba1e900479b75d", "author": "dan131riley", "body": "The HepPDT::ParticleDataTable class with HeavyIonUnknownID() as the handler for processing unknown particle IDs is not thread safe, as it can update an internal stl::map when the ParticleDataTable::particle() method is called with the ID of an ion not already present in the table.  This has been seen to cause infinite loops (and helgrind errors) with the multi-threaded MixingModule, as the SimTracker/SiStripDigitizer makes calls that can result in unsafe updates that corrupt the map.  This patch replaces the HepPDT::ParticleDataTable internal maps with tbb::concurrent_unordered_map, adding a dependency on tbb.  Since this changes the internal maps from an ordered type to an unordered type, and HepPDT::ParticleDataTable exposes iterators over its internal maps, this does result in an observable change in behavior (which, unfortunately breaks most of the HepPDT tests).  A search for PDTMap::const_iterator in CMSSW finds three places where this interface is called, none of which appear to depend on map ordering, but it is always possible that some ordering dependency has been missed.\n\nThis patch has been tested with the full matrix.  Detailed one-to-one and validation tests on one workflow found no differences (other than the same uninitialized values found in the MixingModule testing) but further IB testing is needed.\n", "branch": "IB/CMSSW_8_0_X/next", "changed_files": 2, "closed_at": "1454678475", "comments": 4, "commits": 1, "created_at": "1454349770", "deletions": 2, "labels": ["externals-pending", "orp-pending", "pending-signatures", "tests-approved"], "merge_commit_sha": "47acc9acfd5d6fa044ac1d004f314dfc3cf5ba46", "merged_at": "1454678475", "merged_by": "degano", "number": 2116, "release-notes": [], "review_comments": 0, "state": "closed", "title": "change HepPDT ParticleTable internal from a map to a tbb::concurrent_unordered_map", "updated_at": "1454678475", "user": "dan131riley"}