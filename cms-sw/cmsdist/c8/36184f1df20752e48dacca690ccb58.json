{"additions": 3, "auther_ref": "IB/CMSSW_13_1_X/master_use_ld_bfd", "auther_sha": "9f3d32804cc02cd9c341f131185ff6391aba6ccd", "author": "fwyzard", "body": "As we configure them, gcc and clang already use the GNU bfd linker by default (`ld` or `ld.bfd`, they are the same in our externals).\r\n\r\nInstead `hipcc` uses its version of `ld.lld` by default.\r\n\r\nThis can cause inker problems in some corner cases, for example when linking objects with weak `V` symbols with objects with unique `u` symbols: `ld.bfd` and `ld.gold` seem to handle that, while `ld.lld` fails with a duplicate symbol error.\r\n\r\nRather than changing how gcc and clang generate symbols, it looks like the problem can be fixed instructing `hipcc` to use the GNU bfd linker.\r\nThis improves consistency with the rest of our build system, possibly avoiding other corner cases.\r\n\r\nSetting the flag for gcc should propagate automatically to clang and hipcc, making sure all compilers consistently use the same linker.", "branch": "IB/CMSSW_13_1_X/master", "changed_files": 1, "comments": 5, "commits": 1, "created_at": "1678786668", "deletions": 0, "labels": ["tests-rejected", "externals-pending", "pending-signatures", "orp-pending"], "number": 8382, "release-notes": [], "review_comments": 0, "state": "open", "title": "Explicitly use the GNU binutils ld.bfd linker", "updated_at": "1678811310", "user": "fwyzard"}