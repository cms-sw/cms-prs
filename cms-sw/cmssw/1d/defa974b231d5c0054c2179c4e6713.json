{"additions": 25, "auther_ref": "cache-TypeWithDict-by-type-info", "auther_sha": "9e128dfaa07e0956ddc37e1b31b40f87ab75eb7d", "author": "dan131riley", "body": "In \"lazy\" evaluation mode (which @Dr15Jones wishes people wouldn't use), the expression evaluator calls `ObjectWithDict::dynamicType()` on every evaluation to check for virtual function overrides.  That call creates a new `TypeWithDict` for the real type of the variable using its `std::type_info` and `TClass::GetClass()`.  `GetClass()` traverses the ROOT global class list, taking at least a read lock on the list, leading to stack traces like this:\r\n\r\n```\r\n#11 0x00007fefeb52120a in ROOT::TReadLockGuard::TReadLockGuard (this=0x7fefb4738c20, mutex=0x7fefcf9619e0) at include/TVirtualRWMutex.h:107\r\n#12 0x00007fefeacb1efc in TClass::GetClass (typeinfo=..., load=true) at core/meta/src/TClass.cxx:3111\r\n#13 0x00007fefeba1886c in edm::TypeWithDict::TypeWithDict(std::type_info const&, long) () from libFWCoreUtilities.so\r\n#14 0x00007fefeb9f5ee0 in edm::ObjectWithDict::dynamicType() const () from libFWCoreUtilities.so\r\n#15 0x00007fefcc05aa0f in reco::parser::LazyInvoker::invokeLast(edm::ObjectWithDict const&, std::vector<edm::ObjectWithDict, std::allocator<edm::ObjectWithDict> >&) const () from libCommonToolsUtils.so\r\n#16 0x00007fefcc03cfe7 in reco::parser::ExpressionLazyVar::value(edm::ObjectWithDict const&) const () from libCommonToolsUtils.so\r\n#17 0x00007fefcc05dd19 in reco::parser::BinarySelector::operator()(edm::ObjectWithDict const&) const () from libCommonToolsUtils.so\r\n```\r\n\r\nIn random stack samples and in the profiling tool \"vtune\", these calls are one of the leading causes of ROOT lock contention in a standard RAW2DIGI,L1Reco,RECO,EI,PAT job.  This PR adds a map from `std::type_index` to `TypeWithDict`, which is used to cache the results of these lookups.  A new function `TypeWithDict::byTypeInfo()` populates and interrogates the map.\r\n\r\nCurrently only `ObjectWithDict::dynamicType()` has been modified to use this cache.  While other uses of the `TypeWithDict` constructors could be modified to use this, in practice this PR plus #23058 are, in my test workflow, sufficient to eliminate all per-event calls to `GetClass` due to `TypeWithDict` construction.\r\n\r\nBy removing potential lock contention for \"lazy\" uses of the cut parser, this PR improves the throughput and efficiency of my 24-core RECO  test job by a modest but consistent 3%.", "branch": "master", "changed_files": 3, "comments": 1, "commits": 1, "created_at": "1524679852", "deletions": 1, "labels": ["code-checks-pending", "comparison-pending", "core-pending", "orp-pending", "pending-signatures", "tests-pending"], "milestone": "CMSSW_10_2_X", "number": 23059, "release-notes": [], "review_comments": 0, "state": "open", "title": "Cache the mapping from type_info to TypeWithDict for use in ObjectWithDict::dynamicType()", "updated_at": "1524679883", "user": "dan131riley"}