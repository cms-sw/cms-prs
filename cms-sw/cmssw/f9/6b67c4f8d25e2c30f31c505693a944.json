{"additions": 2096, "auther_ref": "phase2-L1-NN-CaloTau", "auther_sha": "841edda926d5ad107a581781a1069fd36f995ec3", "author": "jonamotta", "body": "#### PR description:\r\n\r\nThis PR uploads the Phase-2 NN Calo Tau producer and emulator - The TauMinator.\r\n\r\nThe producer/eulator reconstructs and identifies tau candidates at L1 Trigger with a CNN.\r\nThe output is a standard BXVector filled with tau objects.\r\nFor simplicity, the dataformat of taus is kept the same as the one of Phase-1\r\n\r\nThe producer/emulator depends on `.pb` files containing the graphs of the various NNs, which can be found in this [PR#1](https://github.com/cms-data/L1Trigger-L1CaloTrigger/pull/1).\r\n\r\nSome details about the algorithm and its performance can be found in this [DPS Note](https://cds.cern.ch/record/2868783?ln=en).\r\nSome additional details in reports made at the L1 DPG meetings in [this presentation](https://indico.cern.ch/event/1290402/#8-phase-2-nn-calo-taus) and [this presentation](https://indico.cern.ch/event/1290342/#16-status-and-plans-of-the-nn)\r\n\r\n**INFO** : IN THE EMULATOR THE NNs ARE STILL APPLIED USING THE TENSORFLOW SOFTWARE\r\nIt has already been shown in other contexts that tensorflow  softwrae and full emulation are very close to each other\r\n\r\n#### PR validation:\r\n\r\nThe code has been validated with the use of the following two standard commands:\r\n`scram build code-checks`\r\n`scram build code-format`\r\nand in both cases no error or warning was prompted by the code in this PR.\r\n\r\n#### WP definition and usage:\r\n\r\nThe WPs on the tau identification are defined based on the total efficiency of the algorithm, i.e. 90/95/99%.\r\nThe WPs cut is applied directly in the code and a \"quality flag\" is saved in the produced taus.\r\nFor simplicity, the dataformat of taus is kept the same as the one of Phase-1.\r\nThe \"quality flag\" in the output tau is stored in the hardware quality property of the tau, and can be accessed as:\r\n```\r\nconst l1t::Tau& tau = ...;\r\ntau.hwQual();\r\n```\r\nThe WP-hwQual correspondance is:\r\n- 90% --> 3\r\n- 95% --> 2\r\n- 99% --> 1\r\n- anything else --> 0\r\n\r\nThe results in the presentations linked above are all obtained using the 90% WP, which corresponds to asking `tau.hwQual()==3`; to use the other two WP the requirement would be `tau.hwQual()>=2` and `tau.hwQual()>=1` for 95 and 99% WP, respectively.\r\n\r\n#### Related PRs\r\nPR to `l1t-integration` [PR #1133](https://github.com/cms-l1t-offline/cmssw/pull/1133)\r\nPR to `l1t-data`  [PR #17](https://github.com/cms-l1t-offline/L1Trigger-L1TCalorimeter/pull/17)\r\n", "branch": "master", "changed_files": 7, "comments": 71, "commits": 13, "created_at": "1695277193", "deletions": 1, "labels": ["l1-pending", "pending-signatures", "tests-approved", "orp-pending", "upgrade-pending", "requires-external", "code-checks-approved"], "milestone": "CMSSW_14_0_X", "number": 42840, "release-notes": [], "review_comments": 31, "state": "open", "title": "Phase-2 TauMinator Tau (NNCaloTau)", "updated_at": "1705955587", "user": "jonamotta"}