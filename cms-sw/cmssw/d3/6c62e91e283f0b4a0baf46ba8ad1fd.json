{"additions": 65, "auther_ref": "fix_trackingIters01_Run3_16_0_X", "auther_sha": "685beb658c9e40c310f1b4990f49e241f6dfa34c", "author": "mmusich", "body": "#### PR description:\r\n\r\nIn the context of the Next Generation Triggers Task 3.4 (\"[Optimal HLT Calibrations](https://cms-ngt-hlt.docs.cern.ch/Task34/)\") we are interested in speeding up the calibration procedures with the aim of implementing real time calibrations for the phase-2 upgrade HLT. \r\nA stepping stone towards that, consists in the [*NGT Demonstrator*](https://indico.cern.ch/event/1504131/contributions/6341017/attachments/3028520/5345755/NGT-HLT_OptimalCalibrations_AlCaDBWorkshop_10.03.2025_Zarucki.pdf#page=7) which we plan to deploy and operate during Run 3 (late 2025 and 2026). \r\nThe \"calibration leg\" of such demonstrator is planned to run a trimmed down version of the Prompt Calibration Loop delivering [selected alignment and calibrations](https://indico.cern.ch/event/1504131/contributions/6341017/attachments/3028520/5345755/NGT-HLT_OptimalCalibrations_AlCaDBWorkshop_10.03.2025_Zarucki.pdf#page=15). \r\nUnfortunately in the current Express / Prompt Calibration Loop reconstruction model a disproportionate amount of resources is spent into reconstructing objects which are not particularly useful for the calibration procedures themselves. \r\nA very prominent amount of time is spent in the higher iterative tracking iterations targeting particularly either displaced or soft tracks. \r\nTo boost the timing of the procedure we're interested in having a version of reconstruction that focuses only on prompt and relatively high momentum tracks.  \r\nThe existing `trackingIters01` process modifier is suitable for such purpose, but its usage had to be slightly modified to support the case in which it is not run in conjunction with the modifier `trackingPhase2PU140`, which is the goal of this PR\r\n\r\n#### PR validation:\r\n\r\n@jprendi  has run successfully the following script:\r\n\r\n```bash\r\n#!/bin/bash -ex                                                                                                                                                                                             \r\n\r\nfile_list=\"file:/eos/user/j/jprendi/repacked_files/repacked_0.root,file:/eos/user/j/jprendi/repacked_files/repacked_1.root,file:/eos/user/j/jprendi/repacked_files/repacked_10.root,file:/eos/user/j/jprendi/repacked_files/repacked_11.root,file:/eos/user/j/jprendi/repacked_files/repacked_12.root,file:/eos/user/j/jprendi/repacked_files/repacked_13.root,file:/eos/user/j/jprendi/repacked_files/repacked_14.root,file:/eos/user/j/jprendi/repacked_files/repacked_15.root,file:/eos/user/j/jprendi/repacked_files/repacked_16.root,file:/eos/user/j/jprendi/repacked_files/repacked_17.root,file:/eos/user/j/jprendi/repacked_files/repacked_18.root,file:/eos/user/j/jprendi/repacked_files/repacked_19.root,file:/eos/user/j/jprendi/repacked_files/repacked_2.root,file:/eos/user/j/jprendi/repacked_files/repacked_20.root,file:/eos/user/j/jprendi/repacked_files/repacked_3.root,file:/eos/user/j/jprendi/repacked_files/repacked_4.root,file:/eos/user/j/jprendi/repacked_files/repacked_5.root,file:/eos/user/j/jprendi/repacked_files/repacked_6.root,file:/eos/user/j/jprendi/repacked_files/repacked_7.root,file:/eos/user/j/jprendi/repacked_files/repacked_8.root,file:/eos/user/j/jprendi/repacked_files/repacked_9.root\"\r\n\r\ncmsDriver.py expressStep2 \\\r\n         --conditions 140X_dataRun3_Express_v3 \\\r\n         -s RAW2DIGI,RECO,ALCAPRODUCER:SiStripPCLHistos+SiStripCalZeroBias+SiStripCalMinBias+SiStripCalMinBiasAAG+TkAlMinBias+SiPixelCalZeroBias+SiPixelCalSingleMuon+SiPixelCalSingleMuonTight+TkAlZMuMu \\\r\n         --datatier ALCARECO --eventcontent ALCARECO --data --process RECO \\\r\n         --scenario pp --era Run3 \\\r\n         --nThreads 8 \\\r\n         --nStreams 8 \\\r\n         --procModifiers trackingIters01 \\\r\n         -n 1000 --filein \"$file_list\" \\\r\n         --fileout file:step2.root --no_exec \\\r\n         --python_filename expressStep2_RAW2DIGI_RECO_ALCAPRODUCER.py\r\n\r\ncat <<@EOF>> expressStep2_RAW2DIGI_RECO_ALCAPRODUCER.py\r\nprocess.load('HLTrigger.Timer.FastTimerService_cfi')\r\nprocess.FastTimerService.writeJSONSummary = True\r\nprocess.FastTimerService.jsonFileName = \"timing_tracking_upperbound_s2.json\"\r\n@EOF\r\n\r\ncmsRun expressStep2_RAW2DIGI_RECO_ALCAPRODUCER.py >& step2.log\r\n```\r\n\r\nand measured the timing using either or not the `trackingIters01` modifier on an openlab node equipped with a `Intel(R) Xeon(R) Platinum 8260 CPU @ 2.40GHz`.\r\nAs expected there is an overall strong reduction of timing,\r\n\r\n| [w/o `trackingIters01`](https://jprendi.web.cern.ch/circles/web/piechart.php?colours=default&data_name=data&dataset=timing_tracking_upperbound_s2_nomod&groups=hlt&local=false&resource=time_real&show_labels=true&show_animations=true&threshold=0)  | [w/ `trackingIters01`]() |\r\n| ------------- | ------------- |\r\n|  <img width=\"1046\" height=\"1070\" alt=\"Screenshot from 2025-09-10 11-08-13\" src=\"https://github.com/user-attachments/assets/85d9e14a-e77c-4cc1-ada4-ea5b90977e4c\" /> |  <img width=\"1046\" height=\"1070\" alt=\"Screenshot from 2025-09-10 11-08-20\" src=\"https://github.com/user-attachments/assets/bea4280c-b4a3-4981-9dfa-bf2fa6d7bbff\" /> |\r\n\r\nwith only moderately small effects on calibration outputs, see e.g. [here](https://cms-conddb.cern.ch/cmsDbBrowser/payload_inspector/Prep/CMSSW_15_1_0_pre6/eyJwbG90cyI6MiwicGxvdDEiOnsidGFnIjoiQmVhbVNwb3RPYmplY3RfTkdUX3YwX3Rlc3QiLCJwbG90IjoicGxvdF9CZWFtU3BvdFBhcmFtZXRlcnNEaWZmVHdvVGFncyIsInBsdWdpbiI6InBsdWdpbkJlYW1TcG90X1BheWxvYWRJbnNwZWN0b3IiLCJ0eXBlIjoiSW1hZ2UiLCJpbnB1dF9wYXJhbXMiOnt9LCJpb3ZzIjp7InN0YXJ0X2lvdiI6IjQwMDAwMCIsImVuZF9pb3YiOiI0MDAwMDAifX0sInBsb3QyIjp7InRhZyI6IkJlYW1TcG90T2JqZWN0X05HVF92MV90ZXN0IiwicGxvdCI6InBsb3RfQmVhbVNwb3RQYXJhbWV0ZXJzRGlmZlR3b1RhZ3MiLCJwbHVnaW4iOiJwbHVnaW5CZWFtU3BvdF9QYXlsb2FkSW5zcGVjdG9yIiwidHlwZSI6IkltYWdlIiwiaW5wdXRfcGFyYW1zIjp7fSwiaW92cyI6eyJzdGFydF9pb3YiOiI0MDAwMDAiLCJlbmRfaW92IjoiNDAwMDAwIn19fQ==) for the Beam Spot.\r\n\r\nIn addition I also checked that the previous use of the modifier in phase-2 target workflows still runs, e.g. via:\r\n\r\n```\r\nrunTheMatrix.py --what upgrade -l 29634.703,29634.704 -i all --ibeos\r\n```\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nNot a backport, but it will be backported down to CMSSW_15_0_X for 2025 data-taking operations in the NGT demonstrator.\r\n\r\nCc: @trtomei @mzarucki \r\n", "branch": "master", "changed_files": 4, "comments": 10, "commits": 3, "created_at": "1757488939", "deletions": 22, "labels": ["reconstruction-pending", "pending-signatures", "tests-rejected", "orp-pending", "code-checks-approved", "tracking", "ngt"], "milestone": "CMSSW_16_0_X", "number": 48886, "release-notes": [], "review_comments": 1, "state": "open", "title": "Adjust `trackingIters01` process modifier usage to be functional in Run3 scenarios", "updated_at": "1757528387", "user": "mmusich"}