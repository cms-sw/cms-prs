{"additions": 1681, "auther_ref": "xmlParserRefactoring90X", "auther_sha": "2e533d86cf18174030ff539c9a42fe5475a37554", "author": "kkotov", "body": "The original XML parser developed by Thomas and Vangelis did a good job for the rapidly developing L1T O2O in Run II 2016. Now I've revisited some of it's design, simplified the interface, and as the result took advantage of the c++11 move semantics. In a nutshell, I replace the std::vector&lt;l1t::TableRow&gt; table-structure with a simpler std::map of column_name -&gt; vector_of_values. While l1t::TableRow and l1t::Setting both lack a move constructors and abuse copy semantics every time a new l1t::Setting is added to the l1t::TrigSystem::procSettings_ array, the new table representation burns no extra cycles when r-value l1t::Parameter is added to the l1t::TriggerSystem::procParameters array. This change combined together with further optimization in l1t::TriggerSystem class provides a substantial (up to x5) speed increase, easily noticeable when parsing uGTrs configuration.\r\n\r\nThe original code still lives side by side with the new one in L1Trigger/L1TCommon. The O2O online producers in L1TriggerConfig/L1TConfigProducers as well as uGMT and BMTF helper classes in L1Trigger/{L1TMuon,L1TMuonBarrel} were modified to use the new parser. The code was tested by re-running L1TO2O on one of the 2016 keys and observing agreement in payload hash codes", "branch": "CMSSW_9_0_X", "changed_files": 21, "closed_at": "1486541143", "comments": 54, "commits": 16, "created_at": "1481905673", "deletions": 296, "labels": ["comparison-available", "fully-signed", "l1-approved", "orp-approved", "tests-approved"], "merge_commit_sha": "c262efe735f8b272427446267dd338ce93f79ffb", "merged_at": "1486541143", "merged_by": "cmsbuild", "milestone": "CMSSW_9_0_X", "number": 17059, "release-notes": [], "review_comments": 9, "state": "closed", "title": "Refactoring and speeding-up of the XML parser for the L1T O2O", "updated_at": "1486541144", "user": "kkotov"}