{"additions": 5455, "auther_ref": "pcc_dyn_veto_rebase", "auther_sha": "831ee9d83244d2210588f05cd25bae93625aa5a8", "author": "nowaythatsok", "body": "Dear Colleagues, \r\nthis is my first contribution to the CMSSW codebase. I tried to get it in as good a shape as I could, but now it is time to make the PR. Thank you for your input in advance. \r\n\r\nI tried to rebase my commits onto master as per the recommendations. 3 commits showed merge conflicts in files I never touched. I pulled the current version of the files from master to fix that. \r\n\r\n```sh\r\ngit checkout official-cmssw/master -- Configuration/Geometry/README.md\r\ngit checkout official-cmssw/master -- Configuration/Geometry/python/dict2021Geometry.py\r\ngit checkout official-cmssw/master -- Configuration/StandardSequences/python/GeometryConf.py\r\ngit checkout official-cmssw/master -- Geometry/CMSCommonData/data/dd4hep/cmsExtendedGeometry2025.xml\r\ngit checkout official-cmssw/master -- Geometry/CMSCommonData/python/cmsExtendedGeometry2025XML_cfi.py\r\ngit checkout official-cmssw/master -- GeneratorInterface/LHEInterface/data/run_generic_tarball_cvmfs.sh\r\ngit checkout official-cmssw/master -- L1Trigger/L1TGlobal/plugins/L1TGlobalProducer.cc\r\n\r\ngit add --sparse     Configuration/Geometry/README.md Configuration/Geometry/python/dict2021Geometry.py Configuration/StandardSequences/python/GeometryConf.py Geometry/CMSCommonData/data/dd4hep/cmsExtendedGeometry2025.xml Geometry/CMSCommonData/python/cmsExtendedGeometry2025XML_cfi.py GeneratorInterface/LHEInterface/data/run_generic_tarball_cvmfs.sh L1Trigger/L1TGlobal/plugins/L1TGlobalProducer.cc\r\n```\r\n\r\n#### PR description:\r\n\r\nThese changes implement a per-run dynamic selection of the tracker modules based on certain stability criteria for more robust luminosity measurement. The algorithm is described in more detail [here](https://indico.cern.ch/event/1358674/contributions/5725781/attachments/2775100/4836057/PCC_Active_Masking_Dec_19_2023.pdf).\r\n\r\nThe feature also implements a new record in the ALCA Conditions DB to keep note of the vetoed modules. The details of this were discussed [here](https://indico.cern.ch/event/1504123/#2-new-record-in-alcadb-for-onl).\r\n\r\nThe record data structure is also used as a volatile/transient structure passed between producers. Not to repeat code, I just included the class defined in `src/CondFormats/Luminosity/interface/PccVetoList.h` to `src/DataFormats/Luminosity/interface/PccVetoListTransient.h`, I hope this is good enough practice. \r\n\r\nThe total feature is not activated in the configs, for now the point is to add it to the codebase. \r\n\r\n#### PR validation:\r\n\r\nCurrent tests are [here](https://github.com/nowaythatsok/cmssw/blob/pcc_dyn_veto/Calibration/LumiAlCaRecoProducers/python/test_hlt_2.py) for Run2 and [here](https://github.com/nowaythatsok/cmssw/blob/pcc_dyn_veto/Calibration/LumiAlCaRecoProducers/python/test_hlt_3.py) for Run3 files. \r\nI am not familiar with tests in \"the matrix\", here some advice would be welcome. \r\n\r\n@capalmer85 @duff-ae @brkronheim\r\n\r\n", "branch": "master", "changed_files": 21, "comments": 8, "commits": 17, "created_at": "1757328360", "deletions": 0, "labels": ["reconstruction-pending", "alca-pending", "db-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-pending", "changes-dataformats"], "milestone": "CMSSW_15_1_X", "number": 48861, "release-notes": [], "review_comments": 20, "state": "open", "title": "Dynamic module veto list for pixel cluster counting lumi", "updated_at": "1757432316", "user": "nowaythatsok"}