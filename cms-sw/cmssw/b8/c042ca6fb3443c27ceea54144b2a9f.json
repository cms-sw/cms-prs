{"additions": 10, "auther_ref": "dev-120X-fixModuleNameAsExternalGenFilter", "auther_sha": "4c45163ac1056928f97a03d8a4d22b49df4ca7e8", "author": "colizz", "body": "#### PR description:\r\n\r\nWhen the generator type (Pythia8, Herwig7, ...) needs to be recognized from the GEN module name, the use of the `ExternalGeneratorFilter` module may confuse the code because it is a wrapper of the real generator module for use.\r\n\r\nIn such cases, we set the `moduleName` to the real generator module inside `ExternalGeneratorFilter`.\r\n\r\nA backport to 10_6_X is also needed.\r\n\r\n#### PR validation:\r\n\r\n`HadronAndPartonSelector` is one module that detects the general type with the above method, and is in the sequence of producing NanoAOD/NanoGEN. \r\n\r\nBelow test produces the NanoGEN output for process `BTV-RunIISummer20UL17GEN-00002`, using `ExternalGeneratorFilter` as the GEN event module.\r\n\r\n```bash\r\nexport SCRAM_ARCH=slc7_amd64_gcc900\r\ncmsrel CMSSW_12_0_X_2021-07-09-1100\r\ncd CMSSW_12_0_X_2021-07-09-1100/src\r\ngit cms-merge-topic colizz:dev-120X-fixModuleNameAsExternalGenFilter\r\ncurl -s -k https://cms-pdmv.cern.ch/mcm/public/restapi/requests/get_fragment/BTV-RunIISummer20UL17GEN-00002 --retry 3 --create-dirs -o Configuration/GenProduction/python/BTV-RunIISummer20UL17GEN-00002-fragment.py\r\nscram b -j8\r\ncd ../..\r\n\r\ncmsDriver.py Configuration/GenProduction/python/BTV-RunIISummer20UL17GEN-00002-fragment.py --python_filename BTV-RunIISummer20UL17GEN-00002_1_cfg.py --eventcontent RAWSIM --customise Configuration/DataProcessing/Utils.addMonitoring --datatier GEN --fileout file:BTV-RunIISummer20UL17GEN-00002.root --conditions 112X_mcRun2_asymptotic_v2 --beamspot Realistic25ns13TeVEarly2017Collision --customise_commands='from GeneratorInterface.Core.ExternalGeneratorFilter import ExternalGeneratorFilter; process.generator = ExternalGeneratorFilter(process.generator)' --step GEN --geometry DB:Extended --era Run2_2017 --mc -n 10\r\ncmsDriver.py --python_filename NanoGEN_cfg.py --eventcontent NANOAODSIM --customise Configuration/DataProcessing/Utils.addMonitoring --datatier NANOAODSIM --filein file:BTV-RunIISummer20UL17GEN-00002.root --fileout file:NanoGEN_output.root --conditions 112X_mcRun2_asymptotic_v2 --beamspot Realistic25ns13TeV2016Collision --customise_commands='from PhysicsTools.NanoAOD.nanogen_cff import customizeNanoGEN; process = customizeNanoGEN(process)\\nprocess.MessageLogger.cerr.threshold = \"INFO\"\\nprocess.MessageLogger.cerr.SpecialModule = dict()\\n' --step NANOGEN --era Run2_2017,run2_nanoAOD_106Xv1 --mc -n -1\r\n```\r\n\r\nChecking `%MSG-i SpecialModule` and we validate that the `moduleName` is corrected.\r\n", "branch": "master", "changed_files": 2, "closed_at": "1626409355", "comments": 14, "commits": 1, "created_at": "1625894734", "deletions": 0, "labels": ["analysis-approved", "generators-approved", "fully-signed", "tests-approved", "orp-approved", "code-checks-approved"], "merge_commit_sha": "fdf2a2ff718b9e1dabfafa9118c75a7c983a153b", "merged_at": "1626409355", "merged_by": "cmsbuild", "milestone": "CMSSW_12_0_X", "number": 34436, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Use the original GEN module name for ExternalGeneratorFilter in recognizing generator types", "updated_at": "1631597280", "user": "colizz"}