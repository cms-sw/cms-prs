{"additions": 237, "auther_ref": "KDTreeTracckHcalEcalLinkOptimization", "auther_sha": "fe86258e621fcbec9e45141963584946191d1d1d", "author": "hatakeyamak", "body": "#### PR description:\r\n\r\nThis PR re-organizes kdtrees for track-hcal and track-ecal links, and optimize the track-hcal link storage. It should give **much more granular PFBlocks** without changing PF outputs (with some caveats [a]), adding huge PFBlocks discussed at:\r\nJ. Pata (Sep 2019): https://indico.cern.ch/event/846887/contributions/3557300/\r\nK. Hatakeyama (Mar 2020): https://indico.cern.ch/event/897397/contributions/3784811/\r\n\r\nThe PFBlock size change:\r\n```\r\nOriginal:\r\nOffline: Eight PFBlocks with >1000 elements, rms of size 23.1\r\nHLT: One PFBlock with >200 elements, rms of size 4.6\r\n\r\nWith this PR:\r\nOffline: One PFBlocks with >1000 elements, rms of size 12.5\r\nHLT: One PFBlock with >30 elements, rms of size ~1\r\n```\r\n\r\nigprof output with 2023PU ttbar (matrix 12634.99)\r\n```\r\nRank    % total       Self       Self / Children   Function\r\n[Original]\r\n            0.3  .........       1.31 / 1.31         PFBlockProducer::produce(edm::Event&, edm::EventSetup const&) [815]\r\n            0.1  .........       0.42 / 0.42         PFProducer::produce(edm::Event&, edm::EventSetup const&) [1774]\r\n>\r\n[with this PR]\r\n            0.2  .........       0.86 / 0.86         PFBlockProducer::produce(edm::Event&, edm::EventSetup const&) [1137]\r\n            0.0  .........       0.12 / 0.12         PFProducer::produce(edm::Event&, edm::EventSetup const&) [3483]\r\n```\r\nI believe this speed-up mainly comes that now we are distinguishing two preshower layers at prefilter stage of linker. (not very time-consuming to start with in offline sequence, but this is a sanity check.)\r\n(Original)\r\nhttp://hep.baylor.edu/hatake/PFval/misc/igreport_perf_12634.99_PFBlockLinks_ref.res\r\n(with this PR)\r\nhttp://hep.baylor.edu/hatake/PFval/misc/igreport_perf_12634.99_PFBlockLinks_test.res\r\n\r\n[a] Some changes are observed in, for example, rawCaloFraction and rawHcalFraction of packed candidates, while the caloFraction and hcalFraction stay the same. These \"raw\" quantities follow the history of how candidates are produced in PFBlocks, so this is not surprising.\r\nAlso, some changes in btag csv values are observed. In the past, when candidate order changes, we also observed that btag related quantities change.  I believe this shouldn't have systematic bias toward the physics performance (to be confirmed by relval etc).\r\n\r\nThis PR also includes some cleanup, as a follow-up from https://github.com/cms-sw/cmssw/pull/31151.\r\n\r\nThis PR also include a long-standing request from JME to have a config parameter to control the eta range for ECAL-HCAL linkings (currently performed only for |eta|>2.5 i.e. outside the traditional tracker acceptance). @lathomas @ahinzmann\r\n\r\nThis will have some interference with ongoing: https://github.com/cms-sw/cmssw/pull/31191.\r\nIt probably makes sense that this simpler PR goes first.\r\n\r\n@bendavid @jpata \r\n\r\n#### PR validation:\r\n\r\nRun the matrix test 11834.0 (ttbar 2021 with PU), make sure we don't see changes in PF outputs in hlt, reco, and miniaod.\r\nNow also ran 23234.0_TTbar_14TeV+2026D49 and made sure reco PF candidates stay the same.\r\n\r\nThe PF validation based on 2021 samples can be found at:\r\nhttp://hep.baylor.edu/hatake/PFval/PFValidation_PFBlockLinks/\r\n\r\n#### if this PR is a backport please specify the original PR and why you need to backport that PR:\r\n\r\nThis is not backport.\r\n", "branch": "master", "changed_files": 14, "closed_at": "1600152159", "comments": 67, "commits": 15, "created_at": "1598843042", "deletions": 98, "labels": ["code-checks-approved", "comparison-available", "fully-signed", "hlt-approved", "orp-approved", "reconstruction-approved", "tests-approved"], "merge_commit_sha": "c24fc3161012d4b2720f4720cd8c3f136f03d6b8", "merged_at": "1600152159", "merged_by": "cmsbuild", "milestone": "CMSSW_11_2_X", "number": 31295, "release-notes": [], "review_comments": 28, "state": "closed", "title": "Reorganization of kdtrees for PFBlockAlgo and optimize track-hcal links", "updated_at": "1600152160", "user": "hatakeyamak"}