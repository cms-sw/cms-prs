{"additions": 30, "auther_ref": "ecalClusterEnergyUncertaintyElectronSpecific", "auther_sha": "fd855f1068e3de3c1b5e299d09a3ce5099a2b163", "author": "guitargeek", "body": "#### PR description:\r\n\r\nAfter https://github.com/cms-sw/cmssw/pull/32424, the ES consumes migration of RecoEgamma plugins is still on my radar. On thing that makes the migration complicated is this factory pattern with functions inheriting from the `EcalClusterFunctionBaseClass`.\r\n\r\nBut before thinking of a solution for these ECAL cluster functions, maybe this this is a good opportunity to think about where this factory pattern is really needed to reduce the complexity of the migration a bit.\r\n\r\nI spotted the `EcalClusterEnergyUncertaintyElectronSpecific` function, which is only used once for the electrons and therefore a good candidate for conversion into a free function in RecoEgamma/EgammaElectronAlgos.\r\n\r\n\r\n#### PR validation:\r\n\r\nCMSSW compiles.\r\n\r\n#### if this PR is a backport please specify the original PR and why you need to backport that PR:\r\n\r\nNo backport intended.", "branch": "master", "changed_files": 5, "closed_at": "1608730487", "comments": 8, "commits": 1, "created_at": "1608057417", "deletions": 51, "labels": ["code-checks-approved", "fully-signed", "orp-approved", "reconstruction-approved", "tests-approved"], "merge_commit_sha": "99b9166ec31f4bb0c3f6d3ae5fc169abd462e65d", "merged_at": "1608730486", "merged_by": "cmsbuild", "milestone": "CMSSW_11_3_X", "number": 32498, "release-notes": [], "review_comments": 0, "state": "closed", "title": "EcalClusterEnergyUncertaintyElectronSpecific to free function", "updated_at": "1608730487", "user": "guitargeek"}