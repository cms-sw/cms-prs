{"additions": 139, "auther_ref": "portableCollectionDef", "auther_sha": "1143991b0e5c92f27219d93f011059b7dc947ce6", "author": "makortel", "body": "#### PR description:\r\n\r\nThis PR makes the `PortableCollection<T, TDev>` and `PortableObject<T, TDev>` alias templates usable also independently of `ALPAKA_ACCELERATOR_NAMESPACE`. This ability can be useful e.g. for EventSetup data product classes that themselves are templated over the device type (`TDev`), and want to use the PortableCollection for SoA storage (e.g. having `PortableCollection`(s) as data members).\r\n\r\nFurthermore, this PR simplifies the definitions of the `PortableCollection<T, TDev>` and `PortableObject<T, TDev>` alias templates. The trait-based approach is kept, but the traits are fully defined and specialized in `DataFormats/Portable/interface/Portable{Collection,Object}.h`. In addition, the specializations of the `CopyTo{Host,Device}` templates were moved to the headers in `interface/` as well.\r\n\r\nOld description from the RFC-stage of this PR:\r\n\r\n> The first commit of this PR makes the `PortableCollection<T, TDev>` alias template usable also independently of `ALPAKA_ACCELERATOR_NAMESPACE`. This ability can be useful e.g. for EventSetup data product classes that themselves are templated over the device type (`TDev`), and want to use the PortableCollection for SoA storage (e.g. having PortableCollection(s) as data members). I have an example crafted, but that is waiting for https://github.com/cms-sw/cmssw/pull/43298 to get merged, and therefore I went with a standalone PR just for this ability.\r\n>\r\n> While doing that I felt the way the `PortableCollection<T, TDev>` is defined was a bit cumbersome.\r\n> * The second commit continues to use the trait-based approach, but the trait is fully defined and specialized in `DataFormats/Portable/interface/PortableCollection.h`\r\n>* The third commit uses `std::conditional_t` in the alias template instead of the trait class template\r\n>\r\n> Some further cleanup can be done, depending on the decided approach. (e.g. in case of second or third commit I'd move the specializations of `CopyToHost` and `CopyToDevice` class templates to `DataFormats/Portable/interface/PortableCollection.h`).\r\n\r\nResolves https://github.com/makortel/framework/issues/720\r\n\r\n#### PR validation:\r\n\r\nAdded unit test compiles.", "branch": "master", "changed_files": 8, "closed_at": "1704742941", "comments": 20, "commits": 2, "created_at": "1700171244", "deletions": 106, "labels": ["fully-signed", "tests-approved", "orp-approved", "code-checks-approved", "heterogeneous-approved"], "merge_commit_sha": "1b67f09c7a616a8d60b3a60eba265aea916b5a90", "merged_at": "1704742941", "merged_by": "cmsbuild", "milestone": "CMSSW_14_0_X", "number": 43310, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Allow Portable{Collection,Object}<T, TDev> to be used also independently of ALPAKA_ACCELERATOR_NAMESPACE", "updated_at": "1704742942", "user": "makortel"}