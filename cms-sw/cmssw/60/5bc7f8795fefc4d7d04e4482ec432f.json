{"additions": 25, "auther_ref": "ECALGeomSpeedFix100X", "auther_sha": "3147de1bf6f1a95c72e3bc3b3587abff3280c99d", "author": "Sam-Harper", "body": "\r\nFirst, I suspect this is a blocker for all 10_X MC production as it will take a larger than expected CPU time which may or may not be significant.\r\n\r\nAlso this is a bit of a drive by bug fix as I happened to come across it and needed it fixed for my own purposes. If this fix requires things beyond what is already here, I'm sure @bsunanda as the author of the problem PR will be able to assist in fixing it promptly. \r\n\r\nhttps://github.com/cms-sw/cmssw/pull/21808 updated the CalosubdetectorGeometry::present function with an non-optimally coded version (it has a vector of all valid DetIds and basically compares the current DetId one by one with these to see if its valid).  \r\nThis cripples the HLT from a timing perspective (doubles it) due to PFRecHit associating its neighbours which involves a lot of calo topology operations which each time requires a call to CalosubdetectorGeometry::present to check its a valid ID.  It surprises me that it does not also significantly impact RECO timing, something is odd here. Regardless the HLT timing issue is real and needs to be urgently fixed.  This PR solves the issue. \r\n\r\nigprof: pre this PR (10_0_1, HLT Physics sample): http://sharper.web.cern.ch/sharper/cgi-bin/igprof-navigator/1001HLTTiming/igreport_default\r\nigprof: post this PR (10_0_1, HLT Physics sample): http://sharper.web.cern.ch/sharper/cgi-bin/igprof-navigator/1001HLTTiming/igreport_ecalGeomFix\r\n\r\nTime from ~500ms / event to 250 ms / event based on 1K input. \r\n\r\n@Martin-Grunewald FYI", "branch": "master", "changed_files": 4, "comments": 3, "commits": 1, "created_at": "1518588536", "deletions": 0, "labels": ["code-checks-approved", "comparison-pending", "geometry-pending", "orp-pending", "pending-signatures", "tests-pending"], "milestone": "CMSSW_10_1_X", "number": 22205, "release-notes": [], "review_comments": 0, "state": "open", "title": "overriding inefficient CalosubdetectorGeometry::present function", "updated_at": "1518588659", "user": "Sam-Harper"}