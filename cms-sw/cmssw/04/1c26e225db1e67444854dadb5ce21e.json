{"additions": 4, "auther_ref": "devel_L1REPACKFull_kBMTF", "auther_sha": "a418ef151b878a36a7625236bdea6ce8517514cc", "author": "missirol", "body": "#### PR description:\r\n\r\nThis PR updates the kBMTF inputs in `L1REPACK:Full`, making use of the unpacked BMTF data rather than the re-emulated trigger primitives. This follows what is done [here](https://github.com/cms-sw/cmssw/blob/341edfe4b80256c6606d4933bd786aa836530e65/L1Trigger/Configuration/python/customiseReEmul.py#L217-L220) in `customiseReEmul.L1TReEmulFromRAW`. For more context, see https://github.com/cms-sw/cmssw/issues/47925#issuecomment-2864575806.\r\n\r\n#### PR validation:\r\n\r\nUsed the simple example below with 2024 data to verify that, with this change, the re-emulated L1T decision of `L1_SingleMu22_BMTF` based on `L1REPACK:Full` agrees with the one in the RAW data (firmware). Without this PR, the same example shows a disagreement between the two.\r\n\r\nIn the example below, the Path `L1TMonitorPath1` (`L1TMonitorPath2`) accepts events where `L1_SingleMu22_BMTF` fired in firmware (`L1REPACK:Full`). Tested in `CMSSW_15_0_5`.\r\n```py\r\n#!/bin/bash\r\n\r\ncmsDriver.py l1Ntuple -s L1REPACK:Full \\\r\n --python_filename l1t_L1REPACK_Full_base.py --dump_python -n 1500 \\\r\n --era Run3_2025 --data --conditions 150X_dataRun3_HLT_v1 \\\r\n --filein /store/data/Run2024I/EphemeralHLTPhysics5/RAW/v1/000/386/593/00000/545e47b2-a41e-46d6-a9e3-8c6d26fb3ea1.root \\\r\n --processName HLT2 --no_output --no_exec\r\n\r\ncp l1t_L1REPACK_Full_base.py l1t_L1REPACK_Full.py\r\n\r\ncat <<@EOF >> l1t_L1REPACK_Full.py\r\n\r\nprocess.options.wantSummary = True\r\n\r\nprocess.l1tGtStage2Digis1 = cms.EDProducer( \"L1TRawToDigi\",\r\n    FedIds = cms.vint32( 1404 ),\r\n    Setup = cms.string( \"stage2::GTSetup\" ),\r\n    FWId = cms.uint32( 0 ),\r\n    DmxFWId = cms.uint32( 0 ),\r\n    FWOverride = cms.bool( False ),\r\n    TMTCheck = cms.bool( True ),\r\n    CTP7 = cms.untracked.bool( False ),\r\n    MTF7 = cms.untracked.bool( False ),\r\n    InputLabel = cms.InputTag( \"rawDataCollector::@skipCurrentProcess\" ),\r\n    lenSlinkHeader = cms.untracked.int32( 8 ),\r\n    lenSlinkTrailer = cms.untracked.int32( 8 ),\r\n    lenAMCHeader = cms.untracked.int32( 8 ),\r\n    lenAMCTrailer = cms.untracked.int32( 0 ),\r\n    lenAMC13Header = cms.untracked.int32( 8 ),\r\n    lenAMC13Trailer = cms.untracked.int32( 8 ),\r\n    debug = cms.untracked.bool( False ),\r\n    MinFeds = cms.uint32( 0 )\r\n)\r\n\r\nprocess.l1tMonitor1 = cms.EDFilter( \"TriggerResultsFilter\",\r\n    usePathStatus = cms.bool( False ),\r\n    hltResults = cms.InputTag( \"\" ),\r\n    l1tResults = cms.InputTag( \"l1tGtStage2Digis1\" ),\r\n    l1tIgnoreMaskAndPrescale = cms.bool( True ),\r\n    throw = cms.bool( True ),\r\n    triggerConditions = cms.vstring( 'L1_SingleMu22_BMTF' )\r\n)\r\n\r\nprocess.L1TMonitorPath1 = cms.Path(\r\n    process.l1tGtStage2Digis1\r\n  + process.l1tMonitor1\r\n)\r\n\r\nprocess.schedule.append( process.L1TMonitorPath1 )\r\n\r\nprocess.l1tGtStage2Digis2 = process.l1tGtStage2Digis1.clone(\r\n    InputLabel = \"rawDataCollector::@currentProcess\"\r\n)\r\n\r\nprocess.l1tMonitor2 = process.l1tMonitor1.clone(\r\n    l1tResults = \"l1tGtStage2Digis2\"\r\n)\r\n\r\nprocess.L1TMonitorPath2 = cms.Path(\r\n    process.rawDataCollector\r\n  + process.l1tGtStage2Digis2\r\n  + process.l1tMonitor2\r\n)\r\n\r\nprocess.schedule.append( process.L1TMonitorPath2 )\r\n@EOF\r\n\r\ncmsRun l1t_L1REPACK_Full.py &> l1t_L1REPACK_Full.log\r\ngrep MonitorPath l1t_L1REPACK_Full.log | head -2\r\n```\r\n\r\nOutput pre-PR.\r\n```bash\r\nL1REPACK:Full,ENDJOB\r\nentry /store/data/Run2024I/EphemeralHLTPhysics5/RAW/v1/000/386/593/00000/545e47b2-a41e-46d6-a9e3-8c6d26fb3ea1.root\r\nWarning: The default GeometryRecoDB_cff is being used; however, the DB geometry is not applied. You may need to verify your cmsDriver.\r\nStep: L1REPACK Spec: ['Full']\r\n# L1T INFO:  L1REPACK:Full will unpack all L1T inputs, re-emulated (Stage-2), and pack uGT, uGMT, and Calo Stage-2 output.\r\nStep: ENDJOB Spec: \r\n# L1T INFO:  L1REPACK:Full will unpack all L1T inputs, re-emulated (Stage-2), and pack uGT, uGMT, and Calo Stage-2 output.\r\nExpanded config file l1t_L1REPACK_Full_base.py created\r\nTrigReport     1    1       1500         23       1477          0 L1TMonitorPath1\r\nTrigReport     1    2       1500          2       1498          0 L1TMonitorPath2\r\n```\r\n\r\nOutput post-PR.\r\n```bash\r\nL1REPACK:Full,ENDJOB\r\nentry /store/data/Run2024I/EphemeralHLTPhysics5/RAW/v1/000/386/593/00000/545e47b2-a41e-46d6-a9e3-8c6d26fb3ea1.root\r\nWarning: The default GeometryRecoDB_cff is being used; however, the DB geometry is not applied. You may need to verify your cmsDriver.\r\nStep: L1REPACK Spec: ['Full']\r\n# L1T INFO:  L1REPACK:Full will unpack all L1T inputs, re-emulated (Stage-2), and pack uGT, uGMT, and Calo Stage-2 output.\r\nStep: ENDJOB Spec: \r\n# L1T INFO:  L1REPACK:Full will unpack all L1T inputs, re-emulated (Stage-2), and pack uGT, uGMT, and Calo Stage-2 output.\r\nExpanded config file l1t_L1REPACK_Full_base.py created\r\nTrigReport     1    1       1500         23       1477          0 L1TMonitorPath1\r\nTrigReport     1    2       1500         23       1477          0 L1TMonitorPath2\r\n```\r\n\r\n#### If this PR is a backport, please specify the original PR and why you need to backport that PR. If this PR will be backported, please specify to which release cycle the backport is meant for:\r\n\r\nTo be backported to `15_0_X` for trigger studies.\r\n", "branch": "master", "changed_files": 1, "comments": 8, "commits": 1, "created_at": "1746736261", "deletions": 0, "labels": ["l1-pending", "operations-pending", "pending-signatures", "tests-rejected", "orp-pending", "code-checks-approved"], "milestone": "CMSSW_15_1_X", "number": 48045, "release-notes": [], "review_comments": 0, "state": "open", "title": "use unpacked track-finder inputs for kBMTF in `L1REPACK:Full`", "updated_at": "1746803627", "user": "missirol"}