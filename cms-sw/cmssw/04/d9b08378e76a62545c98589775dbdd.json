{"additions": 27, "auther_ref": "dev-addNonUpdatedSTAMu", "auther_sha": "3182908daae6ca3841813d9c3fe5b0878aea1837", "author": "CeliaFernandez", "body": "#### PR description:\r\n\r\nThis PR modifies the MuonIdProducer to admit one more input intended to serve as an additional source for standalone muon tracks. The motivation behind this implementation would be to feed the collection `muons` with both `standAloneMuons::UpdatedAtVtx` and `standAloneMuons` track collections, while until now only the former has been taken as an unique input.\r\n\r\nThe main reason to include this collection is summarized as follows:\r\n\r\n1. `standAloneMuons::UpdatedAtVtx` are a subset of `standAloneMuons`\r\n2. Both `standAloneMuons::UpdatedAtVtx` and `standAloneMuons` are used to reconstruct the global muons that are saved in the muons collection.\r\n3. If we only feed the muons collection with `standAloneMuons::UpdatedAtVtx`, muons that are only in `standAloneMuons` can enter in the muons collection **if and only if** they become global muons.\r\n4. Using the muons collection to measure the global muon efficiency over standalone muons would risk introducing a bias, because a small fraction of the standalone muons are already preselected to be global muons.\r\n\r\nThe potential bias has been proved to be small, with an average value of ~1% while being higher at some parts of the detector e.g. the barrel-endcap transition region, where the reconstruction efficiency if lower.\r\n\r\nA detailed presentation summarizing the main aspects of the implementation was presented in the[ last Muon POG general meeting](https://indico.cern.ch/event/1273299/#2-improvements-for-standalone).\r\n\r\nSince the impact is very small, we are likely to see nothing in the standard tests, but if any:\r\n\r\n- **What changes are expected?**\r\n  - A small increase in the number of muons in the `muons` collection labelled as isStandaloneMuon() == True.\r\n  - Small increase in the yield of some distributions, due to the aforementioned included standalone muons.\r\n  - Some variations in variables of already existing muons inside `muons` that before were just tracker muons, but now are also standalone muons.\r\n\r\n- **What is not expected?**\r\n  - Global muons must remain invariant in any of the collections.\r\n  - Changes are only expected in reco::Muon `muons` (and collections made from it) but not in other muon collections.\r\n\r\nThis PR is closely related to an already solved issue because they were caused by the same logic established in the `GlobalMuonProducer.cc`: https://github.com/cms-sw/cmssw/issues/38201\r\n\r\n#### PR validation:\r\n\r\nThis PR has passed the basic test procedure suggested in the [CMSSW PR instructions](https://cms-sw.github.io/PRWorkflow.html).\r\n\r\n#### Backport:\r\n\r\nThis PR is not a backport but **should we prepare one?**\r\n\r\n", "branch": "master", "changed_files": 3, "closed_at": "1692728560", "comments": 11, "commits": 2, "created_at": "1691667685", "deletions": 10, "labels": ["reconstruction-approved", "fully-signed", "tests-approved", "orp-approved", "code-checks-approved"], "merge_commit_sha": "19c178740257eb48367778593da55dcad08b7a4f", "merged_at": "1692728560", "merged_by": "cmsbuild", "milestone": "CMSSW_13_3_X", "number": 42532, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Include an additional input to fill standalone muon tracks in MuonIdProducer", "updated_at": "1692728560", "user": "CeliaFernandez"}