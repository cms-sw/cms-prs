{"additions": 62, "auther_ref": "iarspider-patch-20240910-rootmaster", "auther_sha": "4b5e99dfba2c486de69ebb2c39ac4aa6bc041dd7", "author": "iarspider", "body": "#### PR description:\r\n\r\nROOT::Minuit2::FCNBase  interface changed in https://github.com/root-project/root/commit/63636f6aeb39cfca7d99850b5b8f56802de563fa:\r\n\r\n> **[Minuit2] Use std::span instead of std::vector const& for parameters**\r\n> \r\n> Use `std::span` instead of `std::vector const&` for function parameters\r\n> in Minuit2.\r\n> \r\n> The motivation is that `std::span` is more general. If the function\r\n> takes a `std::vector const&`, the inputs are forced to be allocated on\r\n> the heap. So if one wants to call functions with constant size or even\r\n> scalar input, that would cause a large overhead.\r\n> \r\n> This overhead can be avoided when generalizing with `std::span`.\r\n> \r\n> The standalone Minuit2 build files were also changed to consider the\r\n> `std::span` backport to C++17 that is already in ROOT.\r\n> \r\n\r\nThis PR updates classes that inherit from it. This change is probably not backwards-compatible.\r\n\r\n#### PR validation:\r\n\r\nBot tests. \r\n", "branch": "master", "changed_files": 7, "comments": 22, "commits": 1, "created_at": "1725951364", "deletions": 1, "labels": ["reconstruction-pending", "alca-pending", "db-pending", "pending-signatures", "tests-pending", "orp-pending", "hold", "code-checks-approved", "tracking"], "milestone": "CMSSW_14_2_X", "number": 45965, "release-notes": [], "review_comments": 0, "state": "open", "title": "[ROOTMaster] Update classes inheriting from ROOT::Minuit2::FCNBase to account for changes in ROOTmaster", "updated_at": "1726116483", "user": "iarspider"}