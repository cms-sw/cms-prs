{"additions": 11, "auther_ref": "ChargedHadronPFTrackIsolationProducerFix", "auther_sha": "70faba914a35f9e69bbc2f84664712afc2e7acf0", "author": "hatakeyamak", "body": "#### PR description:\r\n\r\n[address issues reported by HGCAL folks]\r\nUpdate ChargedHadronPFTrackIsolationProducer so that we wont get a crash even when --customise RecoHGCal/TICL/iterativeTICL_cff.injectTICLintoPF is specified. PF candidates from TICL dont go through PFBlocks. This is generally fine, but when `rawECALEnergy` and `rawHCALEnergy` are set to TICL PF candidates for JetMET to perform PF hadron calibration, it leads to a logic error. More in detail, after setting these quantities [2.1], the `ChargedHadronPFTrackIsolationProducer` [2.2] crashes because it checks the PFElement of type `TRACK` to identify isolated charged hadrons. (It was not crashing before as the `rawECALEnergy` and `rawECALEnergy` are 0, effectively bypassing this check.)\r\n\r\nThis isolation check is relevant for PF candidates coming from PFAlgo, where multiple tracks can associate to the same calorimeter clusters, but this is not relevant for PF candidates from TICL. In this PR, we consider PF charged candidates from TICL isolated, avoid the crash, and allow `rawCaloEnergy` & `rawHcalEnergy` to be properly stored for packed candidates.\r\n\r\n[2.1] https://github.com/cms-sw/cmssw/commit/1e3e2ecab2d05d3aa3df04262866bdf7bf472602#diff-49ac77e92d14b3c79dfe08879ad1b7f4054eb34bf175e844010e4a77c0d242f1\r\n[2.2] https://github.com/cms-sw/cmssw/blob/master/RecoParticleFlow/PFProducer/plugins/ChargedHadronPFTrackIsolationProducer.cc#L53-L77\r\n\r\n#### PR validation:\r\n\r\nCheck in a manual workflow with --customise RecoHGCal/TICL/iterativeTICL_cff.injectTICLintoPF\r\nthat rawCaloEnergy & rawHcalEnergy are stored in packed charged candidates. Example:\r\n```\r\n                                             (rawCaloFraction(), rawHcalFraction(), caloFraction(), hcalFraction(), ptTrk())\r\npfcands 2091: pt   3.2 eta -2.44 pdgId  -211 1.000 0.020 1.000 0.020 1.201 \r\npfcands 2092: pt   3.3 eta -2.52 pdgId   211 0.990 0.210 0.990 0.210 1.467 \r\npfcands 2093: pt   3.5 eta -2.84 pdgId  -211 0.990 0.380 0.990 0.380 1.616 \r\npfcands 2094: pt   3.8 eta -2.90 pdgId  -211 1.000 0.380 1.000 0.380 2.922 \r\n```\r\n(raw)CaloFraction() is ~1 by definition now, because PFTICL candidates dont really use the track pt information yet, and it comes from hgcal measurements.\r\nptTrk is stored, so I think we have necessary information stored.\r\n\r\nAlso, make sure ttbar 2021 and 2026D49 (without injectTICLintoPF, 11634.0 & 23234.0) run without a crash.\r\n\r\n#### if this PR is a backport please specify the original PR and why you need to backport that PR:\r\n\r\nThis is not a backport.\r\n\r\n@hqucms @rovere @felicepantaleo @bendavid ", "branch": "master", "changed_files": 1, "closed_at": "1606756014", "comments": 17, "commits": 1, "created_at": "1605853923", "deletions": 8, "labels": ["code-checks-approved", "comparison-available", "fully-signed", "orp-approved", "reconstruction-approved", "tests-approved", "upgrade-approved"], "merge_commit_sha": "f4b33384df9758755904e139299e4009dc84c94a", "merged_at": "1606756014", "merged_by": "cmsbuild", "milestone": "CMSSW_11_3_X", "number": 32202, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Adopt ChargedHadronPFTrackIsolationProducer for PFTICL candidates", "updated_at": "1606756014", "user": "hatakeyamak"}