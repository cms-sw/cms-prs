{"additions": 435, "auther_ref": "from-CMSSW_10_1_X_concurrentAndGlobalSiStripGains", "auther_sha": "3a49e5d7a1fad237e42ec77d150313bc8f22a95a", "author": "mmusich", "body": "In an attempt to solve the issue in https://github.com/cms-sw/cmssw/issues/22281, I've tried to migrate `SiStripGainsPCLWorker` from `DQMEDAnalyzer` to `DQMGlobalEDAnalyzer`. \r\nWill probably push more commits to clean the code (and I would  also like to make some more extended tests), but comments are already welcome.\r\nRunning in a `CMSSW_10_1_X_2018-02-21-2300`, the command `runTheMatrix.py -l 1001.0 -t 4 --ibeos` runs to completion, at variance with the vanilla IB which is segfaulting at [step8](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc6_amd64_gcc630/CMSSW_10_1_X_2018-02-21-2300/pyRelValMatrixLogs/run/1001.0_RunMinBias2011A+RunMinBias2011A+TIER0EXP+ALCAEXP+ALCAHARVD1+ALCAHARVD2+ALCAHARVD3+ALCAHARVD4+ALCAHARVD5/step8_RunMinBias2011A+RunMinBias2011A+TIER0EXP+ALCAEXP+ALCAHARVD1+ALCAHARVD2+ALCAHARVD3+ALCAHARVD4+ALCAHARVD5.log). \r\nIncidentally, I've measured the decrease of RSS memory consumption of step3 of  `runTheMatrix.py -l 1001.0 -t 4` and looks sizable (barring errors on my side)\r\n![image](https://user-images.githubusercontent.com/5082376/36603941-9efb60be-18bc-11e8-9f2d-015da1fa214a.png)\r\n", "branch": "master", "changed_files": 12, "closed_at": "1519896071", "comments": 24, "commits": 5, "created_at": "1519398727", "deletions": 348, "labels": ["alca-pending", "code-checks-pending", "comparison-pending", "dqm-pending", "orp-pending", "pending-signatures", "tests-pending"], "milestone": "CMSSW_10_1_X", "number": 22320, "release-notes": [], "review_comments": 0, "state": "closed", "title": "RFC: Migrate SiStripGainsPCLWorker to concurrent and global DQM", "updated_at": "1519896071", "user": "mmusich"}