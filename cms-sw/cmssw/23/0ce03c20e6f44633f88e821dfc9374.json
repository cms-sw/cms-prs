{"additions": 354, "auther_ref": "useFakeBSasFallBackInOnlineProducer2", "auther_sha": "63e821e6fe98cfc774029b4f7798053f21fd2153", "author": "mmusich", "body": "#### PR description:\r\n\r\nWhile working on https://github.com/cms-sw/cmssw/pull/41193/, I have noticed that despite `OnlineBeamSpotESProducer`  has a refined logic in order to put into the event setup a fake BeamSpot when certain conditions are not met:\r\n\r\nhttps://github.com/cms-sw/cmssw/blob/a52f2d1ecf97bde0e9f10d45959c88337c481687/RecoVertex/BeamSpotProducer/plugins/OnlineBeamSpotESProducer.cc#L168-L174\r\n\r\nthe current `BeamSpotOnlineProducer` logic, if `useTransientRecord_` is true and the  `OnlineBeamSpotESProducer` returned a fake beamspot, just falls back to DB (reading the content of `BeamSpotObjectsRcd`, populated by the PCL in realtime workflows)  - which I have understood from the Beam Spot experts (@gennai) is not the right / expected behaviour.\r\n\r\nhttps://github.com/cms-sw/cmssw/blob/a52f2d1ecf97bde0e9f10d45959c88337c481687/RecoVertex/BeamSpotProducer/plugins/BeamSpotOnlineProducer.cc#L104-L111\r\n\r\nIn this PR (in commit ec786fe40171051cc0b63074795fe6dedeeed2eb) I change the current behaviour, such that instead now it will indeed produce a fake BS for consumption online (as it was originally devised).\r\nThis has a consequence, that in the case in which we want indeed to fall-back to DB (e.g. for the Phase-2 HLT testing case, after https://github.com/cms-sw/cmssw/pull/41193), the change will alter physics in an undesired way. For this reason, it has been necessary to supply to the `auto:phase2_realistic` GlobalTag key the right  `BeamSpotOnline*ObjectsRcd` payloads in order for the  `OnlineBeamSpotESProducer` to not pick up a fake BeamSpot. This is done in commit  5fbea8ac08aea2e828674374d12c50f7b254d9d9, while commit 30121dd26d054de4f81106233278183baf9da685 sets the the time threshold to `1e6` seconds (as it's done for the Run-3 menus, see https://github.com/cms-sw/cmssw/pull/41193/files#r1152358315) to the same effect.\r\nThe difference in Global Tags is:\r\n   * https://cms-conddb.cern.ch/cmsDbBrowser/diff/Prod/gts/131X_mcRun4_realistic_v4/131X_mcRun4_realistic_v5\r\n\r\n\r\n\r\nTo supply such payloads, I have found convenient to create a new plugin `BeamSpotOnlineFromOfflineConverter` that taking a `BeamSpotObject` in input creates an sqlite file in output containing a payload of the type `BeamSpotOnlineObjects`. This has been added in commit e870b172a627b65f531f710e41aecacef1d12c7c, while commits a03a99d5a5bb21ea5bdf1ef852b8845d336f4f34 and a03a99d5a5bb21ea5bdf1ef852b8845d336f4f34 add a utility accessor to the `BeamSpotOnlineObjects` condtion format to be able to readily copy from a `BeamSpotObjects` payload (friend class) all the common parameters. Finally commit ecd817c8349e160a65930c6da4eaf5248419dc98 adds this converter to the battery of unit tests of the `CondTools/BeamSpot` package. \r\n\r\n#### PR validation:\r\n\r\n`cmssw` complies. Passes back unit tests.\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nTo be backported down to 13.0.X for 2023 data-taking purposes\r\n\r\n@francescobrivio @dzuolo ", "branch": "master", "changed_files": 8, "comments": 12, "commits": 7, "created_at": "1683628619", "deletions": 32, "labels": ["reconstruction-pending", "alca-approved", "hlt-approved", "pending-signatures", "tests-approved", "orp-pending", "db-approved", "code-checks-approved", "tracking"], "milestone": "CMSSW_13_2_X", "number": 41597, "release-notes": [], "review_comments": 0, "state": "open", "title": "Produce a fake `BeamSpot` object in `BeamSpotOnlineProducer` when using transient record logic and `OnlineBeamSpotESProducer` returned a fake", "updated_at": "1683821542", "user": "mmusich"}