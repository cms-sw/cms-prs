{"additions": 4, "auther_ref": "ml-clang-ana-warn3", "auther_sha": "d97cd34d468129c70ea333bae49f4911bed3255c", "author": "smuzaffar", "body": "This change fixes [clang-analyzer warning](https://cmssdt.cern.ch/SDT/jenkins-artifacts/ib-static-analysis/CMSSW_14_2_X_2024-10-09-2300/el8_amd64_gcc12/build-logs/PhysicsTools/MVAComputer/log.html) with complete report at this [link](https://cmssdt.cern.ch/SDT/jenkins-artifacts/ib-static-analysis/CMSSW_14_2_X_2024-10-09-2300/el8_amd64_gcc12/llvm-analysis/report-d98050.html#EndPath) . It is true that we [only initialize](https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/MVAComputer/src/ProcMLP.cc#L106-L107) the `tmp` memory for first `iter`number of items. \r\n\r\nThis Pr replaces `alloca` with `calloc` which should initialize the memory to `0` and also adds protection to make sure that `maxTmp` is greater than the layer's inputs (otherwise `input[j]` can access out of range memory)\r\n\r\n\r\n```\r\n  src/PhysicsTools/MVAComputer/src/ProcMLP.cc:117:27: warning: The left operand of '*' is a garbage value [core.UndefinedBinaryOperatorResult]\r\n   117 |           sum += input[j] * *coeff++;\r\n```\r\n", "branch": "master", "changed_files": 1, "comments": 5, "commits": 1, "created_at": "1728630699", "deletions": 1, "labels": ["pending-signatures", "orp-pending", "tests-started", "code-checks-approved", "ml-pending"], "milestone": "CMSSW_14_2_X", "number": 46350, "release-notes": [], "review_comments": 0, "state": "open", "title": "[ML][Clang]clang-analyzer, initialize memory and add protection against", "updated_at": "1728631195", "user": "smuzaffar"}