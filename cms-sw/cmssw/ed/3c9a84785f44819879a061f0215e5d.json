{"additions": 125, "auther_ref": "allow_query_timeouts", "auther_sha": "2ef8f99d56099c444e1ef58b0007881b59c42865", "author": "bbockelm", "body": "To query a filesystem property, a free callback thread is needed\nwith the default synchronous versions of XrdCl::FileSystem methods.\n\nThus, if the synchronous method is called from a _callback thread_,\nthen there must be an idle thread to handle the response; if there\nare N threads in the pool and N simultaneous queries, then the\nfilesystem query would cause a deadlock.\n\nWorse yet, the timeout mechanism for XrdCl relies on an idle callback\nthread to function.\n\nAs making the synchronous query asynchronous in its currrent use case\nis quite hard, I only partially solved the problem: wrote a new\nresponse handler that can timeout without an idle thread.\n\nTechnically, any version of CMSSW 7_6 or later should be affected.  Pragmatically, do we actually open multiple files simultaneously except in the threaded mixing module?\n", "branch": "CMSSW_8_0_X", "changed_files": 3, "closed_at": "1454099523", "comments": 29, "commits": 4, "created_at": "1453838761", "deletions": 6, "labels": ["comparison-available", "core-approved", "fully-signed", "orp-pending", "tests-approved"], "merge_commit_sha": "02f64241b6dbca19c4b5a871b3cf5e1a24c501a6", "merged_at": "1454099523", "merged_by": "davidlange6", "milestone": "CMSSW_8_0_X", "number": 13080, "release-notes": [], "review_comments": 7, "state": "closed", "title": "Allow FileSystem queries to occur from callback threads.", "updated_at": "1454099523", "user": "bbockelm"}