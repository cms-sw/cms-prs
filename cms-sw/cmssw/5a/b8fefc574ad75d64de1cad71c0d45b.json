{"additions": 166, "auther_ref": "dqm-allow-dqmendlumi-in-dqmoneedanalyzer", "auther_sha": "be52986a455f1de91fec935b3ec8b8980d36cd15", "author": "schneiml", "body": "#### PR description:\r\n\r\nThis PR adds `dqmEndLuminosityBlock` to `DQMOneEDAnalyzer`.\r\n\r\nTurns out we can set `EndLuminosityBlockProducer` without using `WatchLuminosityBlocks`?\r\n(Edit: no, this also blocks concurrent lumis. Back to the drawing board then.)\r\n\r\nThat gives an option to enable `dqmEndLuminosityBlock` by default.\r\n\r\nThis is once again risky, since the semantics now are subtly different compared to 2018:\r\nThe same callbacks exist, but events of multiple lumis can arrive alternatingly.\r\nThis could lead to subtle bugs. The good thing is, we have eliminated almost\r\nall usages of the old API, so we know there are not many places where such bugs\r\ncould happen.\r\n\r\n`globalEndLuminosityBlock` in DQM modules is banned in favor of `dqmEndLuminosityBlock` now for consistency, and all existing users changed. The semantics might be slightly different (the EDM docs hint that some lumi products might not be availale in `ennLuminosityBlockProduce`, but in `globalEndLuminostyBlock`, let's see if this survives validation.\r\n\r\n#### PR validation:\r\n\r\nCompiles.\r\n\r\nFurther validation needed. \r\n", "branch": "master", "changed_files": 43, "closed_at": "1593523044", "comments": 25, "commits": 5, "created_at": "1592823392", "deletions": 141, "labels": ["code-checks-approved", "comparison-pending", "dqm-pending", "hold", "l1-pending", "orp-pending", "pending-signatures", "tests-pending"], "milestone": "CMSSW_11_2_X", "number": 30326, "release-notes": [], "review_comments": 0, "state": "closed", "title": "DQM: Allow end lumi work in DQMOneEDAnalyzer", "updated_at": "1593523044", "user": "schneiml"}