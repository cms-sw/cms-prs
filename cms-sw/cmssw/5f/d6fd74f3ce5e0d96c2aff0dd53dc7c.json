{"additions": 7, "auther_ref": "guardStreamLumiStatus", "auther_sha": "76c986b832c882c8e0017f2118aeff15f582a228", "author": "Dr15Jones", "body": "The member variable streamLumiStatus_ in EventProcessor is a vector containing status information for each stream. The framework needs to know how many streams are still processing a Lumi. Before, it checked the status of each item in the container. However, looking at that entry was not guaranteed to be synchronized across all threads. Adding streamLumiActive_ atomic variable allows the check to be done just by reading the atomic plus the atomic functions as a way to guarantee that the entry information can safely be read across threads. This is done by having streamLumiActive_ be written right after streamLumiStatus_ entry was changed and then read from streamLumiActive_ before reading the entry from streamLumiStatus_.", "branch": "master", "changed_files": 2, "comments": 13, "commits": 1, "created_at": "1521145474", "deletions": 10, "labels": ["code-checks-approved", "comparison-notrun", "core-approved", "fully-signed", "orp-pending", "tests-rejected"], "milestone": "CMSSW_10_1_X", "number": 22637, "release-notes": [], "review_comments": 0, "state": "open", "title": "Provide guard for streamLumiStatus_", "updated_at": "1521213257", "user": "Dr15Jones"}