{"additions": 8, "auther_ref": "serialization_1", "auther_sha": "8c9d152a081d5d8d6d7b9359a5718f829421fef6", "author": "guitargeek", "body": "In the eos-portable-archive sources that were copy-pasted into `CondFormats/Serialization`, the boost implementation detail `fp_traits<T>::value` is used, which is expected to resolve to `fp_traits_non_native` that has the `bits` and `set_bits` attributes, which are used in the code.\r\n\r\nBut depending on the compiler flags, `fp_traits<T>::value` can also resolve to `fp_traits_native`, which doesn't have `bits` and `set_bits`. It only works when `BOOST_MATH_DISABLE_STD_FPCLASSIFY` is set.\r\n\r\nTo make the CMSSW code compile independent of the boost flags, this commit suggests to directly use `fp_traits_non_native` in exactly the same way as it is used inside `fp_traits` in the\r\n`boost/math/special_functions/detail/fp_traits.hpp` header file from boost:\r\n\r\nhttps://github.com/boostorg/math/blob/master/include/boost/math/special_functions/detail/fp_traits.hpp#L570\r\n\r\nThis PR is part of my ongoing effort of making CMSSW compile on other platforms more easily.\r\n\r\nSee also:\r\nhttps://github.com/daldegam/eos-portable-archive/issues/5", "branch": "master", "changed_files": 2, "comments": 4, "commits": 1, "created_at": "1668413239", "deletions": 6, "labels": ["db-pending", "pending-signatures", "tests-approved", "orp-pending", "code-checks-approved"], "milestone": "CMSSW_12_6_X", "number": 40057, "release-notes": [], "review_comments": 1, "state": "open", "title": "Use `fp_traits_non_native` directly in eos-portable-archive", "updated_at": "1668554551", "user": "guitargeek"}