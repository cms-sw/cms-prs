{"additions": 12, "auther_ref": "jetCorrectorMigrationRecoMET", "auther_sha": "4bbad4f7e0536bc15b20e24e3286982b40d1bb72", "author": "wddgit", "body": "#### PR description:\r\n\r\nThe purpose of this PR is to complete the migration of the deprecated ::JetCorrector class to the newer reco::JetCorrector class in RecoMET/METPUSubtraction/plugins/NoPileUpPFMEtDataProducer.h. This migration is now to the point that there are 5 pull requests under review and when they are merged all uses of the deprecated  JetCorrector will have been removed. This migration started in 2014. I am working on a future PR that will remove the deprecated JetCorrector.h header file and then any code including it will fail to compile.\r\n\r\nI am open to modifying this PR and accomplishing this migration in a different way. Just let me know what you want.\r\n\r\nThe existing behavior of the module is that if one configures the parameter \"jetEnOffsetCorrLabel\" to be a non-empty string, then the function JetCorrector::getJetCorrector is called. When that is called the Framework EventSetup code will always throw an exception. This has been the behavior of the module since 12_3_0, about 1 year. In its current state, the PR modifies the module so that it will detect the non-empty string and then immediately and directly throw an exception. This accomplishes 3 things:\r\n\r\n1. Preserves existing behavior\r\n2. Allows a RECO expert to make further changes at their convenience.\r\n3. Removes the dependence on the deprecated class so I can delete it.\r\n\r\nHere are a couple alternative approaches we could use in this PR:\r\n\r\n- This module is referenced in only 2 cff files in CMSSW (based on a \"git grep\" search). The cff files put them in a Sequence. The Sequences are not referenced anywhere in CMSSW. It appears nothing runs this code. Possibly this is dead code? If you ask, I would be happy to delete this module instead of modifying it. This code was developed in 2014 and looks like serious code that was at some point useful. I do not know whether or not it is worth keeping now.\r\n- It would easy for me to convert the C++ code to use the new reco::JetCorrector. I would be happy to do that as long as RECO would be responsible for testing and modifying configurations and selecting which corrections to use. I'll also run a test and debug errors in my changes if you can tell me how, but I don't want or know how to develop a new test.\r\n\r\nI am also happy to just close this PR and let RECO handle this directly, although we really want to complete this migration soon.\r\n\r\n#### PR validation:\r\n\r\nThis just throws if the affected code is executed.\r\n", "branch": "master", "changed_files": 2, "comments": 2, "commits": 1, "created_at": "1666880278", "deletions": 9, "labels": ["reconstruction-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-approved"], "milestone": "CMSSW_12_6_X", "number": 39875, "release-notes": [], "review_comments": 0, "state": "open", "title": "Migration from deprecated ::JetCorrector class, NoPileUpPFMEtDataProducer", "updated_at": "1666880771", "user": "wddgit"}