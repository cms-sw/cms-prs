{"additions": 135, "auther_ref": "manu_dev", "auther_sha": "9be668bf97412896d3c4c902dafdbfb44037efb8", "author": "manuel-gonzalez-henandez", "body": "#### PR description:\r\n\r\nThis pull request proposes a solution to the issue outlined in https://gitlab.cern.ch/cms-gen/gen_tasklist/-/issues/9. The ResonanceDecayFilter was not correctly accounting for the total number of tried events, leading to an incorrect cross section calculation (as the branching ratio was omitted). To address this, I introduced a counter in ResonanceDecayFilterHook.h to track the number of events vetoed by the filter, along with a function to reset the counter after each event. This data is then passed from Pythia8Hadronizer.cc to GenFilterEfficiencyProducer.cc using an object of the class ResonanceDecayFilterCounter I created.\r\n\r\nThe counter is applied only to the weight counts and not to the event counts, as requested by PDMV, to ensure the event-level GenFilter efficiency excludes the ResonanceDecayFilter information. This exclusion allows PDMV to accurately determine the number of LHE events required to generate a specific number of Gen events.\r\n\r\nAdditionally, I introduced the input_genfilter_efficiency variable in GenXsecAnalyzer.cc to ensure that when the ResonanceDecayFilter is enabled, the filter efficiency is always calculated using weight counts (where the filter information is stored) instead of event counts. This adjustment ensures consistent efficiency calculations for both LO and NLO processes and includes the filters contribution.\r\n\r\nExpected changes to the output are as follows:\r\n1. In the GenFilter luminosity block of the final root file, the sumtotal_w and sumtotal_w2 values now incorporate the ResonanceDecayFilter information, reflecting the true total number of tried events.\r\n2. In GenXsecAnalyzer.cc, the \"Filter efficiency (taking into account weights)\" now includes this filters contribution, which accounts for the branching ratio. Consequently, the final cross section and equivalent luminosity are calculated correctly, incorporating the branching ratio.\r\n\r\n#### PR validation:\r\n\r\nTo verify the correctness of the cross section calculation, I used the LO Radion_GF_HH_M300_narrow gridpack (as referenced in https://gitlab.cern.ch/cms-gen/gen_tasklist/-/issues/9) and a simple NLO ttbar custom gridpack that I generated for testing. In both cases, the resulting cross section was calculated correctly.\r\n\r\nI also performed the checks outlined in https://cms-sw.github.io/PRWorkflow.html. Specifically, I executed the runTheMatrix suite of tests, which resulted in four errors in the following workflows:\r\n\r\n312.0 Pyquen ZeemumuJets_pt10 2760GeV_2022 (Step0-FAILED)\r\n25202.0 TTbar_13 (Step1-FAILED)\r\n14234.0 TTbar_14TeV+2023FSPU (Step1-FAILED)\r\n250202.181 TTbar13TeVPUppmx2018 (Step1-FAILED)\r\n\r\nEach of these failures was due to \"No such file or directory\" errors caused by missing .root files. To investigate further, I ran the same runTheMatrix tests using an unmodified version of CMSSW_14_2_0_pre3 and observed identical errors. This strongly indicates that the issues are unrelated to my modifications.\r\n\r\nAdditionally, I adhered to the coding and style guidelines by running the commands scram build code-checks (which reported no diagnostics) and scram build code-format.\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nThis PR is not a backport.\r\n", "branch": "master", "changed_files": 8, "comments": 12, "commits": 5, "created_at": "1731941087", "deletions": 27, "labels": ["generators-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-pending"], "milestone": "CMSSW_15_1_X", "number": 46725, "release-notes": [], "review_comments": 0, "state": "open", "title": "Fix cross section when using ResonanceDecayFilter", "updated_at": "1746607320", "user": "manuel-gonzalez-henandez"}