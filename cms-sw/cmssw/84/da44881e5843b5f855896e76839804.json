{"additions": 1689, "auther_ref": "aot_interface_14_1_X", "auther_sha": "2551773ee8b580d22fb09b8bc8e404d09128e0a2", "author": "riga", "body": "#### PR description\r\n\r\nThis PR adds the interface for using ahead-of-time (AOT) compiled TensorFlow models, as presented in the [core software meeting on Dec 12](https://indico.cern.ch/event/1356289/#19-ahead-of-time-compilation-o) (@Bogdan-Wiederspan).\r\n\r\nThe accompanying cmsdist PR is https://github.com/cms-sw/cmsdist/pull/9005.\r\n\r\nAs discussed before (see talk above), we would like to propose a 2-stage integration process:\r\n\r\n1. _This_ PR includes two main components.\r\n    - A general interface for working with statically batched AOT models, as they do not support dynamic batching out-of-the-box. AOT models are only accessible after the AOT compilation process that provides one header and one object file per batch size. The compilation is based on a TF-shipped command-line tool `saved_model_cli` that we wrapped through the [external `cmsml` package](https://github.com/cms-ml/cmsml/pull/10) that is included through the cmsdist PR linked above. The interface wraps functionality to handle multiple batch sizes and provides a convenience layer on top of the rather low-level AOT objects (for instance to evaluate a model with n inputs and m outputs of different types).\r\n    - As models now technically become software dependencies (as they are used through compiled code), we included a \"development workflow\" that allows groups to test their models locally without having to go through the `cms-external  cmsdist  toolfile` steps (see stage 2 below). This workflow can be triggered through a simple script, `PhysicsTools/TensorFlowAOT/scripts/compile_model.py`, that mimics the integration workflow and provides a tool file that plugins can `<use ...`.\r\n2. In a second stage we would include test models (and maybe a first port of an existing production model) as a cms-external with a spec file in cmsdist to (AOT) compile them as a software dependency, including a tool file that plugins in CMSSW could use (for instance, say, `<use name=\"tfaot-model-btv-deepflavor\"/>`).\r\n\r\n\r\n#### PR validation\r\n\r\nWe added test cases for the development workflow and the general compilation procedure. A third test case is implemented but disabled for now, as it requires header and object files of previously compiled models. We would enable this test in the second stage of the integration process.\r\n\r\n@valsdav @ml-l2", "branch": "master", "changed_files": 19, "comments": 3, "commits": 2, "created_at": "1707742335", "deletions": 0, "labels": ["pending-signatures", "tests-pending", "orp-pending", "new-package-pending", "code-checks-pending"], "milestone": "CMSSW_14_1_X", "number": 43941, "release-notes": [], "review_comments": 0, "state": "open", "title": "Add TF AOT interface.", "updated_at": "1707758130", "user": "riga"}