{"additions": 122, "auther_ref": "devel_106X_puppi_speedup5", "auther_sha": "9ed0cf651803b39a65ad1a358d680f10cb1322f5", "author": "missirol", "body": "#### PR description:\r\n\r\nThis PR is an attempt to backport the changes in #31164.\r\n\r\nThis backport follows in large part the original PR, but it is not entirely trivial; this is due to the significant differences in the `PuppiProducer`'s implementation in `10_6_X` (wrt later releases), and the need to not introduce any numerical changes in the outputs (no-change policy).\r\n\r\nThese requirements led to adding more members to the `PuppiCandidate` struct (compared to the original PR):\r\n\r\n* an `int` named `puppi_register`, due to the fact that in this release a given Puppi candidate has two IDs associated to it (named puppi \"register\" and puppi \"id\" in the source code), while in `11_X` only one is used (currently called `id`);\r\n\r\n* four floats (`px`, `py`, `pz`, `e`) for the candidate's p4; this is used in the `PuppiProducer` when storing the candidates kinematics (see `puppiP4s` in the `PuppiProducer`; in `11_X`, things are done differently and this change was not needed); recomputing `(px,py,pz,e)` on-the-fly based on `(pt,eta,phi,m)` would introduce small numerical changes in the outputs, and the only way I found to avoid this was to add more members to the `PuppiCandidate` struct.\r\n\r\nThe improvement in computational performance is approx. 45% (from ~27ms to ~15ms for one instance of the `PuppiProducer` in the `PAT` step of a 2017 MC workflow); this is slighly less than the speedup in the original PR (which was closer to 60%), maybe partly due to the fact that the `PuppiCandidate` struct here includes more data members.\r\n\r\nA couple of minor changes from #31164 in `PuppiContainer.h` (renaming of a data member, and removal of an unused getter) are avoided here for simplicity.\r\n\r\nNo changes in the outputs are expected.\r\n\r\nFYI: @ahinzmann @lathomas @kirschen\r\n\r\n#### PR validation:\r\n\r\nChecked that the PUPPI weights of all PF candidates are unchanged for 500 events of a 2017 MC workflow (`PAT` step), for both `puppi` (used for jets) and `puppiNoLep` (used for MET).\r\nStandard workflows, i.e. `runTheMatrix.py -l limited -i all --ibeos`, ran successfully.\r\n\r\n#### if this PR is a backport please specify the original PR and why you need to backport that PR:\r\n\r\n#31164\r\n\r\n(with limited modifications needed to enforce the no-change policy)\r\n\r\nThis speeedup could be useful for UL re-miniAOD and analysis.", "branch": "CMSSW_10_6_X", "changed_files": 6, "closed_at": "1599230900", "comments": 21, "commits": 2, "created_at": "1598675081", "deletions": 103, "labels": ["analysis-approved", "backport-ok", "comparison-available", "fully-signed", "orp-approved", "reconstruction-approved", "tests-approved"], "merge_commit_sha": "146469721f3dc1e7bd97523b58e4c8e99aa22f43", "merged_at": "1599230900", "merged_by": "cmsbuild", "milestone": "CMSSW_10_6_X", "number": 31290, "release-notes": [], "review_comments": 2, "state": "closed", "title": "[10_6_X] improving performance of PuppiProducer", "updated_at": "1599308549", "user": "missirol"}