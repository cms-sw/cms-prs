{"additions": 454, "auther_ref": "cleanup_associationMap_14_2_0_pre3", "auther_sha": "6f849cb391935f11a9154332825c348b13f3f1bb", "author": "felicepantaleo", "body": "This pull request introduces a comprehensive enhancement of the `TICLAssociationMap` class and updates the modules that depend on it to improve flexibility, readability, and performance for association handling within the TICL framework.\r\n\r\n\r\n- Refactoring of `TICLAssociationMap`:\r\n  - Introduced new wrapper types `FractionType` and `SharedEnergyType` to differentiate between fraction and shared energy values more clearly.\r\n  - Created a generic `AssociationElement` class to manage indices and associated values, including methods for fractional and shared energy access and accumulation operations.\r\n  - Restructured map definitions to make use of `AssociationElement` for better encapsulation and flexibility in handling different types of associations.\r\n  - Enhanced sort() Method in `AssociationMap`:\r\n    - Tie-Breaker for Reproducibility: The sort() method now includes a tie-breaker based on indices when sorting elements with equal values (e.g., score, fraction, or sharedEnergy). This ensures that the sorting is reproducible and consistent across runs.\r\n    - Custom Comparator Support: An overloaded sort() method has been added to accept a custom comparison function. This provides users with the flexibility to define their own sorting criteria based on specific needs.\r\n  - Initialization of `AssociationElement` with Invalid State:\r\n  - Invalid Default State: Modified the `AssociationElement` class to initialize elements in an invalid state by default. This is achieved by setting the `index_` to `std::numeric_limits<unsigned int>::max()` and `value_` to `-1.f `for relevant types.\r\n  - Updated various producers and consumers of the `TICLAssociationMap` to work with the enhanced API.\r\n  - Replaced direct vector manipulation with the new `AssociationElement` for consistency and code clarity.\r\n  \r\nBug fixes:\r\n  - The maps are now sorted by score in ascending order, and the sorting is made reproducible by including the tie-breaker based on indices. This fixes the wrong behavior shown in DQM plots of best associated trackster and second best associated trackster\r\n  - Fixed Access Issues: In HGVHistoProducerAlgo.cc, replaced direct indexing with the .at() method when accessing the scToCpMap. \r\n  - Fixed insert() in one-to-one maps \r\n- Validation and Testing:\r\n  - Adjusted validation and monitoring code in modules such as `HGCalValidator` and `TICLCandidateValidator` to align with the new data structures and API changes.\r\n- Make the association maps persistent.\r\n- Include SimTauProducer in the event content for ticlv5", "branch": "master", "changed_files": 21, "comments": 25, "commits": 9, "created_at": "1731591131", "deletions": 966, "labels": ["reconstruction-pending", "simulation-pending", "dqm-pending", "pending-signatures", "tests-rejected", "orp-pending", "upgrade-pending", "code-checks-approved", "hgcal", "changes-dataformats"], "milestone": "CMSSW_15_0_X", "number": 46700, "release-notes": [], "review_comments": 3, "state": "open", "title": "Improve TICL Association Map and update TICL event content", "updated_at": "1732900925", "user": "felicepantaleo"}