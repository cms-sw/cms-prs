{"additions": 87, "auther_ref": "hitPairEDProducerAbortEarlier", "auther_sha": "17445d638a50b574f90a019c4c4a6f97c6e4631c", "author": "makortel", "body": "#### PR description:\r\n\r\nThis PR is an attempt to reduce memory usage in the case reported in https://github.com/cms-sw/cmssw/issues/41457 following my question in https://github.com/cms-sw/cmssw/issues/41457#issuecomment-1532312159. It is currently an RFC as it was not clear from the discussion in https://github.com/cms-sw/cmssw/issues/41457 if this approach would be acceptable from the physics point of view (@cms-sw/tracking-pog-l2 @cms-sw/egamma-pog-l2). Because of that I'm taking a shortcut in the usual procedure and opening this PR in 13_0_X branch where I did the development (and because I expect the forward port to master to be more complex than a simple cherry-pick). If this approach is deemed viable, I'll make the `master` PR as well and we can proceed as usual.\r\n\r\nThis PR adds a configuration option `putEmptyIfMaxElementReached` (better name welcome)  to `HitPairEDProducer` (defaults to `true`), that will make the `HitPairEDProducer` to \"abort\" the processing and put empty data products into the Event also in the case where any layer pair yields more doublets than the `maxElement` threshold, in addition of the condition of the total number of doublets from all layer pairs reaching `maxElementTotal`.\r\n\r\nMy assumption is that hit doublets only from a subset of the layer pairs (when the number of doublets from at least one layer pair reaches the `maxElement` limit) is not useful from the physics point of view, and the doublets could as well just be ignored.\r\n\r\n#### PR validation:\r\n\r\nThe peak RSS of a one-thread job processing only the 366498:1:210235 event decreased from 6866.44 MB to 3562.07 MB.\r\nThe peak RSS of an 8-thread job processing all the 73 events decreased from 14913.4 MB to 13035.6 MB (some grain of salt needed as the peak RSS can vary between job executions).\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nA `master` PR is to be done if this approach is deemed viable.", "branch": "CMSSW_13_0_X", "changed_files": 6, "comments": 1, "commits": 1, "created_at": "1683131485", "deletions": 53, "labels": ["reconstruction-pending", "pending-signatures", "tests-pending", "orp-pending", "tracking"], "milestone": "CMSSW_13_0_X", "number": 41514, "release-notes": [], "review_comments": 1, "state": "open", "title": "[RFC][13_0_X] Make HitPairEDProducer to put empty data products if number of hit pairs for any layer pair go over the limit", "updated_at": "1683132882", "user": "makortel"}