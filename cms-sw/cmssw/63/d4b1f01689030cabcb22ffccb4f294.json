{"additions": 584, "auther_ref": "csc_adapt_bad_channels_for_unganged_me11a", "auther_sha": "994ad4cae8a598984a708f8738ce2a75302c8887", "author": "ptcox", "body": "This updates CSC bad channel handling in local reco to allow extension to unganged ME11A channels. Amazingly tricky to do this because the extra channels are appended to the bad channels conditions data. At the same time I decided it was more sensible to change the way the bad channels data are handled. Until now, each time the conditions data changes, the bad channels information was unpacked and stored in a large vector - one 80-bit bitset for the 80 strip channels of each layer in the CSC system: there are 3240 layers in the system. There is also a 112-bitset for the possible bad wiregroups in each layer. However, with unganged ME11A instead of 80 strip channels, we'd have to increase to 64+48=112 bits for the bad strip channels too. So I've changed the approach so the bitsets for a given layer are filled only when that layer is being reconstructed. This saves on storage at the expense of computing time, which is basically trivial. This change is made in CSCConditions, a class in CalibMuon/CSCCalibration, which is our interface to CSC conditions data. There are NO changes to actual conditions data handling - just how the local reco accesses it once it is available. This is done in RecoLocalMuon/CSCRecHitD, where rechits are built. CSCConditions is also used in SimMuon/CSCDigitizer, but the bad channels part is NOT used there (since we don't know how to simulate bad channels even if we know somewhere in the complex change from detector element to read-out signal something is broken.) So there is NO change to Sim code.  I added a new test analyzer for the bad channels handling in CSCRecHitD, called CSCRecoBadChannelsAnalyzer. This has a new config in CSCRecHitD/test. I also updated the sample config file for the rechit builder to 72X level. This is run_on_raw_72X.py also in CSCRecHitD/test. I have run on 2500 events from a real data 2012 SingleMu raw relval sample and dumped all rechits built and find identical output for the new code and the old code. I have also run runTheMatrix.py -s --useInput all and this completes with no errors.\n", "branch": "CMSSW_7_3_X", "changed_files": 26, "closed_at": "1412611017", "comments": 12, "commits": 27, "created_at": "1412609349", "deletions": 157, "labels": ["alca-pending", "analysis-pending", "comparison-pending", "core-pending", "db-pending", "dqm-pending", "fastsim-rejected", "generators-pending", "operations-pending", "pending-signatures", "reconstruction-pending", "simulation-rejected", "tests-pending"], "milestone": "Next CMSSW_7_3_X", "number": 5707, "release-notes": [], "review_comments": 0, "state": "closed", "title": "cdc adapt bad channels for unganged me11a", "updated_at": "1412660696", "user": "ptcox"}