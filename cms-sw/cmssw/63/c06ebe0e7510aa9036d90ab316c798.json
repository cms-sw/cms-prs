{"additions": 37, "auther_ref": "fixAllowed", "auther_sha": "ea8bf89ef99eed0efa4a2ff72880aca5df0763be", "author": "makortel", "body": "#### PR description:\r\n\r\nWhile working with something else I came to wonder the indentation level of\r\n```python\r\n            if chosenType is None:\r\n                raise RuntimeError(\"Cannot convert \"+str(value)+\" to 'allowed' type\")\r\n```\r\nin `_AllowedParameterTypes.__call__()`. It looked to me that the loop where the `if` is would execute exactly one iteration over the allowed types. Extending the unit tests to check also setting of one of the later types confirmed that this is indeed the case. This PR proposes to fix the problem by moving the check above to be done after the loop over types (which possibly was the intention).\r\n\r\nIn addition, I added tests to exercise the exception in ambiguous cases.\r\n\r\n#### PR validation:\r\n\r\nFramework unit tests run.", "branch": "master", "changed_files": 1, "closed_at": "1566561530", "comments": 11, "commits": 2, "created_at": "1565875723", "deletions": 2, "labels": ["code-checks-approved", "comparison-available", "core-approved", "fully-signed", "orp-approved", "tests-approved"], "merge_commit_sha": "e6cbd9c08f5d21b3627610c13b86ddc2f10815db", "merged_at": "1566561530", "merged_by": "cmsbuild", "milestone": "CMSSW_11_0_X", "number": 27784, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Fix 'allowed' configuration construct to deduce also later types than just the first one", "updated_at": "1566561530", "user": "makortel"}