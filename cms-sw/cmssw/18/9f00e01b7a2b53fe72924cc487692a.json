{"additions": 119, "auther_ref": "alpakaCachingAllocatorFreeException_140X", "auther_sha": "ee87ccd907445e01845444252a26171521df0ee8", "author": "makortel", "body": "#### PR description:\r\n\r\nBackport of https://github.com/cms-sw/cmssw/pull/44730. Original description\r\n> #44634 reported an HLT job failure caused by an illegal memory access on a GPU. The failure was reported as a crash instead of a caught exception because of a second exception being thrown from `CachingAllocator<T>::free()` by `alpaka::enqueue()` when objects using cached allocations were being deleted as part of the stack unwinding of the original exception.\r\n> \r\n> The `alpaka::enqueue()` is used in `CachingAllocator<T>::free()` to \"record\" the alpaka Event in the Queue when the freed memory block is supposed to be recached. This PR changes the behavior such that if `alpaka::enqueue()` throws an exception, the memory block is treated as freed instead of recached.\r\n> \r\n> I checked the alpaka Buffers, Queues, and Events that their destructors do not throw exceptions, but report any errors from the underlying APIs as printouts.\r\n\r\n#### PR validation:\r\n\r\nSee https://github.com/cms-sw/cmssw/pull/44730\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nBackport of https://github.com/cms-sw/cmssw/pull/44730", "branch": "CMSSW_14_0_X", "changed_files": 3, "comments": 3, "commits": 1, "created_at": "1713354932", "deletions": 1, "labels": ["pending-signatures", "tests-pending", "orp-pending", "heterogeneous-pending"], "milestone": "CMSSW_14_0_X", "number": 44763, "release-notes": [], "review_comments": 0, "state": "open", "title": "[14_0_X] Ignore errors from `alpaka::enqueue()` in `CachingAllocator::free()`", "updated_at": "1713354964", "user": "makortel"}