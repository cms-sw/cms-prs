{"additions": 453, "auther_ref": "storemuonhits_nothinning", "auther_sha": "1caf73f136ce3c8716f7de164d266c247e566bcc", "author": "bendavid", "body": "Precision measurements using muons might want to be able to refit the muon tracks (and the momentum scale corrections for W mass are moving in this direction).\r\n\r\nThis PR adds thinned collections of TrackExtra and the corresponding TrackingRecHits and Strip/Pixel clusters to AOD for those tracks which are associated to muon::bestTrack() with some cuts applied to the muons.\r\n(this means that for most muons with pt<200GeV only the pixel and strip rechits are stored and not the muon chamber ones, because bestTrack points to the inner track unless the muon is purely standalone). This behaviour could be modified if desired to store some additional trackExtra/hits for the global track.\r\n\r\nThe cut applied to the muons to store the extra information in AOD is pt>3.0 GeV.\r\n\r\nA further reduced set of collections is stored in MINIAOD, applying a 4.5 GeV cut on top of the selectedPatMuons (such that the extra cuts in https://github.com/cms-sw/cmssw/blob/ee9e9ae286520cc8c458ac991da3f4b0c7fbea75/PhysicsTools/PatAlgos/python/slimming/miniAOD_tools.py#L118 are implicitly included)\r\n\r\nThis is a fallback alternative to https://github.com/cms-sw/cmssw/pull/30544 in case the needed framework functionality is not integrated quickly enough to backport this to 10_6 in time for the restart of the UL MC campaigns.  (Since the AOD event content is modified it would be highly desirable to have this in for consistency purposes)\r\n\r\nThis PR does not touch any existing producers in the RECO sequence and only adds additional collections.  Small modifications are made to the PATMuonSlimmer in the MINIAOD sequence.\r\n\r\nTested using 11834.0 (TTbar 2021 realistic with PU Run3_Flat55To75_PoissonOOTPU) 500 events.\r\n\r\nThe additional collections in AOD are:\r\n```\r\nBranch Name | Average Uncompressed Size (Bytes/Event) | Average Compressed Size (Bytes/Event) \r\nrecoTrackExtras_muonReducedTrackExtras__RECO. 951.718 619.05\r\nSiStripClusteredmNewDetSetVector_muonReducedTrackExtras__RECO. 704.88 312.796\r\nSiPixelClusteredmNewDetSetVector_muonReducedTrackExtras__RECO. 521.332 288.952\r\nTrackingRecHitsOwned_muonReducedTrackExtras__RECO. 2374.61 268.714\r\nrecoTrackExtrasedmAssociation_muonReducedTrackExtras__RECO. 9695.24 135.65\r\n```\r\n(and the total size per event increases from 672 kB to 674 kB for a 0.25% increase)\r\n\r\n\r\nThe additional collections in MINIAOD are:\r\n```\r\nBranch Name | Average Uncompressed Size (Bytes/Event) | Average Compressed Size (Bytes/Event) \r\nTrackingRecHitsOwned_slimmedMuonTrackExtras__RECO. 1919.71 387.802\r\nrecoTrackExtras_slimmedMuonTrackExtras__RECO. 639.646 303.8\r\nSiStripClusteredmNewDetSetVector_slimmedMuonTrackExtras__RECO. 368.938 157.746\r\nSiPixelClusteredmNewDetSetVector_slimmedMuonTrackExtras__RECO. 235.028 100.002\r\n```\r\n(and the total size per event increases from 101.5 kB to 102.4 kB for a 0.9% increase)\r\n\r\nSome drawbacks of this approach with respect to the leveraging of framework thinning and slimming as in https://github.com/cms-sw/cmssw/pull/30544:\r\n-code is based on recursive rekeying and is therefore harder to maintain\r\n-some duplication of reco::TrackExtras which are already stored in AOD (but need to be duplicated in order to have consistent rekeying of references to TrackingRecHits in the reduced collection)\r\n-additional information is not easily accessible at AOD level, because the final reference rekeying only happens during the production of the slimmedMuons at MINIAOD level (but the association maps are present, so it is possible at least)\r\n\r\nSome open points with this PR:\r\n1) information stored is incomplete for phase 2 (but phase 2 workflows should still run)\r\n2) edm::Association is maybe not the most efficient for this purpose (see large uncompressed size, though it compresses fairly well given that most of the references for generalTracks are null)\r\n3) ```edm::Association<reco::TrackExtraCollection>``` required adding additional dictionaries in DataFormats/TrackReco (so this will produce errors when reading the corresponding AOD files with an older release unless dropping those on input)\r\n4) Currently the use of the additional information at the MINIAOD step is DISABLED for Run 2 UL, since the needed collections are not present in the AOD.  If we manage to get this in before the restart of production in the latest 10_6 release, then the process modifiers for Run 2 UL will need to be split into \"new\" and \"old\" variants, with this disabled for Run2ULold, but left enabled for Run2ULnew\r\n\r\nPoint 1) I think can be dealt with in a future PR\r\nFor points 2) and 3) it may be ok as is, but open to suggestions for alternatives to ```edm::Association<reco::TrackExtraCollection>``` for this use case (associating the original TrackExtra references to the reduced collection)\r\n\r\n", "branch": "master", "changed_files": 17, "closed_at": "1599230861", "comments": 96, "commits": 20, "created_at": "1598273245", "deletions": 10, "labels": ["analysis-approved", "code-checks-approved", "comparison-available", "fully-signed", "operations-approved", "orp-approved", "pdmv-approved", "reconstruction-approved", "simulation-approved", "tests-approved", "upgrade-approved"], "merge_commit_sha": "0666b7ed4614f49383e8501329b72b352e4d379f", "merged_at": "1599230861", "merged_by": "cmsbuild", "milestone": "CMSSW_11_2_X", "number": 31217, "release-notes": [], "review_comments": 23, "state": "closed", "title": "Store TrackExtra, TrackingRecHits, and SiPixel/StripClusters for muons in AOD+MINIAOD (Self-contained version without framework thinning)", "updated_at": "1599308567", "user": "bendavid"}