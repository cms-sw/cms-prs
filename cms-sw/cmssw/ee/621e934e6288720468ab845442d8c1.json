{"additions": 3371, "auther_ref": "GenWeightRefactor_master", "auther_sha": "5bbf9bc279e28e172e7223db928ffbd83e1a58d9", "author": "kdlong", "body": "#### PR description:\r\n\r\nThis PR introduces new weight products to hold the Meta Info of the weights, and the weights themselves, organized into groups of a given type (Scale, Pdf, MEParam, etc.)\r\n\r\nThis has been presented several times in GEN and X-POG, such as https://indico.cern.ch/event/944653/#5-status-of-new-data-structure\r\n\r\nThe structure of the products is in place. We are still finalizing the NanoAOD integration and testing for parsing corner cases. We expect these tests to be wrapped up in a couple of weeks, but because of the scale of the changes, it would be useful to have feedback already (I'm sure there will be lost of coding suggestions).\r\n\r\nThis builds on the work of several people, including @dteague @sroychow @guitargeek @cericeci\r\n\r\n@agrohsje and @kpedro88 have contributed to the design and review.\r\n\r\n#### PR validation:\r\n\r\nWe have validated MiniAOD --> NanoAOD, adding products to the event, and GEN-->NanoAOD instantiating products to files. A large testing campaign will take place before NanoAOD v9 and we will report the status here.\r\n\r\n#### NanoAOD and MiniAOD file type size changes\r\n\r\nThe size of the Nano will in general not be changed, by default the same number of PDF and scale weights are stored. The main change is to make the selection of weights to be stored much more convenient, significantly reduce the number of samples where the weights are not found and not stored (makes those individual samples larger but not a big impact on the average), and provides features for keeping more weights in private production.\r\n\r\nThe change in size of the MiniAOD will depend on the strategy we adopt, which I'd like a bit more feedback on. If we duplicate the event weight information, it is a 10% increase. I assume this is not under consideration. If we zero the weights in the existing product (produce a new LHEEventProduct with only the central weight for example), the change will be negligible. If we only ever produce the product on the fly the size change will be 0.\r\n\r\nPerhaps a good option would be to keep the duplicate product at the gen data tier, and zero it out at the MiniAOD step. This requires fixing code that depends on the weights in the LHEEventProduct (Rivet, for example, https://github.com/cms-sw/cmssw/blob/master/GeneratorInterface/RivetInterface/plugins/RivetAnalyzer.cc, but the change is straightforward) and in updating the name of the LHEEventProduct anywhere it is read if it is produced by a new producer (copy previous with zeroed weights). I guess this could be tedious.", "branch": "master", "changed_files": 51, "comments": 104, "commits": 22, "created_at": "1605645236", "deletions": 1303, "labels": ["reconstruction-pending", "generators-pending", "operations-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-pending", "xpog-pending"], "milestone": "CMSSW_12_5_X", "number": 32167, "release-notes": [], "review_comments": 6, "state": "open", "title": "Refactoring gen weight storage in EDM + Nano integration", "updated_at": "1657525659", "user": "kdlong"}