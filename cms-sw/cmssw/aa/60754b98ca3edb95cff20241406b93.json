{"additions": 4412, "auther_ref": "reworkSeeding_v7", "auther_sha": "71a871a05886f9ee289a824b9706294905306e31", "author": "makortel", "body": "Despite of submitting this PR to 81X, this PR really targets (early) 90X (I'm submitting it now in the hope of gaining more time for the review in case L2s would have time to look already now).\r\n\r\nThis PR provides a new way to plug the seeding code to CMSSW. It takes the `TrackingRegion` creation, cluster number check, and doublet/triplet/quadruplet generation out of the seed generator, and makes each of them an EDProducer. The regions, decision of the cluster number check, and the hit doublets/triplets are delivered to subsequent components via `edm::Event`.\r\n\r\nThe implementation is fully backwards compatible, i.e. all existing configurations should work out of the box. Instances of `SeedGeneratorFromRegionHitsEDProducer` can be migrated one at a time. Here the offline iterative tracking is fully migrated (including, with minimal effort, knock-on effects in FastSim and HI), but nothing else (e.g. HLT) is not (yet).\r\n### Pros\r\n- Much more flexibility in interfaces (not more constrained by \"common denominator\")\r\n- `fillDescriptions` fully supported\r\n- For `PixelQuadrupletGenerator`, removes repetitive doublet generation of certain layer pairs\r\n- For `CAHit*Generator`\r\n  - Allows fast regional ntuplet finding\r\n    - No need to do everything per region, but fill CA from all doublets and find ntuplets for all regions simultaneously on one go\r\n  - Allows (easily) to put (e.g.) quadruplets and triplets, found simulateneously on one go, to `Event` as separate collections\r\n    - Can be exploited to reduce repetitive hit triplet generation between iterations\r\n- Allows \"medium-grained\" parallelization\r\n- Opens further optimization possibilities\r\n### Cons\r\n- Additional data structures to deliver information between modules\r\n- More modules to manage in configuration\r\n### Subsequent steps\r\n- Do similar transformation to `PixelTrackProducer`\r\n  - Additional complication from adding fillDescriptions support for fitter, filter, and cleaner\r\n- Migrate all seeding and pixel track modules in HLT (in `customizeHLTforCMSSW.py`)\r\n### Expected effect\r\n\r\nTested in CMSSW_8_1_X_2016-10-04-1100 (rebased on top of CMSSW_8_1_X_2016-11-08-2300), no changes expected in monitored quantities. The expected speedup in 10224 (2017 ttbar+PU) seeding is ~2-3 %. The expected memory increase is ~10 MB (based on IgProf LIVE, `SimpleMemoryCheck` on 6 threads gives similar order of magnitude although across-event variations are larger).\r\n\r\n@rovere @VinInn @mtosi @felicepantaleo \r\n\nAutomatically ported from CMSSW_8_1_X #16202 (original by @makortel).", "branch": "CMSSW_9_0_X", "changed_files": 139, "closed_at": "1480012646", "comments": 119, "commits": 69, "created_at": "1479286140", "deletions": 1399, "labels": ["comparison-available", "dqm-pending", "fastsim-pending", "hlt-pending", "operations-pending", "orp-pending", "pending-signatures", "reconstruction-approved", "tests-approved"], "merge_commit_sha": "547ec9cabe72735bc37d49bfcdf66b1f065808cd", "merged_at": "1480012646", "merged_by": "davidlange6", "milestone": "CMSSW_9_0_X", "number": 16635, "release-notes": [], "review_comments": 11, "state": "closed", "title": "New seeding framework", "updated_at": "1480012646", "user": "cmsbuild"}