{"additions": 10, "auther_ref": "fix-ubsan-from-CMSSW_14_1_X_2024-04-22-1100", "auther_sha": "5876f62f99215d72e20b835aed3bda918bdf4824", "author": "smuzaffar", "body": "In UBSAN IBs, we have  runtime errors like [a]. This PR proposes the following changes\r\n\r\n- No need to have [`std::vector<int> EcalFenixTcpFgvbEE::indexLut_`](https://github.com/cms-sw/cmssw/blob/master/SimCalorimetry/EcalTrigPrimAlgos/interface/EcalFenixTcpFgvbEE.h#L27) to keep track on temp `indexLut`\r\n- No need to do any processing if `EcalFenixTcpFgvbEE::fgee_lut_==0` \r\n- For [nStr>0](https://github.com/cms-sw/cmssw/blob/master/SimCalorimetry/EcalTrigPrimAlgos/src/EcalFenixTcpFgvbEE.cc#L29), `(nStr<<5) will be >=32` causing [`1<<indexLut`](https://github.com/cms-sw/cmssw/blob/master/SimCalorimetry/EcalTrigPrimAlgos/src/EcalFenixTcpFgvbEE.cc#L31) to have undefined dehaviour (shifting more than the size of the integer is undefined behavior)\r\n- Cleanup unnecessary constructor/destructor\r\n\r\n[a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_amd64_gcc12/CMSSW_14_1_UBSAN_X_2024-04-19-2300/pyRelValMatrixLogs/run/5.1_TTbarFS/step1_TTbarFS.log\r\n```\r\nsrc/SimCalorimetry/EcalTrigPrimAlgos/src/EcalFenixTcpFgvbEE.cc:31:18: runtime error: shift exponent 64 is too large for 32-bit type 'int'\r\n    #0 0x154723ca8350 in EcalFenixTcpFgvbEE::process(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >&, int, int, std::vector<int, std::allocator<int> >&) src/SimCalorimetry/EcalTrigPrimAlgos/src/EcalFenixTcpFgvbEE.cc:31\r\n    #1 0x154723d57ec9 in EcalFenixTcp::process_part2_endcap(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >&, int, int, int, EcalTPGLutGroup const*, EcalTPGLutIdMap const*, EcalTPGFineGrainTowerEE const*, EcalTPGTowerStatus const*, std::vector<EcalTriggerPrimitiveSample, std::allocator<EcalTriggerPrimitiveSample> >&, std::vector<EcalTriggerPrimitiveSample, std::allocator<EcalTriggerPrimitiveSample> >&, bool, EcalTrigTowerDetId) src/SimCalorimetry/EcalTrigPrimAlgos/src/EcalFenixTcp.cc:229\r\n    #2 0x154723d5d16d in EcalFenixTcp::process(std::vector<EEDataFrame, std::allocator<EEDataFrame> >&, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >&, int, std::vector<EcalTriggerPrimitiveSample, std::allocator<EcalTriggerPrimitiveSample> >&, std::vector<EcalTriggerPrimitiveSample, std::allocator<EcalTriggerPrimitiveSample> >&, bool, EcalTrigTowerDetId) src/SimCalorimetry/EcalTrigPrimAlgos/src/EcalFenixTcp.cc:96\r\n```", "branch": "master", "changed_files": 3, "comments": 1, "commits": 1, "created_at": "1713806485", "deletions": 16, "labels": ["l1-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-pending"], "milestone": "CMSSW_14_1_X", "number": 44803, "release-notes": [], "review_comments": 0, "state": "open", "title": "[UBSAN] Fix shift exponent 64 is too large for 32-bit", "updated_at": "1713806510", "user": "smuzaffar"}