{"additions": 163, "auther_ref": "SoA_range_checking", "auther_sha": "2fe74705b4ab9590824299e11c39a08a1bb7a823", "author": "ericcano", "body": "#### PR description:\r\n\r\nThis PR adds copy and construction compatibility between `View`s and `ConstView`s (respectively, no const evasion was created) with different template parameters. This allows compile time switching to the range checking variant for debugging. The `View`s are usually used from the `PortableCollections` (and are non range checking). Changing the signature or a function or kernel to use the range checking variant simply requires a type definition change and the creation of a translating variable at the kernel call. The program will then half immediately on range violation.\r\n\r\n#### PR validation:\r\n\r\nThe copy and construction are now validated in a test, as part of this PR. I addition this feature was used and validated to debug an actual out of range error during module debugging.", "branch": "master", "changed_files": 4, "closed_at": "1707316424", "comments": 26, "commits": 4, "created_at": "1686576758", "deletions": 46, "labels": ["fully-signed", "tests-approved", "orp-approved", "code-checks-approved", "heterogeneous-approved"], "merge_commit_sha": "0f181f1408d07694538eaff61896d0d468a95356", "merged_at": "1707316424", "merged_by": "cmsbuild", "milestone": "CMSSW_14_1_X", "number": 41928, "release-notes": [], "review_comments": 6, "state": "closed", "title": "SoA range checking: adds inter operability between range checked and non range checked", "updated_at": "1707316425", "user": "ericcano"}