{"additions": 169, "auther_ref": "SoA_range_checking", "auther_sha": "11c0912206997b886c7a73604ed0ef001e4119f3", "author": "ericcano", "body": "#### PR description:\r\n\r\nThis PR adds copy and construction compatibility between `View`s and `ConstView`s (respectively, no const evasion was created) with different template parameters. This allows compile time switching to the range checking variant for debugging. The `View`s are usually used from the `PortableCollections` (and are non range checking). Changing the signature or a function or kernel to use the range checking variant simply requires a type definition change and the creation of a translating variable at the kernel call. The program will then half immediately on range violation.\r\n\r\n#### PR validation:\r\n\r\nThe copy and construction are now validated in a test, as part of this PR. I addition this feature was used and validated to debug an actual out of range error during module debugging.", "branch": "master", "changed_files": 5, "comments": 14, "commits": 6, "created_at": "1686576758", "deletions": 57, "labels": ["pending-signatures", "orp-pending", "tests-started", "code-checks-approved", "heterogeneous-pending"], "milestone": "CMSSW_13_2_X", "number": 41928, "release-notes": [], "review_comments": 5, "state": "open", "title": "SoA range checking: adds inter operability between range checked and non range checked", "updated_at": "1686746935", "user": "ericcano"}