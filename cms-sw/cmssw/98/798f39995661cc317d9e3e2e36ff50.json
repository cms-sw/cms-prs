{"additions": 37, "auther_ref": "fixBugInEndUnfinishedLumi", "auther_sha": "107c53c3b5b6add884d941bb82be19305a80955f", "author": "wddgit", "body": "#### PR description:\r\n\r\nThis fixes a concurrency problem in the function EventProcessor::endUnfinishedLumi. This problem was noticed while working on a different PR. It was not reported by a user. Conditions for the problem to occur are rare enough that it is possible that it in practice has never occurred.\r\n\r\nFirst endUnfinishedLumi is only called under the following two circumstances:\r\n\r\n1.  An unrelated exception was thrown while closing then opening an input file, after completely processing all runs/lumis/events in the preceding file but before starting runs/lumis/events in the next file. endUnfinishedLumi is called while cleaning up after the other fatal exception.\r\n2. In a merge job when the last input file is empty, not only no events but also no runs or lumis either (which I don't think happens under normal circumstances).\r\n\r\nEven when endUnfinishedLumi is called, an improbable order of execution of the asynchronous tasks has to occur for the problem to occur.\r\n\r\nThis PR also updates the documentation of FinalWaitingTask, both to better describe this potential problem and also because the documentation had become out of date for other reasons.\r\n\r\nResolves https://github.com/cms-sw/framework-team/issues/1320\r\n\r\n#### PR validation:\r\n\r\nExisting tests pass. Also I manually forced such an exception to occur and stepped through the function in a debugger.\r\n", "branch": "master", "changed_files": 2, "comments": 5, "commits": 1, "created_at": "1743014734", "deletions": 9, "labels": ["core-pending", "pending-signatures", "tests-approved", "orp-pending", "code-checks-approved"], "milestone": "CMSSW_15_1_X", "number": 47707, "release-notes": [], "review_comments": 0, "state": "open", "title": "Fix bug in endUnfinishedLumi", "updated_at": "1743022346", "user": "wddgit"}