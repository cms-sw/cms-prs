{"additions": 1842, "auther_ref": "implementAcquire2", "auther_sha": "a2869738d58860d3c1d3ff937086729bb0c4a532", "author": "wddgit", "body": "Implements Framework level support for modules that run in new ways. For example, they might be used to run GPUs, FPGAs, or GEANT V. Initially we expect these modules to be used in prototypes and tests that will direct the path of future development.\r\n\r\nThese new modules are declared as EDFilters or EDProducers in the global or stream namespace with a template parameter of type ExternalWork. These special modules will have a new acquire method in which they are expected to get products from the event and pass that data to an external worker. The external worker is also passed a WaitingTaskWithArenaHolder that it uses to signal the Framework when it is done and also to pass exceptions back to the Framework.  After the external work is complete, the produce or filter method is called as before. A critically important point is that the acquire method returns and is removed from the stack without waiting for the external work to complete. \r\n\r\nExcept for the unit tests included in this PR, no modules currently use this new External Work feature so it should not have any effect on any pre-existing tests.  \r\n\r\n(As a separate PR that will follow this one, I am working on the stall grapher code so that stall grapher will properly account for the new signals related to the acquire method)\r\n \r\n", "branch": "master", "changed_files": 77, "closed_at": "1513057047", "comments": 79, "commits": 15, "created_at": "1512080006", "deletions": 99, "labels": ["code-checks-approved", "comparison-available", "core-approved", "fully-signed", "orp-approved", "tests-approved"], "merge_commit_sha": "e2188ba545ca2f19834bf458d40003ea8d11f10c", "merged_at": "1513057047", "merged_by": "cmsbuild", "milestone": "CMSSW_10_0_X", "number": 21624, "release-notes": [], "review_comments": 29, "state": "closed", "title": "Implement ability to run external work", "updated_at": "1513057047", "user": "wddgit"}