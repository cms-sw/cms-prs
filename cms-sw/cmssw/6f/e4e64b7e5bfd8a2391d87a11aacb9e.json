{"additions": 27, "auther_ref": "intrusiveMonitorString", "auther_sha": "436bd347e39677dec3f738fd251e4378eaa70551", "author": "makortel", "body": "#### PR description:\r\n\r\nThe present `IntrusiveMonitorBase::startMonitoring()` has `std::string_view` argument that requires the string to be owned elsewhere. While this works fine for e.g. C-string or `string_view` literals such as\r\n```cpp\r\nedm::Service<IntrusiveMonitorBase s;\r\nauto guard s->startMonitoring(\"Some message\");\r\n```\r\nit doesn't work for temporary `std::string`s like\r\n```cpp\r\nedm::Service<IntrusiveMonitorBase s;\r\nauto guard s->startMonitoring(fmt::format(\"Some function for event {}\", iEvent.id().event());\r\n```\r\n\r\nThis PR adds an overload for the `startMonitoring()` that accepts only rvalue `std::string` (this part required some tricks), and forwards the ownership of the string to a specific `Guard` object.\r\n\r\nResolves https://github.com/cms-sw/framework-team/issues/1412\r\n\r\n#### PR validation:\r\n\r\nThe unit test runs", "branch": "master", "changed_files": 2, "comments": 5, "commits": 1, "created_at": "1748454174", "deletions": 3, "labels": ["core-pending", "pending-signatures", "tests-approved", "orp-pending", "code-checks-approved"], "milestone": "CMSSW_15_1_X", "number": 48203, "release-notes": [], "review_comments": 0, "state": "open", "title": "Allow temporary std::string messages for IntrusiveMonitorBase", "updated_at": "1748462197", "user": "makortel"}