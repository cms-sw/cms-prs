{"additions": 723, "auther_ref": "devel_testDataFormatsScouting", "auther_sha": "a790a143e2ed110b52664b32ff7bfe502166c53e", "author": "missirol", "body": "#### PR description:\r\n\r\nThis PR adds a refined version of the unit test described in https://github.com/cms-sw/cmssw/issues/41040#issuecomment-1470567862 [*]. The aim of the test is to fail whenever non-backward-compatible changes are introduced in the Scouting data formats.\r\n\r\nThe implementation of the test could certainly be improved (one suggestion is in https://github.com/cms-sw/cmssw/issues/41040#issuecomment-1470689465), but I decided to open a draft PR because I think the test in this PR is better than nothing. (I plan to address https://github.com/cms-sw/cmssw/issues/41040#issuecomment-1470689465, but I don't have an ETA for that.)\r\n\r\n[*]\r\n\r\nMore precisely, there are two unit tests, one for the Run-2 Scouting data formats (\"Scouting*\"), and one for the Run-3 ones (\"Run3Scouting*\"). The two tests have the same structure:\r\n\r\n - a 1st step reads O(100) events from an existing EDM file, and writes the Scouting collections to disk (this first step should fail if non-backward-compatible changes are made to the data formats);\r\n\r\n - a 2nd step uses FWLite to print to stdout one entry/object for each of the Scouting data formats being tested. To check that the correct values are read, the test compares the output of step-2 to a reference in the form of a text file. This is currently done for 1 object per data format. It might be necessary to check more than 1 object (and/or more than 1 event), because https://github.com/cms-sw/cmssw/pull/41025#issuecomment-1471777700 showed that some issues can only be spotted when checking multiple objects/events.\r\n\r\n#### PR validation:\r\n\r\nThe new unit tests pass locally.\r\n\r\n#### If this PR is a backport, please specify the original PR and why you need to backport that PR. If this PR will be backported, please specify to which release cycle the backport is meant for:\r\n\r\nIf accepted, it would be good to backport it to at least `CMSSW_13_0_X`.", "branch": "master", "changed_files": 7, "comments": 0, "commits": 1, "created_at": "1679089349", "deletions": 0, "labels": ["core-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-pending"], "milestone": "CMSSW_13_1_X", "number": 41093, "release-notes": [], "review_comments": 0, "state": "open", "title": "[RFC] unit test for backward compatibility of Scouting data formats", "updated_at": "1679089372", "user": "missirol"}