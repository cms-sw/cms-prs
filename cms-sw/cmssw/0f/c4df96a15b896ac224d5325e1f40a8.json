{"additions": 156, "auther_ref": "threshold", "auther_sha": "4b229f31295aca867adc3c5c86cd7d5ddce6bebb", "author": "kk428", "body": "With dynamic memory allocation implemented, the high pT QCD sample I am looking at causes LST to crash. There is an overwhelming large amount of fake tracks that need to be accounted for. As is, it attempts to allocate memory for millions of (mostly fake) T5's. We expect the true amount to be around 300,000, compared to the 60,000 in the ttbar sample.\r\n\r\nWe could implement a cut that would remove many of the fake tracks, but there is a chance that this impacts the efficiency. Instead, here I included a condition that performs the standard set of cuts in the counting kernel if the corresponding triplet is densely connected. Most triplets will only be connected to a handful of potential quintuplets, whereas the ones leading to a large amount of fake tracks will have O(1000) connections. So, I included a condition that checks if the number of inner and outer connections is less than 1000.\r\n\r\nNormally the full set of cuts would only be performed in the creation kernel. The cuts that are now included in the counting kernel do not affect the timing for a ttbar sample as none of its events meet the densely connected condition.\r\n\r\nHere is a comparison in performance and timing on standalone:\r\n```\r\n   Evt    Hits       MD       LS      T3       T5       pLS       pT5      pT3      TC       Reset    Event     Short             Rate\r\n[target branch]\r\n   avg     15.2      0.4      0.4      0.5      0.6      0.3      0.6      0.3      0.9      0.0      19.3       3.9+/-  0.8      19.3   explicit[s=1]\r\n   avg      1.2      0.6      0.6      0.7      0.8      0.3      0.9      0.4      1.3      0.0       6.8       5.3+/-  1.1       6.9   explicit[s=2]\r\n   avg      2.1      0.8      1.0      1.2      1.3      0.4      1.5      0.7      1.9      0.0      10.9       8.4+/-  1.5       2.8   explicit[s=4]\r\n   avg      2.4      1.3      1.5      1.8      1.8      0.6      2.0      0.9      2.6      0.0      14.8      11.8+/-  2.3       2.5   explicit[s=6]\r\n   avg      3.5      1.7      2.0      2.2      2.5      0.7      2.9      1.2      3.3      0.0      20.1      15.8+/-  3.6       5.1   explicit[s=8]\r\n[this PR]\r\n   avg     24.3      0.4      0.4      0.5      0.9      0.3      0.6      0.3      0.9      0.0      28.7       4.1+/-  1.7      28.8   explicit[s=1]\r\n   avg      1.2      0.6      0.6      0.7      1.1      0.3      1.0      0.5      1.2      0.0       7.2       5.7+/-  1.9       3.6   explicit[s=2]\r\n   avg      2.5      0.8      1.0      1.2      1.6      0.4      1.5      0.7      1.9      0.0      11.8       8.8+/-  2.4       3.0   explicit[s=4]\r\n   avg      3.0      1.3      1.4      1.8      2.3      0.6      2.1      1.0      2.7      0.0      16.3      12.7+/-  3.4       2.8   explicit[s=6]\r\n   avg      3.8      1.7      2.0      2.4      3.0      0.7      2.9      1.3      3.3      0.0      21.2      16.7+/-  3.9       2.7   explicit[s=8]\r\n```", "branch": "master", "changed_files": 3, "comments": 11, "commits": 1, "created_at": "1760459211", "deletions": 3, "labels": ["reconstruction-approved", "pending-signatures", "tests-approved", "orp-pending", "code-checks-approved", "heterogeneous-pending", "tracking"], "milestone": "CMSSW_16_0_X", "number": 49164, "release-notes": [], "review_comments": 0, "state": "open", "title": "LST: Introducing a condition before checking cuts in the T5 counting kernel", "updated_at": "1760720294", "user": "kk428"}