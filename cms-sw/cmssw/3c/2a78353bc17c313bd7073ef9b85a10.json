{"additions": 608, "auther_ref": "SpeedupMuonValidation", "auther_sha": "18cfcad7bf00a3e42fe5da414c3db2c65c10cfef", "author": "abbiendi", "body": "This PR is mostly aimed at reducing the cpu time needed for the official muon validation sequence.\r\nIt restricts the SimToReco association to subsamples of the TrackingParticle (TP) collection, relevant for the muon validation, which are preselected as vectors of references in the Event. \r\n\r\n\"probeTracks\", i.e. inner tracks kinematically compatible with identified muons, as well as \"displacedTracks\", are tested with respect to TP with ptmin > 2 GeV\r\n\r\nParticle Flow muons, are tested w.r.t. general TP with ptmin>0.5 GeV && ptot>2.5 GeV (without muon truth selection)\r\n\r\nAll the other muon collections (including the hlt muon collections) are tested w.r.t. :\r\n- TP from muons (pdgId=+/-13) with momentum above minimum thresholds (default setting pt>0.5 GeV && ptot>2.5 GeV)\r\n- TP having hits in the muon detectors (independent of the momentum)\r\n\r\nThese definitions seem conservative, could be fine-tuned or the logic could be modified if needed.\r\n\r\nIn addition a fix is applied to the validation of global muons which now by default requires the track to have at least a valid muon hit (therefore global muons made of only inner tracker hits are considered as fakes). A new parameter in MuonAssociatorByHits is controlling this behaviour (called rejectBadGlobal, default is True. In a few cases it is set to False to allow tracks extending only in the inner tracker, according to the expected algorithm, as for DYT or TuneP).\r\n\r\nThe result of these changes is that a reconstructed muon can be considered as a fake not only if it does not pass the quality/purity thresholds, but also if there is no found TrackingParticle matching it in the selected subsample.\r\nNo changes are produced on the standalone (outer) muons.\r\n(except that the denominator for efficiencies is restricted to the selected TP, so TP which will never reach the muon detectors are generally not counted for the efficiency. This gives a small increase of efficiencies throughout)\r\nAlmost no changes of the pure inner tracks (except that due to the better cpu performance I lowered the ptmin of probed tracks to 3 GeV, it was 4 GeV).\r\nIncreased fake rates for reco muons (where with this I mean all muon flavours where one expects a matching between a inner track and hits or segments, therefore including Tracker muons, GEM muons etc...), also depending on the chosen settings.\r\nIn practice for reco muons the fake rates quantify also the misid rate, not just the rate of imperfect tracking.\r\n \r\n#### PR validation:\r\n\r\nThe results have been validated w.r.t. the default CMSSW_11_3_0_pre6 on about 1K events of:\r\n\r\n* TTbar+PU (mcRun3, 2021)\r\nhttps://abbiendi.web.cern.ch/abbiendi/MuonVal_cpuTime/CMSSW_11_3_0_pre6_TPnewSel_vs_Default/RelValTTbar_14_PU_2021/\r\n\r\n* ZMM+PU (mcRun3, 2021)\r\nhttps://abbiendi.web.cern.ch/abbiendi/MuonVal_cpuTime/CMSSW_11_3_0_pre6_TPnewSel_vs_Default/RelValZMM_14_PU_2021/\r\n\r\nIn addition basic tests have been done for a number of other workflows: SingleMuon gun, FastSim, Phase2, and premixing, all successful.\r\n\r\nObviously this PR should not enter in release together with significant changes to the muon reco or ID, otherwise a dedicated validation is needed to decouple the effects.\r\n\r\n\r\n\r\n", "branch": "master", "changed_files": 22, "closed_at": "1622355415", "comments": 116, "commits": 5, "created_at": "1620047170", "deletions": 409, "labels": ["code-checks-approved", "dqm-approved", "fully-signed", "orp-approved", "simulation-approved", "tests-approved"], "merge_commit_sha": "a34ab38ea499d5347ae79cc747d49b51192570d0", "merged_at": "1622355415", "merged_by": "cmsbuild", "milestone": "CMSSW_12_0_X", "number": 33610, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Speedup muon validation", "updated_at": "1622355416", "user": "abbiendi"}