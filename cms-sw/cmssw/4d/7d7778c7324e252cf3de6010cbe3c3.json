{"additions": 1316, "auther_ref": "CaloParticleValidationWithGraph", "auther_sha": "8b0ab5c5e70c53386c5496a25f9f7e6335743e8a", "author": "rovere", "body": "**REPLACEMENT OF #21701**\r\n\r\nWhile doing work on HGCAL, I stumbled upon the CaloParticles several times. In order to \"learn&understand\" what they are and how they are produced, I took a look at the CaloTruthAccumulator, which is the package responsible for their creation. I found the code to be convoluted and overly complicated. I decided to rewrite it from scratch, keeping the same functionalities using graphs, since particle decays are \"naturally\" described by graph (and their algorithms).\r\n\r\nThis is what I came up with: I believe this code is more compact, clean and understandable with respect to the original one.\r\n\r\nI slightly changed the meaning of the embedded simClusters for CaloParticles that decay within a certain distance from HGCAL, since in the previous implementation all children were artificially collapsed under the original particle, while now they are added one-by-one as children with their own simClusters.\r\n\r\nBesides this change, from quick tests on single particle guns (Zee), I did not notice significant differences. While I trust the algorithm I wrote, I'm not sure the old one was fully capturing all simClusters at all levels of the decay chain. So I do not exclude that there won't be any regression.\r\n", "branch": "master", "changed_files": 9, "comments": 19, "commits": 28, "created_at": "1520947234", "deletions": 573, "labels": ["code-checks-approved", "comparison-pending", "dqm-pending", "new-package-pending", "orp-pending", "pending-signatures", "reconstruction-pending", "simulation-pending", "tests-approved"], "milestone": "CMSSW_10_1_X", "number": 22596, "release-notes": [], "review_comments": 8, "state": "open", "title": "Calo particle validation with graph", "updated_at": "1521050950", "user": "rovere"}