{"additions": 590, "auther_ref": "eventSetupRecordGet", "auther_sha": "55a51fd6c14b59bbc7d36deb4555fa0df01a8c67", "author": "makortel", "body": "#### PR description:\r\n\r\nThis PR adds `get()` and `getHandle`() to dependent record enabling the same ESProduct retrieval pattern as from the non-dependent records, i.e. instead of\r\n```cpp\r\nedm::ESGetToken<BarData, BarRecord> barToken_;\r\n...\r\nstd::unique_ptr<Foo> FooESProducer::produce(const FooRecord& iRecord) {\r\n  const auto& barData = iRecord.getGetRecord<BarRecord>().get(barToken_);\r\n  // or\r\n  edm::ESHandle<BarData> barHandle = iRecord.getRecord<BarRecord>().get(barToken_);\r\n  ...\r\n}\r\n```\r\none can do\r\n```cpp\r\nedm::ESGetToken<BarData, BarRecord> barToken_;\r\n...\r\nstd::unique_ptr<FooData> FooESProducer::produce(const FooRecord& iRecord) {\r\n  const auto& barData = iRecord.get(barToken_)\r\n  // or\r\n  edm::ESHandle<BarData> barHandle = iRecord.getHandle(barToken_);\r\n  ...\r\n}\r\n```\r\n\r\nThis PR also adds `getTransientHandle()` to `EventSetup`, `EventSetupRecordImplementation`, and `DependentRecordImplementation` along the `getHandle()`. These functions are needed to support `edm::ESTransientHandle<T>` with `edm::ESGetToken`.\r\n\r\n#### PR validation:\r\n\r\nFramework compiles and relevant unit tests run.\r\n", "branch": "master", "changed_files": 6, "comments": 0, "commits": 2, "created_at": "1555934805", "deletions": 18, "labels": [], "number": 26502, "release-notes": [], "review_comments": 0, "state": "open", "title": "Event setup record get", "updated_at": "1555934805", "user": "makortel"}