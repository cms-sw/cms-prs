{"additions": 447, "auther_ref": "14_1_X-hlt_diphoton_mva", "auther_sha": "6b1c79db437dbf9670acf3b69bd118e0093b64cf", "author": "smorovic", "body": "#### PR description:\r\n\r\nThis PR uses XGBoost C API to implement calculation of the score of Photons for HLT.\r\nCombination filter is provided with the aim of implementing diphoton paths.\r\nTotal of 9 HLT variables are used as input.\r\n\r\nFor binary model files, NTree Limit parameter must be provided (it is not saved in the model file).\r\n\r\nNote: at this time model training files are not provided, until they are finalized.\r\nAt that point we will request: cms-data repository for model files, define default parameters (cuts) and add unit test which ensures XGBoost (v1.7.5 currently used in CMSSW) calculates scores correctly with given model files and parameters.\r\n\r\nInitially this is opened as Draft PR. Backport to 14_0_X is planned.\r\n\r\n#### PR validation:\r\n\r\nInitially passes HLT integration tests (caveat: all events rejected at the combination filter due to low statistics, but no errors)\r\n\r\nSample HLT snippet used for this:\r\n```\r\nprocess.hltPreDiphotonMVA = cms.EDFilter( \"HLTPrescaler\",\r\n     offset = cms.uint32( 0 ),\r\n     L1GtReadoutRecordTag = cms.InputTag( \"hltGtStage2Digis\" )\r\n)\r\n\r\nprocess.hltDiEG14p25EtEta2p55UnseededFilter = cms.EDFilter( \"HLT1Photon\",\r\n     saveTags = cms.bool( True ),\r\n     inputTag = cms.InputTag( \"hltEgammaCandidatesUnseeded\" ),\r\n     triggerType = cms.int32( 92 ),\r\n     MinE = cms.double( -1.0 ),\r\n     MinPt = cms.double( 14.25 ),\r\n     MinMass = cms.double( -1.0 ),\r\n     MaxMass = cms.double( -1.0 ),\r\n     MinEta = cms.double( -1.0 ),\r\n     MaxEta = cms.double( 2.55 ),\r\n     MinN = cms.int32( 2 )\r\n)\r\n\r\nprocess.PhotonXGBoostProducer = cms.EDProducer(\"PhotonXGBoostProducer\",\r\n     candTag = cms.InputTag( \"hltEgammaCandidatesUnseeded\" ),\r\n     inputTagR9 = cms.InputTag(\"hltEgammaR9IDUnseeded\", \"r95x5\"),\r\n     inputTagHoE = cms.InputTag(\"hltEgammaHoverEUnseeded\"),\r\n     inputTagSigmaiEtaiEta = cms.InputTag(\"hltEgammaClusterShapeUnseeded\", \"sigmaIEtaIEta5x5NoiseCleaned\"),\r\n     inputTagE2x2 = cms.InputTag(\"hltEgammaClusterShapeUnseeded\", \"e2x2\"),\r\n     inputTagIso = cms.InputTag(\"hltEgammaEcalPFClusterIsoUnseeded\"),\r\n     mvaFileXgbB = cms.FileInPath(\"RecoEgamma/PhotonIdentification/data/barrel.bin\"), #copy by hand\r\n     mvaFileXgbE = cms.FileInPath(\"RecoEgamma/PhotonIdentification/data/barrel.bin\"), #copy by hand\r\n     mvaNTreeLimitB = cms.uint32(168),\r\n     mvaNTreeLimitE = cms.uint32(158),\r\n     mvaThresholdEt = cms.double(14.25)\r\n)\r\n\r\nprocess.HLTEgammaDoubleXGBoostCombFilter = cms.EDFilter(\"HLTEgammaDoubleXGBoostCombFilter\",\r\n     saveTags = cms.bool( True ),\r\n     candTag = cms.InputTag( \"hltEgammaCandidatesUnseeded\" ),\r\n     mvaPhotonTag = cms.InputTag( \"PhotonXGBoostProducer\" ),\r\n     highMassCut = cms.double(95),\r\n     leadCutHighMass1 = cms.vdouble(0.98,0.95),\r\n     subCutHighMass1 = cms.vdouble(0.00,0.04),\r\n     leadCutHighMass2 = cms.vdouble(0.85,0.85),\r\n     subCutHighMass2 = cms.vdouble(0.04,0.08),\r\n     leadCutHighMass3 = cms.vdouble(0.30,0.50),\r\n     subCutHighMass3 = cms.vdouble(0.15,0.20),\r\n     lowMassCut = cms.double(60),\r\n     leadCutLowMass1 = cms.vdouble(0.98,0.90),\r\n     subCutLowMass1 = cms.vdouble(0.04,0.05),\r\n     leadCutLowMass2 = cms.vdouble(0.90,0.80),\r\n     subCutLowMass2 = cms.vdouble(0.10,0.10),\r\n     leadCutLowMass3 = cms.vdouble(0.60,0.60),\r\n     subCutLowMass3 = cms.vdouble(0.30,0.30),\r\n\r\nprocess.HLTDiphotonMvaTestSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgamma + process.hltEgammaCandidates + process.hltEGL1SingleAndDoubleEGOrFilter + process.hltEG30L1SingleAndDoubleEGOrEtFilter + process.HLTPFClusteringForEgammaUnseeded + process.hltEgammaCandidatesUnseeded + process.hltDiEG14p25EtEta2p55UnseededFilter + process.hltEgammaR9IDUnseeded + process.HLTDoLocalHcalSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverEUnseeded + process.hltEgammaClusterShapeUnseeded + process.hltEgammaEcalPFClusterIsoUnseeded )\r\n\r\nprocess.HLT_Diphoton_MVA = cms.Path( process.HLTBeginSequence + process.hltL1sSingleAndDoubleEGor + process.HLTDiphotonMvaTestSequence  + process.PhotonXGBoostProducer + process.HLTEgammaDoubleXGBoostCombFilter + process.HLTEndSequence )\r\n\r\nprocess.schedule.insert( process.schedule.index( process.HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v20 ) + 1, process.HLT_Diphoton_MVA )\r\n\r\ngetattr(process.datasets, 'EGamma0').append('HLT_Diphoton_MVA')\r\ngetattr(process.datasets, 'EGamma1').append('HLT_Diphoton_MVA')\r\ngetattr(process.datasets, 'OnlineMonitor').append('HLT_Diphoton_MVA')\r\n\r\nprocess.hltDatasetEGamma.triggerConditions.append('HLT_Diphoton_MVA')\r\nprocess.hltDatasetOnlineMonitor.triggerConditions.append('HLT_Diphoton_MVA')\r\n```", "branch": "master", "changed_files": 8, "comments": 18, "commits": 2, "created_at": "1710885714", "deletions": 0, "labels": ["reconstruction-pending", "hlt-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-pending", "hlt-integration"], "milestone": "CMSSW_14_1_X", "number": 44473, "release-notes": [], "review_comments": 24, "state": "open", "title": "HLT XGBoost Photon MVA and Diphoton combination filter", "updated_at": "1710973400", "user": "smorovic"}