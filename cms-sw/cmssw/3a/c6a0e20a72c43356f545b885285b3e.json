{"additions": 176, "auther_ref": "mm_dev_updates_SiStripLorentzAnglePCLHarvester", "auther_sha": "e9bb0e16ca923d3447c3536e95f368260700ad46", "author": "mmusich", "body": "#### PR description:\r\n\r\nWith the restart of the 2024 cosmic data-taking operations, I noticed that the `SiStripLorentzAngle` PCL workflow is uploading a payload essentially for every run (see [conditions uploader logs](https://cms-conddb.cern.ch/cmsDbBrowser/logs/condition_uploader_logs/Prod/2024-02-07/2024-02-14/None/None/SiStripLA_pcl/None/None/None/any#)), even if the Strip Tracker is not joining the data-taking. This happens because, by default, if no new measurement is available the producer inserts in the database a new IoV copying the values of the currently used payload (see payloads in [SiStripLorentzAngle_byPCL_v0_prompt](https://cms-conddb.cern.ch/cmsDbBrowser/list/Prod/tags/SiStripLorentzAngle_byPCL_v0_prompt)).\r\nI change this behavior such that it doesn't write out a new payload if there isn't at least a new measurement from one of the partitions. In addition I add some control plots in the `SiStripLorentzAnglePCLHarvester` module to display the output Lorentz Angle payload values per layer and module type (if there's a successful measurement) and the diff w.r.t. the one used in input.\r\n\r\n#### PR validation:\r\n\r\nRun both with 3.8T run with data from the Strip Tracker via:\r\n\r\n```bash\r\ncmsDriver.py stepHarvest -s ALCAHARVEST:SiStripLA \\\r\n\t     --conditions 140X_dataRun3_Express_v2 \\\r\n\t     --scenario pp \\\r\n\t     --data \\\r\n\t     --era Run3_2023 \\\r\n\t     -n -1 \\\r\n\t     --dasquery='file dataset=/StreamExpressCosmics/Run2023F-PromptCalibProdSiStripLA-Express-v1/ALCAPROMPT run=373245'\r\n```\r\n\r\nand with 0T data **without Tracker** (from a recent run [376727](https://cmsoms.cern.ch/cms/runs/report?cms_run=376727)) via:\r\n\r\n```bash\r\ncmsDriver.yp stepHarvest2024 -s ALCAHARVEST:SiStripLA \\\r\n\t     --conditions 140X_dataRun3_Express_v2 \\\r\n\t     --scenario pp \\\r\n\t     --data \\\r\n\t     --era Run3 \\\r\n\t     -n -1 \\\r\n\t     --dasquery='file dataset=/StreamExpressCosmics/Commissioning2024-PromptCalibProdSiStripLA-Express-v1/ALCAPROMPT run=376727'\r\n```\r\n\r\nand obtained sensible results. In particular the second test doesn't produce an output payload, while in the first the following plot was produced:\r\n\r\n|  Value   |    Diff [%]    |\r\n|----------|:-------------:|\r\n| ![Screenshot from 2024-02-14 13-41-33](https://github.com/cms-sw/cmssw/assets/5082376/5c5e7078-92ab-402f-a527-e4e0096633f9) | ![Screenshot from 2024-02-14 13-44-01](https://github.com/cms-sw/cmssw/assets/5082376/5c07096d-0386-4f91-ae69-f403dc091659) |\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nNot a backport, but will backport it to CMSSW_14_0_X (possibly 13_3_X) for 2024 data-taking operations.", "branch": "master", "changed_files": 3, "comments": 6, "commits": 2, "created_at": "1707910971", "deletions": 12, "labels": ["alca-pending", "pending-signatures", "tests-approved", "orp-pending", "bug-fix", "code-checks-approved", "trk"], "milestone": "CMSSW_14_1_X", "number": 43962, "release-notes": [], "review_comments": 1, "state": "open", "title": "Update `SiStripLorentzAnglePCLHarvester` to avoid writing useless payloads and more control plots", "updated_at": "1707926240", "user": "mmusich"}