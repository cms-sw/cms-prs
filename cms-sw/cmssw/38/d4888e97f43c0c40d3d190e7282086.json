{"additions": 0, "auther_ref": "forPR", "auther_sha": "e5fadfe228cab4d72ac9b612cae0a69df5e8894c", "author": "sdevissc", "body": "This PR is for now _not_ meant to be merge now. We want to give the possibility to anybody to easily look and test the code.\n## Some explanation about how it works:\n\na) The file SimTracker/SiStripDigitizer/data/APVProbaList.txt contains one line per detID (module). For each detId (first colum), a probability to have a HIP is given (second column). \n\nb) The textfile is read in the digitizer before looping on the event (filling a std::map <int, float>)\n\nc) When looping over the events and looping over the simHits (and therefore over detId), the map is read and a random number is drawn and compared with the corresponding entry in the map. If the number is smaller than the entry, the corresponding _APV_ is flagged as bad (i.e. detAmpl are then set to zero), otherwise nothing happens.\n## Some remarks and further details\n\nA) By default, the HIP simulation is set to False in SimGeneral/MixingModule/python/SiStripSimParameters_cfi.py , see APVSaturationFromHIP, don't forget to change it to True to test this code.\n\nB) About the map of probabilities: this is where most of the work is done. The code is available here: \n\nhttps://github.com/cms-sw/cmssw/compare/CMSSW_8_1_X...sdevissc:ProbaMapProducer?expand=1\n This map producer is for now not supposed to be merged, but later on, it might be interesting to have this option in the digitizer, so that new maps can be generated easily and without having to maintain an additional code (if we keep the map generation as it is now).\n\nC) The map is for now computed using MinBias only, i.e. using a neutrino gun, with the PU scenario  AVE_35_BX_25ns. \n\ncmsDriver.py SingleNuE10_cfi.py  --conditions auto:run2_mc --pileup_input das:/RelValMinBias_13/CMSSW_8_1_0_pre2-80X_mcRun2_asymptotic_v10_gs810pre2-v1/GEN-SIM -n $1 --era Run2_2016 --eventcontent FEVTDEBUGHLT -s GEN,SIM,DIGI:pdigi_valid,L1,DIGI2RAW,HLT:@relval2016 --datatier GEN-SIM-DIGI-RAW-HLTDEBUG --pileup AVE_35_BX_25ns --filein das:/RelValTTbar_13/CMSSW_8_1_0_pre2-80X_mcRun2_asymptotic_v10_gs810pre2-v1/GEN-SIM ...\n\nThis choice constitute hopefully a reasonable starting point.\n\nD) The current simulation does NOT include the modification of the cluster charges: the APV are ON or OFF. Affecting the charge is the next step of the algorithm development, and explains why I have already put in the code a new vector<bool>  called hipChannels and a new map<int, vector<bool>> called allHIPChannels. The idea behind is to ultimately separate the APVs known to be dead, and those affected by APV where we have a short dead time and then a recovery time characterized by a wrong estimation of the cluster charge.\n\nE) For now, the only parameter to tune the simulation when starting a production (i.e. this does not concerns the map generation) is APVSaturationProbScaling, it multiplies the probability read in the map by its value.\n\nF) as an illustration, with the current configuration on gets the following global hit efficiencies in the MultiTrackValidator (using RelVal TTbar as input):\n\n![capture d ecran 2016-06-29 a 17 28 10](https://cloud.githubusercontent.com/assets/4726032/16458295/e4dcc926-3e1e-11e6-9a75-e57d08fd5ed3.png)\n\nThere are clearly differences w.r.t. what can be observed in the data, see e.g. https://indico.cern.ch/event/535777/contributions/2200584/attachments/1288176/1917381/HipMitigation.pdf . Different sources for these discrepancies are possible:\n- PU scenario (and reweighting)\n- Absence of cluster charge change in HIP-affected APVs\n- ...\n\nG) With this method, we start from the simHits. This means that we start from cases where the interaction between the simulated particle and the simulated detector has already taken place. This may complicate the path length effect: if the path A is twice the path B for a simulated particle running through a piece of material, then the probability to create a simHit is bigger in case A than in case B. So we have already a correlation between the presence of a simHit and the path length (as simulated with GEANT): that could mean a double counting with the path length effect used to create the map of probabilities. Now, the probability for a particle to create a simHit is already large, close to 1(tbc) while the one to create a HIP is much smaller (~1e-3). For a given increase of the path length, the simHit proba increases by a small amount (since already close to 1) while the HIP proba rescales (almost) linearly. The path length effect is therefore expected to be dominated by the HIP correction.\n", "branch": "CMSSW_8_1_X", "changed_files": 0, "closed_at": "1469026816", "comments": 74, "commits": 0, "created_at": "1467217974", "deletions": 0, "labels": ["comparison-available", "fully-signed", "orp-pending", "simulation-approved", "tests-approved"], "milestone": "Next CMSSW_8_1_X", "number": 15062, "release-notes": [], "review_comments": 2, "state": "closed", "title": "HIP simulation in SiStrips", "updated_at": "1469026816", "user": "sdevissc"}