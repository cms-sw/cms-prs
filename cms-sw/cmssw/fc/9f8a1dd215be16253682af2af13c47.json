{"additions": 40, "auther_ref": "RenameNestedStructToAvoidNameConflict", "auther_sha": "d7c2d6a7af127d10e3f4dadf21b4190ecf7b5b77", "author": "wmtan", "body": "The persistent class reco::SoftLeptonProperties has a nested struct named \"quality\", and also member functions named \"quality\".  Although this is legal C++ (although poor style), it confuses the dictionary generation of ROOT6, which produces a dictionary that will not compile.  Although ROOT6 should fix this problem (a ticket will be written against ROOT6), we can easily avoid the problem by giving the nested struct a distinct name from the member functions.  This pull request renames the nested struct from \"quality\" to \"Quality\".\nThis avoids poor C++ style, avoids a ROOT 6 problem, and also makes the code more compliant with the CMS practice of naming classes and structs beginning with a capital letter.\nTested with git cms-checkdeps -a and the relval matrix.\n", "branch": "CMSSW_7_0_X", "changed_files": 5, "closed_at": "1383123362", "comments": 6, "commits": 1, "created_at": "1383078972", "deletions": 40, "labels": ["fully-signed", "reconstruction-approved", "tests-approved"], "merge_commit_sha": "8c29e2c09ae9d85869d04a43de21ef669886a28e", "merged_at": "1383123362", "merged_by": "ktf", "milestone": "CMSSW_7_0_0_pre8", "number": 1225, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Change name of nested struct to avoid name clash with member function", "updated_at": "1406903890", "user": "wmtan"}