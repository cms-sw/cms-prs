{"additions": 1729, "auther_ref": "NewEgPMTripletsForInt90X", "auther_sha": "b28d4f194a9f0c3f8ddab9cabc813ca11ce4abee", "author": "Sam-Harper", "body": "This pull request upgrades the pixel matching used by the E/gamma HLT to be able to match to hits other than doublets to take advantage of the new phase I pixels. \r\n\r\nThis PR creates new modules and producers for pixel matching, the old objects continue to work and will behave exactly the same as before. So no changes are expected to be observed in any current test. It is expected that RECO will eventually move to these new producers.  \r\n\r\nThe one potential impact and the area is the ElectronSeed class. We need a dataformat change to deal with the fact we now have a variable number of pixel hit matches. ElectronSeeds are used downstream by several modules and it would be messy to have another ElectronSeeds class in parallel (ie ElectronSeeds and ElectronNHitSeeds) as we would have to adapt all those modules to look for both. Both options are not great but I think its probably better long term to change ElectronSeed rather than making a new class. Up for discussion of course. \r\n\r\nNew Classes: \r\n\r\nEgammaHLTFilteredSuperClusterProducer  : filters the superclusters on which the pixel matching is to be performed. This will be HLT specific, reco will have different criteria. A major benefit of this is that now the pixel matching and H/E cuts cut on the same H/E value rather than trying to sync two different calculations\r\n\r\nTrackingRegionsFromSuperClustersProducer:  makes the tracking region around the supercluster, accepts a std::vector<reco::SuperClusterRef> telling it which superclusters to use. Can not use a edm::RefVector as the superclusters are in different collections (barrel and endcap) and its awkward to seperate them back into separate collections from the input we have (a single collection of reco::EcalCandidates). \r\n\r\nTrajSeedMatcher:  replaces PixelHitMatcher, actually does the matching. In general some clean up is needed (it has an intermediate format like PixelHitMatcher has which is probably redundant). Not fully happy with the name\r\n\r\nElectronNHitSeedProducer : makes the electron seeds with a variable number of matched hits\r\n\r\nI have now done the initial validation such that I'm confident that its worth running the jenkins tests. I have been focusing on ensuring I do not make any unintentional changes to RECO output  (and I intend zero changes other than the format change) and that I can read back old ElectronSeeds correctly in the new format. I have been using a privately produced 900 (GEN-SIM) + 902 (RAW-RECO) Single Electron gun pt1To100, noPU 100K sample to validation on\r\n\r\nFirst I can read back old seeds with the new code and all the member functions return identical results:\r\nhttps://sharper.web.cern.ch/sharper/cms/egamma/eleSeedValidation/readingOldSeeds/\r\n\r\nSecondly, I made sure that I didnt not disrupt RECO electron reconstruction by running in 902 and 902+this PR to check that there were no differences as expected. \r\n\r\nhttps://sharper.web.cern.ch/sharper/cms/egamma/eleSeedValidation/newRECOvsOldRECO/#h_ele_seedSubdet2\r\n\r\nunit tests are being re-run in the latest IB, (already all passed in 902) and then runTheMatrix will be launched. \r\n\r\n", "branch": "CMSSW_9_0_X", "changed_files": 13, "closed_at": "1495007035", "comments": 36, "commits": 19, "created_at": "1493581193", "deletions": 177, "labels": ["comparison-available", "hlt-pending", "orp-pending", "pending-signatures", "reconstruction-approved", "tests-approved"], "milestone": "CMSSW_9_0_X", "number": 18527, "release-notes": [], "review_comments": 0, "state": "closed", "title": "New E/g HLT Pixel Matching : 90X", "updated_at": "1495007035", "user": "Sam-Harper"}