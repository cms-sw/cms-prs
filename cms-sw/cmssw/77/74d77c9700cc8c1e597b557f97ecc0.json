{"additions": 1835, "auther_ref": "premixModule", "auther_sha": "4b9b3b5cb5e7ce796b6a9ad9a77030c0acd8e964", "author": "makortel", "body": "The current implementation of `DataMixingModule` is not future-proof with respect to adding new detectors or removing old ones. In addition, configuration is not safe because the top `DataMixingModule` `ParameterSet` is passed to all per-subdetector workers, so there is possibility for parameter name collisions.\r\n\r\nAfter short discussion with @mdhildreth and @kpedro88, we decided to create a new `PreMixingModule` to perform the overlay of premixed pileup event on top of the signal event, and leave `DataMixingModule` to be used for other kind of event mixing scenarios.\r\n\r\nDesign of `PreMixingModule` is such that it calls worker plugins through (almost-)abstract `PreMixingWorker` interface. Configuration dictates fully which workers are constructed (via a plugin factory). The only exception is a `PreMixingPileupCopy`, which is constructed separately and required to be always present (because its interface is completely different than the other workers, and it, well, has to be always present). Workers are fully responsible for declaring and implementing what they consume and produce.\r\n\r\nThe worker algorithms are copies from what are currently used in `DataMixingModule` for premixing. Below are some further notes on the workers\r\n* Workers for pixel, strip, and ecal were moved from `DataMixingModule`\r\n  * The algorithms were premixing-specific, so there is no need to keep the old ones\r\n* Muon (DT, RPC, CSC) algorithms had lot's of copy-paste, common pieces are now templated (with specializations for the non-common parts)\r\n* Old `DataMixingTrackingParticleWorker` is split to `TrackingParticle`-specific worker, and `*DigiSimLink`-specific workers\r\n   * The `*DigiSimLink` workers had also lot's of copy-paste, common pieces are now templated (with specializations for the non-common parts)\r\n   * The `DigiSimLink` worker must now be explicitly specified in the configuration for each collection\r\n      * The configuration gets more crowded, but this way the behaviour is fully steered by the configuration, as we need to add more `DigiSimLink` workers for phase2 OT and GEM+ME0.\r\n\r\nThis PR also cleans up all premixing-related code from `DataMixingModule`.\r\n\r\nIn order to obtain the same random number sequences as with the current `DataMixingModule` (to ease the review),\r\n*  I had to introduce a hack in `PreMixingModule` to insert the ecal, hcal, strip, and pixel workers in a specific order\r\n   * to be removed after this PR gets merged\r\n* FastSim workflows need #22413 \r\n\r\nTested in 10_1_0_pre2, no changes expected.\r\n\r\n@mdhildreth @kpedro88 ", "branch": "master", "changed_files": 29, "comments": 43, "commits": 17, "created_at": "1519983504", "deletions": 1672, "labels": ["code-checks-approved", "comparison-pending", "new-package-pending", "operations-pending", "orp-pending", "pending-signatures", "simulation-approved", "tests-pending"], "milestone": "CMSSW_10_2_X", "number": 22416, "release-notes": [], "review_comments": 15, "state": "open", "title": "Replace DataMixingModule with specific PreMixingModule for premixing stage2", "updated_at": "1523345299", "user": "makortel"}