{"additions": 44710, "auther_ref": "CMSSW_14_1_0_pre3_LST_X_LSTCore_realfiles", "auther_sha": "1d9b396766940883638fdcab96123b772accc4a1", "author": "SegmentLinking", "body": "This PR integrates the LST algorithm in CMSSW. A summary of the algorithm and its scope can be found in the [recent LST presentation at the Phase 2 Software days (April 2024)](https://indico.cern.ch/event/1394609/#18-line-segment-tracking).\r\n\r\nThe PR includes the following additions/modifications:\r\n- New package w/ the LST algorithm code (RecoTracker/LSTCore):\r\n  - interface/alpaka:\r\n    The interface exposed to CMSSW.\r\n  - src/alpaka:\r\n    The actual LST code.\r\n  - standalone:\r\n    Scripts to be used for compiling, using & testing LST outside of the full CMSSW framework.\r\n     **Not relevant for CMSSW review**.\r\n  - Minimal/at most header-only dependency of LSTCore on other CMSSW packages\r\n     Preserve ability to run in standalone.\r\n- New package w/ CMSSW modules related to LST (RecoTracker/LST):\r\n  - interface:\r\n    The input & output data formats for LST.\r\n  - plugins:\r\n    The producers:\r\n    - Converting to/from the LST data formats (ED).\r\n    - Loading the LST custom geometry files (ES).\r\n    - Running LST to produce CMSSW collections (ED).\r\n  - python:\r\n    The configuration files needed for running LST.\r\n  - src:\r\n    Class definitions and ES producer supporting files.\r\n  - ~test:\r\n    Scripts for local testing~  Dropped in favor of a proper workflow.\r\n- New process modifiers to test LST (changes in multiple existing packages):\r\n  - trackingIters01:\r\n    Runs only the first two iterations of tracking (initialStep & highPtTripletStep).\r\n    Useful for comparisons, as LST (for now) replaces only those two tracking iterations.\r\n  - trackingLST:\r\n    Runs the LST algorithm instead of KalmanFilter for track building/seeding.\r\n    ~The existence of the gpu process modifier defines the hardware the algorithm runs on (CPU or GPU).~\r\n\r\nThere is a single change not strictly related to the above categories and a dedicated comment will be made on it.\r\n\r\nIn general, we prefer to have minimal or at most header-only dependency of LSTCore on other CMSSW packages to preserve the ability to run with standalone scripts.\r\n\r\nThis is a large PR, so we start it as an RFC with the main batch of files. In the next days, the following updates are to be expected, so that the PR can be merged:\r\n- [x] Removal of test scripts and introduction of workflow.\r\n- [x] Extraction of the LST data files from the proper directories ~(bot tests will probably not work currently)~.\r\n- [x] Modifications to the standalone scripts  **Not to be reviewed**.\r\n\r\nGoes together with cms-data/RecoTracker-LSTCore#1 (**now merged**).\r\n\r\n@slava77 @ariostas", "branch": "master", "changed_files": 113, "comments": 84, "commits": 40, "created_at": "1717244844", "deletions": 6, "labels": ["reconstruction-pending", "operations-pending", "pending-signatures", "tests-approved", "orp-pending", "pdmv-pending", "upgrade-pending", "requires-external", "code-checks-approved", "heterogeneous-pending", "tracking", "changes-dataformats"], "milestone": "CMSSW_14_1_X", "number": 45117, "release-notes": [], "review_comments": 93, "state": "open", "title": "CMSSW Integration of LST", "updated_at": "1721167107", "user": "VourMa"}