{"additions": 99, "auther_ref": "fc-cleanBTLDetId", "auther_sha": "0dc8e583026a289190f281a450751085e3289f96", "author": "fabiocos", "body": "#### PR description:\r\n\r\nIn preparation of the update of the BTL geometry, this PR cleans the structure of ```BTLDetId``` by removing unused methods and support for old scenarios no more present since years in the release. The handling of multiple geometry scenarios for both BTL and ETL is improved by adding to ```ETLDetId``` a ```EtlLayout``` enum class, similar to ```BTLDetId::CrysLayout```, and by allowing the ```MTDTopologyMode``` class to separately provide the BTL and ETL layout values depending on the global topology mode value. \r\n\r\nThe code exploiting this piece of information in geometry, reconstruction and validation classes is updated accordingly.\r\nA new BTL ```tdr``` mode is added in preparation of the new geometry. While the crystals layout should stay the same, the logical grouping into modules should change wrt to ```barphiflat```, moving from a 16 x 3 matrix, as in the original tkLayout based BTL xml geometry implementation, to a 16 crystals array per module. This will directly impact the ```BTLDetId``` definition, which is based on the volumes stack and their copy number.\r\n\r\n#### PR validation:\r\n\r\nThe unit tests in MTD geometry and ```RecoMTD/DetLayers``` packages show that the existing geometry definition stays unchanged", "branch": "master", "changed_files": 19, "comments": 17, "commits": 4, "created_at": "1656927857", "deletions": 339, "labels": ["dqm-approved", "geometry-approved", "reconstruction-approved", "simulation-approved", "fully-signed", "tests-approved", "orp-pending", "upgrade-approved", "code-checks-approved"], "milestone": "CMSSW_12_5_X", "number": 38589, "release-notes": [], "review_comments": 0, "state": "open", "title": "MTD geometry: clean BTLDetId", "updated_at": "1657546137", "user": "fabiocos"}