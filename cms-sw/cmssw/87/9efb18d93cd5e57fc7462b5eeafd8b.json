{"additions": 58, "auther_ref": "FixCArrayDataMemberIntrospection", "auther_sha": "c2657eefa08387d2bbcb5585c59031df0e9a2208", "author": "wmtan", "body": "This pull request is fixes for two different problems involving C array data members, plus a unit test that would have found one of the problems. These problems all caused failures in conditions code in many relval tests in the ROOT6 branch.  However, the fixes in this pull request are for the ROOT 5 version, which also has the bugs.  The bugs did not affect the relvals in ROOT 5 because the conditions code uses Reflex in ROOT 5, and this bypasses the problem.\n\n1)MemberWithDict::typeof(), when the member is a C array, stripped off the array information and just returned the underlying type. The array information should not have been stripped.\n\n2) A framework unit test is added here that would have found the above problem.\n\n3) TypeID::className() put a space between the base type name and the opening square bracket. This is incompatible with the naming used by conditions.\n\nSince this request is for the main 7_1_X branch, it is not urgent.\n", "branch": "CMSSW_7_1_X", "changed_files": 7, "closed_at": "1393596743", "comments": 7, "commits": 1, "created_at": "1393542638", "deletions": 1, "labels": ["core-approved", "fully-signed", "tests-rejected"], "milestone": "CMSSW_7_1_0_pre5", "number": 2668, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Fixes for C array data member introspection", "updated_at": "1415108789", "user": "wmtan"}