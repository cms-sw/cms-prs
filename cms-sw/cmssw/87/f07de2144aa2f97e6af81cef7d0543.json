{"additions": 435, "auther_ref": "improveDynamicInefficiencyPI", "auther_sha": "a5e8cd38faf1d832a033282e7dd9c63f60463bb5", "author": "mmusich", "body": "#### PR description:\r\n\r\nThe purpose of this PR is introduce Pixel Tracker Maps (via `Phase1PixelSummaryMap`) of the input factors for the computation of the dynamic inefficiency used in the pixel digitizer. This is done separately for geometrical and PU factors.\r\nProvision for the further expansion are laid out, but currently not used (and therefore commented)\r\nThe package unit tests are also expanded accordingly.\r\n\r\n#### PR validation:\r\n\r\nRun the following script:\r\n\r\n```bash\r\n#!/bin/bash\r\n# Save current working dir so img can be outputted there later\r\nW_DIR=$(pwd);\r\nsource /afs/cern.ch/cms/cmsset_default.sh;\r\neval `scram run -sh`;\r\n# Go back to original working directory\r\ncd $W_DIR;\r\n\r\nif [ -d $W_DIR/plots_DynIneff ]; then\r\n    rm -fr $W_DIR/plots_DynIneff\r\nfi\r\n\r\nmkdir -p $W_DIR/plots_DynIneff\r\n\r\ntags=(SiPixelDynamicInefficiency_PhaseI_v9 SiPixelDynamicInefficiency_PhaseI_v8 SiPixelDynamicInefficiency_PhaseI_Run3Studies_v2 SiPixelDynamicInefficiency_PhaseI_Run3Studies SiPixelDynamicInefficiency_P\r\nhaseI_v6 SiPixelDynamicInefficiency_PhaseI_v5 SiPixelDynamicInefficiency_PhaseI_v4 SiPixelDynamicInefficiency_PhaseI_relvals_v2 SiPixelDynamicInefficiency_PhaseI_relvals_v1 SiPixelDynamicInefficiency_Pha\r\nseI_v3 SiPixelDynamicInefficiency_Phase1_v4 SiPixelDynamicInefficiency_Phase1_v3 SiPixelDynamicInefficiency_13TeV_v3_mc SiPixelDynamicInefficiency_FakeInefficiency_0999_mc SiPixelDynamicInefficiency_Phas\r\neI_v2 SiPixelDynamicInefficiency_PhaseI_v1 SiPixelDynamicInefficiency_13TeV_v2_mc SiPixelDynamicInefficiency_8TeV_v2_mc SiPixelDynamicInefficiency_13TeV_50ns_v2_mc SiPixelDynamicInefficiency_8TeV_v1_mc S\r\niPixelDynamicInefficiency_13TeV_v1_mc SiPixelDynamicInefficiency_13TeV_50ns_v1_mc)\r\nplots=(Geom ColGeom ChipGeom)\r\n\r\nfor i in \"${tags[@]}\" \r\ndo\r\n    for j in \"${plots[@]}\" \r\n    do\r\n    \tgetPayloadData.py \\\r\n    \t    --plugin pluginSiPixelDynamicInefficiency_PayloadInspector \\\r\n    \t    --plot plot_SiPixelDynamicInefficiency${j}FactorMap \\\r\n    \t    --tag ${i} \\\r\n    \t    --time_type Run \\\r\n    \t    --iovs '{\"start_iov\": \"1\", \"end_iov\": \"1\"}' \\\r\n    \t    --db Prod \\\r\n    \t    --test;\r\n\r\n    \tmv *.png $W_DIR/plots_DynIneff/${j}_${i}.png\r\n    done\r\n\r\n    getPayloadData.py \\\r\n     \t--plugin pluginSiPixelDynamicInefficiency_PayloadInspector \\\r\n\t--plot plot_SiPixelDynamicInefficiencyPUPixelMaps \\\r\n\t--tag ${i} \\\r\n     \t--time_type Run \\\r\n     \t--iovs '{\"start_iov\": \"1\", \"end_iov\": \"1\"}' \\\r\n     \t--db Prod \\\r\n     \t--test;\r\n    \r\n    mv *.png $W_DIR/plots_DynIneff/PU_${i}.png\r\ndone\r\n```\r\n\r\nand obtained sensible plots. An example is the following plot:\r\n\r\n![image](https://user-images.githubusercontent.com/5082376/212071912-e4d012b9-a525-48d8-95eb-15d1f66abc64.png)\r\n\r\nAlso tested the package unit tests via `scram b runtests`.\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nN/A", "branch": "master", "changed_files": 6, "comments": 10, "commits": 3, "created_at": "1673525161", "deletions": 22, "labels": ["dqm-approved", "fully-signed", "tests-approved", "orp-pending", "db-approved", "code-checks-approved"], "milestone": "CMSSW_13_0_X", "number": 40495, "release-notes": [], "review_comments": 0, "state": "open", "title": "Payload Inspector: introduce maps for `SiPixelDynamicInefficiency` input factors ", "updated_at": "1673583486", "user": "mmusich"}