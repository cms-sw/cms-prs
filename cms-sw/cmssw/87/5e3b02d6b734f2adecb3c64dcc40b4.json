{"additions": 21, "auther_ref": "CMSSW_12_1_0_pre5/sign1128/hcalSum", "auther_sha": "b00003da8de51c5457d720de9f31cd662c323e13", "author": "slava77", "body": "costs of computing HCAL isolation in egamma has increased significantly after #33666\r\n- [12_0_0_pre3](https://cms-reco-profiling.web.cern.ch/cms-reco-profiling/cgi-bin/igprof-navigator/releases/CMSSW_12_0_0_pre3/11834.21/step3/cpu_endjob/1108) has \\~0.14% of reco time in isolation\r\n- [12_0_0_pre4](https://cms-reco-profiling.web.cern.ch/cms-reco-profiling/cgi-bin/igprof-navigator/releases/CMSSW_12_0_0_pre5/11834.21/step3/cpu_endjob/27) has 8.9%\r\n    - [12_1_0_pre4](https://cms-reco-profiling.web.cern.ch/cms-reco-profiling/cgi-bin/igprof-navigator/releases/CMSSW_12_1_0_pre4/11834.21/step3/cpu_endjob/28) has a similar fraction\r\n\r\nThis PR mitigates the situation by reordering the calls.\r\n\r\nHowever, a better refactoring of the code should be considered in near future. Some options are\r\n- accumulate all needed isolation types in one loop over rechits\r\n- precompute (,) of rechits in a separate producer in a `ValueMap` and use it when dR computations are needed\r\n@wrtabb @SohamBhattacharya \r\n", "branch": "master", "changed_files": 1, "comments": 5, "commits": 1, "created_at": "1635861474", "deletions": 15, "labels": ["reconstruction-pending", "pending-signatures", "tests-approved", "orp-pending", "code-checks-approved"], "milestone": "CMSSW_12_2_X", "number": 35955, "release-notes": [], "review_comments": 0, "state": "open", "title": "mitigate high CPU cost of HBHE hit position calculation in EgammaHcalIsolation", "updated_at": "1635886098", "user": "slava77"}