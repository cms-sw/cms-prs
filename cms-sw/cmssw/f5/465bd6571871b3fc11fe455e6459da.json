{"additions": 409, "auther_ref": "GsfElectrons", "auther_sha": "5935db18d0a7beb30b75fde2fba871bd00a61405", "author": "guitargeek", "body": "Hi all,\r\n\r\nbetween Christmas and new years I was thinking a bit about how some of our producers/algorithms are configured (in particular Egamma and PF producers). I noticed that configuration is often very verbose, repeating basically the same manual looping over configuration variables at several places, for example:\r\n  * Python config files\r\n  * `fillDescriptions` functions\r\n  * \"configuration struct\" declarations in algorithm classes\r\n  * reading these configuration structs from parameter sets\r\n\r\nAdditionally, there are repetitions from copy-pasted producers and their configs. Today I was trying to get rid of this redundancy at the example of the GsfElectronBaseProducer/GsfElectronAlgo combo, but didn't really conclude (ending up with some ugly preprocessor macros...). In any case, the first step would be to carry all the configuration over to C++ via the fillDescriptions functionality, which I propose in this PR, reducing some of the redundancy from the copy-pasted config files on the way.\r\n\r\nNote that having all configuration defaults in the C++ code makes it easier to validate it and therefore refactor things in the future, which I think eventually has to be done to reunite the upcoming low-pt electron reconstruction with the current reconstruction.\r\n\r\nLocal matrix tests pass and I hope I didn't do any mistakes shuffling config values around which cause differences!", "branch": "master", "changed_files": 13, "comments": 1, "commits": 4, "created_at": "1546218343", "deletions": 823, "labels": ["code-checks-pending", "comparison-pending", "orp-pending", "pending-signatures", "reconstruction-pending", "tests-pending"], "milestone": "CMSSW_10_5_X", "number": 25574, "release-notes": [], "review_comments": 0, "state": "open", "title": "FillDescriptions for all 3 GsfElectronProducers", "updated_at": "1546218392", "user": "guitargeek"}