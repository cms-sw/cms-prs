{"additions": 8, "auther_ref": "from-CMSSW_12_3_0_pre1-GhostTrackVertex", "auther_sha": "fc78082b21860cd83175da01d9251879db138465", "author": "slava77", "body": "while debugging in some corner of phase space I noticed that a relatively benign case of averaging of two identical points in `GhostTrackVertexFinder::vtxMean` can lead to a NaN in the results.\r\nThe NaN eventually propagates downstream and leads to \r\nan exception thrown in `PerigeeConversions::ftsToPerigeeParameters` (`cms::Exception(\"PerigeeConversions\", \"Track with pt=0\")`), which is actually caught in https://github.com/cms-sw/cmssw/blob/14da925d52a1bf0b6a0580000f6fc2bd703deb61/TrackingTools/TrajectoryState/src/TrajectoryStateClosestToPoint.cc#L17-L22. Apparently, given no checks for finiteness,  a perp computed on a 3D vector of NaN values looks like a zero.\r\n\r\nI'm proposing a simple fix to return one of the identical points.\r\n\r\nI'm adding a warning only because this condition was previously leading to a (caught) exception.\r\n\r\n(~Also, I'm not familiar enough with `GhostTrackVertexFinder` to conclude that an averaging with self is an indication of a logic error and that a fix upstream is needed.~)\r\nAfter some tests in relvals, the conditions seems to happen in ` O(1e-3)` events.\r\n", "branch": "master", "changed_files": 2, "comments": 13, "commits": 1, "created_at": "1646058527", "deletions": 0, "labels": ["reconstruction-pending", "pending-signatures", "tests-approved", "orp-pending", "code-checks-approved"], "milestone": "CMSSW_12_3_X", "number": 37088, "release-notes": [], "review_comments": 1, "state": "open", "title": "properly treat averaging with self in GhostTrackVertexFinder::vtxMean", "updated_at": "1646149374", "user": "slava77"}