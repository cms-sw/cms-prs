{"additions": 239, "auther_ref": "AccessPerEventPerProductParameterSets", "auther_sha": "1a8a61b9af24e7d8a5346ebef6ee95841aaa7a2b", "author": "wmtan", "body": "This pull request is an improvement to the handling of provenance in the framework for thread safety and removing unnecessary redundancy.  The changes outside the framework are the minimal adaptation to the framework change 3) listed below.\n\nThe framework changes consist of:\n1) The vector of process configurations is no longer persisted, because the information is redundant.  The information is contained in the vector of process histories, which is still persisted.\n2) The branch description for each product no longer contains a transient map from the process configuration ID to the parameter set ID, and no longer contains a transient map from the process configuration ID to the name of the module that produced the product.  This information was redundant, as this information can be obtained through the process history ID.\n3) In implementing 2, the function Provenance::psetID, which returned the parameter set ID of the module that produced the product was replaced by a free function that takes the provenance as an argument and returns the parameter set directly (not the parameter set ID).  The function Provenance::moduleName() was also replaced by a free function.  These new functions must internally retrieve a parameter set.  This means they can no longer be member functions of Provenance, because this would cause a cyclic package dependency,  The new free functions are in the package FWCore/Common Several packages outside the framework were minimally adapted to this change.\n4) The edmProvDump command and one framework unit test needed adaptions because of 3).\n5) edmProvDump was updated to use C++11 range for loops.\n6) For physical design reasons, the Provenance class, and several classes containing it, (none persistable), will, in the future (not in this pull request) be moved from DataFormats/Provenance to FWCore/Common.  This is not done now, but to prepare for this all framework includes of Provenance.h now use the new Provenance.h header in FWCore/Common.\n7) Because of the changes 2) and 3) above, the \"parameterSetsMustMatch\" parameter for merging files  is obsolete.  The default was \"permissive\".  With this pull request, this parameter will effectively always be permissive,as strict mode is obsolete.  This has zero practical effect because this parameter was never used explicitly anywhere in CMSSW, so permissive mode was always in effect.  Note: The \"branchesMustMatch\" parameter is unaffected by this pull request.\n", "branch": "CMSSW_7_0_X", "changed_files": 48, "closed_at": "1377083415", "comments": 10, "commits": 1, "created_at": "1377053221", "deletions": 501, "labels": ["alca-approved", "core-approved", "hlt-approved", "reconstruction-approved", "simulation-pending"], "merge_commit_sha": "83bc0241f119fd7423c62503bae3c270857b7f6b", "merged_at": "1377083415", "merged_by": "ktf", "milestone": "CMSSW_7_0_0_pre3", "number": 580, "release-notes": [], "review_comments": 0, "state": "closed", "title": "access per event per product parameter sets", "updated_at": "1406900433", "user": "wmtan"}