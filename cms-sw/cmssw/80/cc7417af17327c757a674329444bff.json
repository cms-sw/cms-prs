{"additions": 472, "auther_ref": "dqm", "auther_sha": "1cfe0962e95b479c323249481dff81dec7c36c85", "author": "fwyzard", "body": "Use a wrapper around `MonitorElement` to handle concurrent filling via the `fill(...) const` and `shiftFillLast(...) const` methods.\r\n\r\nAll configuration of the underlying ROOT objects should to be done before booking the `MonitorElement` (e.g. via `book1D (const std::string &name, TH1F *h);`.\r\nOr, we can add the non-`const` methods that are already avalable in the `MonitorElement` interface, though they are only a subset of the `TH1` methods.\r\nIn any case, no access to the underlying ROOT object pointer is provided.\r\n\r\nAdd a `ConcurrentBooker` class that inherits from `IBooker` and replace its `book...` methods to return `ConcurrentMonitorElements`; and a `DQMStore::bookConcurrentTransaction(...)` method that uses the `ConcurrentBooker` in place of the `IBooker`.\r\n\r\nAdd a new `DQMGlobalEDAnalyzer` inheriting from `edm::global::EDAnalyzer` instead of `edm::stream::EDAnalyzer`, and books \"global\" `MonitorElement`s (with stream id = 0 and module id = 0).\r\nThe user will need to provide a `class` or `struct` that can book and fill the histograms. Filling must be a `const` method, so one should make use of the `ConcurrentMonitorElement` just introduced.", "branch": "master", "changed_files": 4, "closed_at": "1512722387", "comments": 25, "commits": 3, "created_at": "1511848520", "deletions": 188, "labels": ["code-checks-approved", "comparison-notrun", "dqm-pending", "hlt-pending", "orp-pending", "pending-signatures", "tests-rejected"], "milestone": "CMSSW_10_0_X", "number": 21470, "release-notes": [], "review_comments": 0, "state": "closed", "title": "[RFC] First attempt at a \"global\" DQM analyzer ", "updated_at": "1512722557", "user": "fwyzard"}