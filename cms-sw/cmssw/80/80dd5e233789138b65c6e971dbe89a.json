{"additions": 2, "auther_ref": "iarspider-patch-20240817-2", "auther_sha": "3f0a9bb87eb79b51255b99a167be07fefba06ad4", "author": "iarspider", "body": "#### PR description:\r\n\r\nIn GCC13 IB, compiler warns about a potentially dangling reference to a temporary:\r\n\r\n```\r\n  src/CalibCalorimetry/CaloTPG/plugins/CaloTPGTranscoderULUTs.cc:158:15: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n   158 |   const auto& topo = iRecord.getRecord<HcalLutMetadataRcd>().get(topoToken);\r\n      |               ^~~~\r\nsrc/CalibCalorimetry/CaloTPG/plugins/CaloTPGTranscoderULUTs.cc:158:65: note: the temporary was destroyed at the end of the full expression 'edm::eventsetup::DependentRecordImplementation<RecordT, ListT>::getRecord() const [with DepRecordT = HcalLutMetadataRcd; RecordT = CaloTPGRecord; ListT = edm::mpl::Vector<HcalLutMetadataRcd, CaloGeometryRecord>]().HcalLutMetadataRcd::<anonymous>.edm::eventsetup::DependentRecordImplementation<HcalLutMetadataRcd, edm::mpl::Vector<HcalRecNumberingRecord, IdealGeometryRecord> >::get<HcalTopology, HcalRecNumberingRecord>(((CaloTPGTranscoderULUTs*)this)->CaloTPGTranscoderULUTs::topoToken)'\r\n  158 |   const auto& topo = iRecord.getRecord<HcalLutMetadataRcd>().get(topoToken);\r\n      |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~\r\n```\r\n\r\nSimilar issues in the past were fixed by removing refence. I'm not sure if `topo` is cheap to copy, so I made the code explicitly store the result of getRecord.\r\n\r\n#### PR validation:\r\n\r\nBot tests", "branch": "master", "changed_files": 1, "comments": 2, "commits": 1, "created_at": "1723882276", "deletions": 1, "labels": ["l1-pending", "alca-pending", "pending-signatures", "orp-pending", "tests-started", "code-checks-pending"], "milestone": "CMSSW_14_1_X", "number": 45729, "release-notes": [], "review_comments": 0, "state": "open", "title": "[GCC13] Avoid Wdangling-reference warning in CaloTPGTranscoderULUTs", "updated_at": "1723882301", "user": "iarspider"}