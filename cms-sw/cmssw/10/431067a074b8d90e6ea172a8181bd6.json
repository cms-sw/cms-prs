{"additions": 6, "auther_ref": "Phase2-WF31", "auther_sha": "fc2fe09b53a335d7d5971c886b7a6fa586135b68", "author": "kpedro88", "body": "There was some work done to improve efficiency in `MuonAssociatorByHitsHelper` previously in #16669, but it did not fully solve the problem. After a number of attempts, I determined that calls to `std::vector<>::begin()/end()` can actually become rather costly when repeated ad infinitum in 200PU workflows. Using range-based loops turned out to be the easiest solution. (Unfortunately, the outermost loop in `getShared()` can't be optimized this way because `boost::ptr_vector` doesn't appear to support it.)\r\n\r\nigprof results for step3 using 5 events w/ 200PU in WF 21434.0 (ttbar 2023D4PU):\r\n\r\nbaseline:\r\n```\r\n[32]       11.7     889.68     301.64 / 588.03     MuonAssociatorByHitsHelper::getShared(boost::ptr_vector<std::pair<unsigned int, std::vector<std::pair<unsigned int, EncodedEventId>, std::allocator<std::pair<unsigned int, EncodedEventId> > > >, boost::heap_clone_allocator, std::allocator<void*> >&, __gnu_cxx::__normal_iterator<TrackingParticle const*, std::vector<TrackingParticle, std::allocator<TrackingParticle> > >) const\r\n            6.4  .........     487.96 / 487.96       TrackingParticle::g4Track_begin() const [43]\r\n            1.1  .........      80.48 / 80.52        TrackingParticle::g4Track_end() const [188]\r\n            0.3  .........      19.59 / 155.88       _init [127]\r\n```\r\n\r\nPR:\r\n```\r\n[39]        6.8     495.26     495.26 / 0.00       MuonAssociatorByHitsHelper::getShared(boost::ptr_vector<std::pair<unsigned int, std::vector<std::pair<unsigned int, EncodedEventId>, std::allocator<std::pair<unsigned int, EncodedEventId> > > >, boost::heap_clone_allocator, std::allocator<void*> >&, __gnu_cxx::__normal_iterator<TrackingParticle const*, std::vector<TrackingParticle, std::allocator<TrackingParticle> > >) const\r\n```\r\n\r\nThis module only runs in Validation, so this won't have an impact on CPU time, but will help with relvals. Further improvements should come from more dedicated reorganization of the code by muon experts.", "branch": "CMSSW_9_0_X", "changed_files": 1, "closed_at": "1481288997", "comments": 11, "commits": 2, "created_at": "1481250378", "deletions": 8, "labels": ["comparison-available", "fully-signed", "orp-approved", "simulation-approved", "tests-approved"], "merge_commit_sha": "997ea580a731526b4a831aa76b7924d2ee9d2676", "merged_at": "1481288997", "merged_by": "cmsbuild", "milestone": "CMSSW_9_0_X", "number": 16941, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Reduce CPU time in MuonAssociatorByHitsHelper", "updated_at": "1481288998", "user": "kpedro88"}