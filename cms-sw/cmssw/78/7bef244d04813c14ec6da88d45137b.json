{"additions": 29, "auther_ref": "mm_fix_stream_PhotonXGBoostProducer", "auther_sha": "0cb098523292d21662576f2a5b3d640cf4a6bc61", "author": "mmusich", "body": "#### PR description:\r\n\r\nAddresses https://github.com/cms-sw/cmssw/pull/45085#issuecomment-2167579713 by using the suggestion at https://github.com/cms-sw/cmssw/issues/45235#issuecomment-2171446089.\r\nThis avoids to call `XGBooster::predict()` right after a call to `XGBooster::reset()`, leading to evaluating `NaN`-s in the input feature vector.\r\n\r\n#### PR validation:\r\n\r\nRun the following script:\r\n\r\n```bash\r\n#!/bin/bash -ex                                                                                                                                                                                            \r\n\r\njobTag=threads4\r\nhltMenu=/dev/CMSSW_14_0_0/GRun/V141\r\n\r\ncheck_log () {\r\n  grep '0 HLT_DiphotonMVA14p25_Tight_Mass90_v' $1 | grep TrigReport\r\n}\r\n\r\nrun(){\r\n  echo $2\r\n  cp $1 $2.py\r\n  cat <<EOF >> $2.py                                                                                                                                                                                       \r\n                                                                                                                                                                                                           \r\nprocess.options.numberOfThreads = 4                                                                                                                                                                        \r\nprocess.options.numberOfStreams = 4                                                                                                                                                                        \r\n                                                                                                                                                                                                           \r\nprocess.hltOutputMinimal.fileName = '${2}.root'                                                                                                                                                            \r\nEOF                                                                                                                                                                                                        \r\n  cmsRun \"${2}\".py &> \"${2}\".log\r\n  check_log \"${2}\".log\r\n}\r\n\r\nhltGetCmd=\"hltGetConfiguration ${hltMenu}\"\r\nhltGetCmd+=\" --globaltag auto:run3_mc_GRun --mc --unprescale --output minimal --max-events -1\"\r\nhltGetCmd+=\" --input /store/group/dpg_trigger/comm_trigger/TriggerStudiesGroup/STORM/debug/150724_xgboost/RelVal_Raw_GRun_MC.root\"\r\n                                                                                                                                                                                  \r\nconfigLabel=hlt_\"${jobTag}\"_onlyDiphotonMVA14p25_Tight_Mass90                                                                                                                                                                                \r\n${hltGetCmd} --paths HLT_DiphotonMVA14p25_Tight_Mass90_v1 > \"${configLabel}\".py\r\nfor job_i in {0..30}; do run \"${configLabel}\".py \"${configLabel}\"_\"${job_i}\"; done; unset job_i;\r\n``` \r\n\r\nand didn't observe crashes, whereas without this it crashes around 10% of times (3 times out of 30).\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nNot a backport, but if accepted will be backported.\r\n", "branch": "master", "changed_files": 5, "comments": 7, "commits": 2, "created_at": "1718474554", "deletions": 26, "labels": ["reconstruction-pending", "pending-signatures", "tests-pending", "orp-pending", "bug-fix", "code-checks-pending", "ml-pending"], "milestone": "CMSSW_14_1_X", "number": 45232, "release-notes": [], "review_comments": 0, "state": "open", "title": "introduce const variant of `XGBooster::predict `and use it in `PhotonXGBoostEstimator`", "updated_at": "1718567926", "user": "mmusich"}