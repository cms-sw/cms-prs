{"additions": 8, "auther_ref": "CMSSW_7_4_X_2015-01-18-0200/fix-PUPI-wf50202", "auther_sha": "c51260b965e853ef734152daa7b4c1573a13b4bf", "author": "slava77", "body": "Fixes a crash in PileupJetId https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc6_amd64_gcc491/CMSSW_7_4_X_2015-01-18-0200/pyRelValMatrixLogs/run/50202.0_TTbar_13+TTbar_13INPUT+DIGIUP15_PU50+RECOUP15_PU50+HARVESTUP15+MINIAODMCUP1550/step5_TTbar_13+TTbar_13INPUT+DIGIUP15_PU50+RECOUP15_PU50+HARVESTUP15+MINIAODMCUP1550.log\n\nRecent change in \nhttps://github.com/cms-sw/cmssw/commit/ce1863b6512fb541506a1ed37bd17fc76b309a41#diff-34b721ce73bd0269273004088c8a715fL400\n\n```\n- reco::Track impactTrack = (lPack==nullptr)?(*pfTrk):(lPack->pseudoTrack());\n+ const reco::Track& impactTrack = (lPack==nullptr)?(*pfTrk):(lPack->pseudoTrack());\n\n```\n\nexposed a problem with pfTrk being a nullptr and we\nWith the const ref used now we end up with an invalid reference and a segfault.\n\nIt's curious that the result of the following depends on optimization flags:\n\n``` C++\n#include  <iostream>\n\nclass AS {\npublic:\n  float x;\n};\n\nint main(){\n  AS* anullP = nullptr;\n  AS anullV = *anullP;\n  std::cout<<\"Really: \"<<anullV.x<<std::endl;\n\n  return 0;\n}\n\n```\n\ngives:\n\n```\ngcc -o a.exe test_null.cc -lstdc++ -std=c++11 -O0\n~>./a.exe \nSegmentation fault: 11\ngcc -o a.exe test_null.cc -lstdc++ -std=c++11 -O1\n~>./a.exe \nReally: 0\n```\n", "branch": "CMSSW_7_4_X", "changed_files": 1, "closed_at": "1421719773", "comments": 8, "commits": 1, "created_at": "1421715822", "deletions": 0, "labels": ["comparison-pending", "fully-signed", "reconstruction-approved", "tests-approved"], "merge_commit_sha": "d5133f89bec971d4efbc366181c8be5992b5b039", "merged_at": "1421719773", "merged_by": "cmsbuild", "milestone": "Next CMSSW_7_4_X", "number": 7273, "release-notes": [], "review_comments": 0, "state": "closed", "title": "PileupJetId falling back to Muon::bestTrack for PFCandidate muon without a trackRef", "updated_at": "1421720873", "user": "slava77"}