{"additions": 1446, "auther_ref": "scoutingNanoAOD-13_0_0_pre2", "auther_sha": "324432c6fd095ea6f6d04809a7c6570ca055f0cb", "author": "alintulu", "body": "#### PR description:\r\n  \r\nThis PR adds a custom NanoAOD for Run 3 PFScouting. To achieve this we had to add a couple of new files and amend a few more. I will now try to describe the reason behind each addition/amendment:\r\n\r\n-  The custom format is added with `custom_run3scouting_cff.py`, which was modeled from `custom_jme_cff.py`. All Run 3 PFScouting objects (with the exception of jets and PFCandidates) are added with the help of `SimpleFlatTableProducer`. \r\n- Before adding jets and PFCandidates, the latter is converted from Run3ScoutingParticles to recoPFCandidates. This is done in `PhysicsTools/NanoAOD/plugins/Run3ScoutingParticleToRecoPFCandidateProducer.cc` (I was not sure where to put this file, please let me know if it should be moved). The conversion allows us to cluster AK4 and AK8 jets from the recoPFCandidates. There are a list of Run3ScoutingParticle values which are not available in recoPFCandidates, and these are therefore tracked with ValueMaps.\r\n- We have trained AK4 flavour-tagging, AK8 b-tagging and AK8 mass regression with ParticleNet specifically for PFScouting. In order to perform inference, `DeepBoostedJetTagInfoProducer.cc` and `\r\nBoostedJetONNXJetTagsProducer.cc` had to be amended. The former was amended to allow for the specific PFScouting inputs and the latter to produce ValueMaps instead of JetTags. Since the PFScouting jets are RECO and not PAT I did not find a way of associating the output score to the jet using a JetTag (but was able with a ValueMap). I've already opened a PR with the ONNX models necessary for running inference with CMSSW (https://github.com/cms-data/RecoBTag-Combined/pull/49)\r\n- To match PFScouting jets to GenJets `JetDeltaRValueMapProducer.cc` was amended to return the index instead of the value of the matched jet.\r\n- Finally, the PFScouting stream is currently made out of two datasets, `DST_Run3_PFScoutingPixelTracking_v` and `DST_HLTMuon_Run3_PFScoutingPixelTracking_v`. I added a boolean (`isPFScouting`) by amending `NanoAODOutputModule.cc`, `TriggerOutputBranches.cc` and `TriggerOutputBranches.h`. By setting `isPFScouting` to True, information regarding if the event is part of one of these datasets is added at the same time as the HLT information is removed (since this is not relevant to PFScouting).\r\n\r\n#### PR validation:\r\n\r\nThe PR passed the tests listed at https://cms-sw.github.io/PRWorkflow.html.\r\n\r\nWith everything included, the event size is 8.4 kB/event (when ran over 5000 events from `/store/data/Run2022F/ScoutingPFRun3/RAW/v1/000/361/303/00000/37f1ab1d-94f9-4177-91e5-db46490bc69a.root`). However the ScoutingParticles account for 5.3 kB/event. It is not clear how useful they are in the NanoAOD and could perhaps be completely or partly removed (to be discussed).\r\n\r\nA pie-chart showing the most up to date event size distribution can be found [here](https://docs.google.com/presentation/d/1_AXxNPPd8Uw-QWM9bon4GrFLAo8lxExFqj37_Y-XjX4/edit?usp=sharing).\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nN/A", "branch": "master", "changed_files": 9, "comments": 2, "commits": 6, "created_at": "1673010982", "deletions": 314, "labels": ["reconstruction-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-approved", "xpog-pending"], "milestone": "CMSSW_13_0_X", "number": 40438, "release-notes": [], "review_comments": 0, "state": "open", "title": "Custom Run 3 PFScouting NanoAOD", "updated_at": "1673011548", "user": "alintulu"}