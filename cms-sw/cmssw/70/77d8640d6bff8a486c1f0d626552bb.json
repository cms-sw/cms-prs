{"additions": 1494, "auther_ref": "TkSeeding", "auther_sha": "d0595eb6e07152f5ac529ec94c4ffe3a9aa0d6bf", "author": "VinInn", "body": "Migration of Seeders:\nCurrently Hits in the collections created by LocalReco are transformed in TTRH and stored in the SeedingLayerSetsHits.\nSeedingHits are then created. Those who survives are refitted and stored in the TrajectorySeed (as normal TRH in a OwnVector).\nMigration strategy consists in\n1) store in the SeedingLayerSetsHits simple pointers to the TRH created by LocalReco and already in the event.\n2) Proceed as usual \n3) and then store in the final TrajectorySeed their clone created during refit.\nThis should reduce memory use and memory-churn.\nIn addition we use as base type \"BasicTrackerRecHit\" that has very little virtual methods:\nall access to position etc will then be immediate and inlined.\ncaveat: in the process some new hits are created:\n1) by the HitExtractor if is required to keep one of the components of a partially masked MatchedHIt:\nthis option is off, and one can even wonder if shall be kept...\n2) by \"on demand\" regions: Rectangular and Cosmic that ask TTRH to the measurementDet\n3) by the MultiHitGenerator when refitting (most probably we could then create the triplets with the original hits)\nin addition there are a couple of (obsolete?) Seeders that have not been migrated yet to the SeedingLayerSetsHits interface.\nfor 2 and 3 a simple cache of unique_ptr suffices: the lifetime of region matches exactly the required one.\nMultiHitGenerator already has a cache for the triplets and a clear method.\nto manage the one in SeedingLayerSetsHits is a bit more complex, so I decided to introduce a light weight smart pointer that \"may own\"\nan object.\nThis is also needed to support the old Layers set interface.\nWe may decide later to simplify this whole infrastructure in particular if \"projected hit\" in layers are not really needed (and so we can move to a less optimal double cache also in SeedingLayerSetsHits)\nFamos:\nFamos hits needed to be migrated as well to inherit from BasicTrackerRecHit.\nMigration has been completed.\nTests show no regression.\nValgrind shows no memory-leak\nrunTheMatrix.py --useInput=all --list=limited:\n7 7 6 6 4 tests passed, 0 0 0 0 0 failed\nfull matrix\n242 226 192 128 16 tests passed, 0 5 0 0 0 failed\nthe 5 failures are not related to reco (EOS, parameter set)\n\nAt the moment there are several questions still open: so some short cuts have been taken to avoid migrations in other part of the code\nthat may not be needed at the end. In particular I avoided any backward incompatible change to configuration.\nA cleanup is required before going in production.\nBefore a final cleanup and stabilization of code and calling sequences we need \n1) to review the status of all the Seeders. remove those obsolete, migrate to the SeedingLayerSetsHits interface those still pending.\n2) clean the code from the old on demand mechanism\n3) decide if we need to support Famos fake-clusters more generally (in OmniClusterRef)\n4) make MeasurementDet able to produce standard RecHit on the fly\n\nnext step shall be clean up code from the old on-demand mechanism (LazyGetter)\nOnce this is done the migration of MeasurementDets to return RecHit can start.\nThis will then led to the removal of TTRK also from Ctf.\nwe need also to look if we can reduce the size of Famos GSTkHits:\nany by value storage will be dominated by the largest possible object: at the moment Famos hits dominate by large...\n", "branch": "CMSSW_7_1_X", "changed_files": 106, "closed_at": "1395298706", "comments": 23, "commits": 27, "created_at": "1395038393", "deletions": 818, "labels": ["alca-approved", "fastsim-approved", "fully-signed", "reconstruction-approved", "tests-approved"], "merge_commit_sha": "65a6243313b94b9e84b77a86929749405f9166bc", "merged_at": "1395298706", "merged_by": "ktf", "milestone": "CMSSW_7_1_0_pre5", "number": 2884, "release-notes": [], "review_comments": 2, "state": "closed", "title": "Tk seeding", "updated_at": "1492768119", "user": "VinInn"}