{"additions": 7, "auther_ref": "virt-dtors-2", "auther_sha": "04a437505e294ab90693dbe34c03043036aa2e28", "author": "davidlt", "body": "CMSSW GCC 7.0.1 builds now follows jemalloc (dev branch) and also has a\r\nnew TCMalloc. Both of these have C++14 sized deallocation feature\r\nenabled. This means that if possible operator delete will be called with\r\nsize argument, which will help allocator to reduce the time to free the\r\nobject. E.g. this is not possible for incomplete types which size is\r\nunknown at a time.\r\n\r\nGCC 7.0.1 builds contain an additional build of jemalloc\r\n(jemalloc-debug) which contains extra asserts and checks for developers.\r\n\r\nThis seems to be undefined behavior in C++14. From [expr.delete] (5.3.5\r\nDelete):\r\n\r\n    In the first alternative (delete object), if the static type of the\r\n    object to be deleted is different from its dynamic type, the static type\r\n    shall be a base class of the dynamic type of the object to be deleted\r\n    and the static type shall have a virtual destructor or the behavior is\r\n    undefined.\r\n\r\nSigned-off-by: David Abdurachmanov <David.Abdurachmanov@cern.ch>", "branch": "master", "changed_files": 7, "closed_at": "1491738982", "comments": 7, "commits": 1, "created_at": "1491657113", "deletions": 4, "labels": ["alca-pending", "comparison-available", "hlt-approved", "l1-pending", "orp-pending", "pending-signatures", "tests-approved"], "merge_commit_sha": "1e6893687870d4799e2926a435f95e1ac0d46e76", "merged_at": "1491738982", "merged_by": "davidlange6", "milestone": "CMSSW_9_1_X", "number": 18273, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Add missing virtual dtors #2", "updated_at": "1491738982", "user": "davidlt"}