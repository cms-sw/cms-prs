{"additions": 6, "auther_ref": "patMET_ctor_fix-740p9", "auther_sha": "1d6a7afa64588691bf457a4fe9a4865fd56f32e3", "author": "gpetruc", "body": "Before, if a `pat::MET` was created from a base class c++ or edm pointer, all the data members not in the base class `reco::MET` were not copied. \nAnd apparently PyFWLite can decide to call the constructor with `reco::MET` argument even when it should know that the object it has in hand is a `pat::MET`, so this fix is important if somebody tries to copy a `pat::MET`object by value in PyFWLite (e.g. to modify it later)\n\nLet me know if I should make the PR also to `CMSSW_7_5_X` or to `CMSSW_7_4_ROOT6_X`\n(this versy same branch merges also in `CMSSW_7_5_X`)\n\n@cbernet @arizzi \n", "branch": "CMSSW_7_4_X", "changed_files": 1, "closed_at": "1427708615", "comments": 7, "commits": 1, "created_at": "1427317367", "deletions": 0, "labels": ["analysis-pending", "comparison-available", "orp-pending", "pending-signatures", "tests-approved"], "merge_commit_sha": "384ee1793eb122ef65fda8abf2c94c11bea2a458", "merged_at": "1427708615", "merged_by": "davidlange6", "milestone": "Next CMSSW_7_4_X", "number": 8531, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Fix creating a pat::MET from a reco::MET pointing to a pat::MET", "updated_at": "1443642508", "user": "gpetruc"}