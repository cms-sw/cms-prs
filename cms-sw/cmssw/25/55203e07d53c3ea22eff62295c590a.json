{"additions": 7, "auther_ref": "MemLeakFixForTrkSel1030pre3", "auther_sha": "dd4bef92af985d344e135b3ff585d77f1ba5cc3d", "author": "Sam-Harper", "body": "Dear All,\r\n\r\nThe EGamma 2018 RelVal workflows have been crashing due to jobs existing their memory allocations since pre3.  After investigation from the EGamma group, we have discovered that CalibrationTrackSelectorFromDetIdList (newly introduced for pre3) has a large memory leak where it leaks the hits it copies if it does not decided to save the track.  For example after 1850 events for one of the problematic jobs, this module is responsible for 20% of the live memory.\r\nhttp://sharper.web.cern.ch/sharper/cgi-bin/igprof-navigator/egMem1030pre3Live1851\r\n\r\nWith this PR, this consumption is reduced to a level below the measurable threshold. \r\nhttp://sharper.web.cern.ch/sharper/cgi-bin/igprof-navigator/egMem1030pre3FixedLive1851\r\n\r\nThis PR fixes the memory leak in CalibrationTrackSelectorFromDetIdList by using smart rather than bare pointers.  Could I request that the AlCa group encourage new code to follow this approach in the future, its good practice in modern c++ to do use smart pointers where possible and saves effort  (such as this) in the long run. \r\n\r\nMore details:\r\nhttps://sharper.web.cern.ch/sharper/cms/talks/egammaRelValMemLeak.pdf\r\n\r\nOn testing: \r\nI have only tested that it fixes the memory leak, I did not look at the output of the module to ensure it was still the same. I would be surprised if it changed due to these technical changes but just to warn that bit hasnt been fully tested. If in few days my jobs finish successfully (ie they arent killed or anything) I can supply the relevant output root files if requested too but otherwise I dont intend to do anything more\r\n\r\nBest,\r\nSam\r\n", "branch": "master", "changed_files": 1, "comments": 1, "commits": 1, "created_at": "1537613651", "deletions": 10, "labels": ["alca-pending", "code-checks-pending", "comparison-pending", "orp-pending", "pending-signatures", "tests-pending"], "milestone": "CMSSW_10_3_X", "number": 24626, "release-notes": [], "review_comments": 0, "state": "open", "title": "Fixing memory leak in new Tracking AlCa producer", "updated_at": "1537613669", "user": "Sam-Harper"}