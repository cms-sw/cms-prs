{"additions": 76, "auther_ref": "FasterMuonShowerInfo", "auther_sha": "34989a5c6e9def16d94f4347265e740a9a73ab03", "author": "jhgoh", "body": "This PR reduces algorithm complexity in MuonShowerInformationFiller by reducing un-necessary series of sorting while build largest cluster of rechits to a muon.\nTiming performance can be improved for events with large number of muon hits.\n\nPrevious algorithm collects nearby hits by sorting rechits in increasing order or abs(deltaPhi), and do the sorting for every rechits in the vector. Clustering can be done by just fining large gaps after sorting by phi. \n\nThis may give a partial solution to the long prompt reco timing issue in the following HN.\nhttps://hypernews.cern.ch/HyperNews/CMS/get/recoDevelopment/1392.html\nx20 total time reduction was observed for one most problematic event mentioned in the HN.\n\n(to be confirmed/cross-checked) Original code does sorting[2] inside a loop[1]. This may introduce random behavior (or random infinite-like loop). New code is free from this problem.\n[1] https://github.com/cms-sw/cmssw/blob/CMSSW_7_4_X/RecoMuon/MuonIdentification/src/MuonShowerInformationFiller.cc#L850-L862\n[2] https://github.com/cms-sw/cmssw/blob/CMSSW_7_4_X/RecoMuon/MuonIdentification/src/MuonShowerInformationFiller.cc#L289\n", "branch": "CMSSW_7_4_X", "changed_files": 2, "closed_at": "1447079117", "comments": 19, "commits": 3, "created_at": "1445836890", "deletions": 51, "labels": ["comparison-available", "orp-pending", "pending-signatures", "reconstruction-pending", "tests-approved"], "milestone": "Next CMSSW_7_4_X", "number": 12090, "release-notes": [], "review_comments": 5, "state": "closed", "title": "Faster muon shower info filler to fix slow prompt reco issue", "updated_at": "1454157705", "user": "jhgoh"}