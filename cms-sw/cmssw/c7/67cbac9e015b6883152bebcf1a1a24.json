{"additions": 49, "auther_ref": "stripHybridZeroSuppression_copyIfFEDZS_1110pre5", "auther_sha": "4abf09d596d6c21a267f579827df400709c29e61", "author": "pieterdavid", "body": "#### PR description:\r\n\r\nChanged the implementation of the zero-suppression for hybrid strip tracker data, where most of the APVs are zero-suppressed in the FED, and some detected as having a non-flat or shifted baseline, and fully read out. When the software zero-suppression processes these data, the digis for APVs that were already zero-suppressed can simply be copied, but the current implementation would still recalculate the common mode (and ignore the result from that).\r\nThe time gain for a 2021 HI scenario is difficult to estimate (it depends on occupancy and the number of APVs that is not zero-suppressed by the FEDs), but should be significant, about an order of magnitude less time spent in the ZS (on the 2015 VR file I used for validation a factor 14).\r\nWith the changes above it didn't really make sense anymore to have different \"convert hybrid to raw digis\" and two suppressHybridData methods, so I made it one that can handle the calls from both the ZS module and the regional unpacker; I also removed the option to write the raw digis out again from the ZS for hybrid inputs (it was not used anywhere, and keeping this would have made the rest more complicated and inefficient).\r\n\r\n#### PR validation:\r\n\r\nNo changes are expected. I did a digi-to-digi comparison by adding a flag to switch between the old and new implementation (removed only in the last commit), on 2018 repacked data (as in the HI benchmarks), [config](https://github.com/pieterdavid/SiStripLocalRecoDebugging/blob/master/test/test_hybridZSSpeedup_2018.py), and 2015 VR data with hybrid emulation, [config](https://github.com/pieterdavid/SiStripLocalRecoDebugging/blob/master/test/test_hybridZSSpeedup_2015VR.py); I also checked that the digis are the same between the full sequence and the regional unpacker (which calls the zero-suppression in a slightly different way, I think it may have been wrong before, but was not used).\r\n\r\nCould this be tested with workflow 140.55? I think that's the only one that uses this code.\r\n\r\nCC: @icali @CesarBernardes ", "branch": "master", "changed_files": 4, "closed_at": "1589516636", "comments": 24, "commits": 7, "created_at": "1588856927", "deletions": 101, "labels": ["code-checks-approved", "comparison-available", "fully-signed", "orp-approved", "reconstruction-approved", "tests-approved"], "merge_commit_sha": "23b3fa32325ba54635f6c51a23dadf13d6984ee7", "merged_at": "1589516636", "merged_by": "cmsbuild", "milestone": "CMSSW_11_1_X", "number": 29759, "release-notes": [], "review_comments": 2, "state": "closed", "title": "Strip hybrid zero suppression: do less work if the APV is already zero-suppressed", "updated_at": "1589516636", "user": "pieterdavid"}