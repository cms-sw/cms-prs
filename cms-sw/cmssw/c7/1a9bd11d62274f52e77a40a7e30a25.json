{"additions": 31, "auther_ref": "ImproveTypeWithDict", "auther_sha": "e9923e11c6a6fbd3c0ffa532c73647aaf9300eb8", "author": "wmtan", "body": "Some ROOT6 specific improvements to TypeWithDict.\n\n1) Define a new dummy type to be used as the type for an invalid TypeWithDict.  \"void\" was being used, but this is no good since there can be a valid TypeWithDict for type \"void\".\nThe type used here is a pointer to a pointer to an empty enum{}.  This is an arbitrary type that will never be used otherwise.\n\n2) The typedef for the dummy type being used for the type_info field of a valid TypeWithDict with no type_info information was renamed from dummyEnum to dummyType, because in the future it will be used for types other than enums.\n\n3) To check if a valid TypeWithDict has valid type_info information, simply check that the type-info field is not dummyType.  Remove the current unnecessarily complex check for this.\n\n4) (A fix) When constructing a TypeWithDict from a TType, explicitly check that the type is not an array or a pointer before creating a TClass for the type.  I happened to notice that in some rare cases an array of classes was being treated as a class by TType.   This will all be moot after TType is removed entirely, but, for now, the code should be correct.\n\n5) Add some statements useful in debugging, but comment them out.  This makes it easy to add them when needed.\n\nPlease merge this request as soon as convenient.\n", "branch": "CMSSW_7_4_ROOT6_X", "changed_files": 2, "closed_at": "1418662646", "comments": 1, "commits": 1, "created_at": "1418661590", "deletions": 12, "labels": ["comparison-pending", "core-pending", "pending-signatures", "tests-pending"], "merge_commit_sha": "cdb6597d6b73a965a7a38aaa9859757f0d12b292", "merged_at": "1418662646", "merged_by": "davidlt", "number": 6935, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Minor improvements to TypeWithDict", "updated_at": "1418667221", "user": "wmtan"}