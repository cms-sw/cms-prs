{"additions": 3, "auther_ref": "llvm21-warn-destroyed-obj1", "auther_sha": "2f80264b07ef13250a1a977b238f1799f8344faf", "author": "smuzaffar", "body": "In CLANG_X IBs (with llvm21), we have couple of warnings like [a]. This is because `MaterialBudgetData` returns a copy of `std::string` which gets destroyed after the `getStepVolumeName` or `getStepMaterialName` call. This PR proposes to change `MaterialBudgetData` class and return a `const std::string&` nstead of a copy. This should fix the compilation warning and should also avoid `string` copy\r\n\r\n\r\n[a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc13/CMSSW_16_0_CLANG_X_2025-10-28-2300/Validation/Geometry\r\n```\r\n[src/Validation/Geometry/src/MaterialBudgetTree.cc:161](https://github.com/cms-sw/cmssw/blob/CMSSW_16_0_CLANG_X_2025-10-28-2300/Validation/Geometry/src/MaterialBudgetTree.cc#L161):26: warning: object backing the pointer 'this->t_VolumeName[ii]' will be destroyed at the end of the full-expression [-Wdangling-assignment-gsl]\r\n   161 |       t_VolumeName[ii] = theData->getStepVolumeName(ii).c_str();\r\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  [src/Validation/Geometry/src/MaterialBudgetTree.cc:177](https://github.com/cms-sw/cmssw/blob/CMSSW_16_0_CLANG_X_2025-10-28-2300/Validation/Geometry/src/MaterialBudgetTree.cc#L177):28: warning: object backing the pointer 'this->t_MaterialName[ii]' will be destroyed at the end of the full-expression [-Wdangling-assignment-gsl]\r\n   177 |       t_MaterialName[ii] = theData->getStepMaterialName(ii).c_str();\r\n```", "branch": "master", "changed_files": 1, "comments": 2, "commits": 1, "created_at": "1761737230", "deletions": 3, "labels": ["dqm-pending", "geometry-pending", "pending-signatures", "orp-pending", "tests-started", "code-checks-pending"], "milestone": "CMSSW_16_0_X", "number": 49250, "release-notes": [], "review_comments": 0, "state": "open", "title": "MaterialBudgetData: Return a const& to string instead of making a copy", "updated_at": "1761737251", "user": "smuzaffar"}