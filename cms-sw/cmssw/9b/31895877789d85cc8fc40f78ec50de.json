{"additions": 85, "auther_ref": "SiPixelDigitizer-uninit-fix", "auther_sha": "f2496f244bf0f25ce4c8db76bea0431bb83e835a", "author": "dan131riley", "body": "This PR addresses two uninitialized variable issues with SiPixelDigitizerAlgorithm.\r\n\r\n1) SimTracker/SiPixelDigitizer/plugins/SiPixelDigitizerAlgorithm.cc line 145 vector::reserve() is used where vector::resize() should have been used.  Since this is always a fixed size of 6, in principle std::vector could have been replaced with std::array here.  The only practical effect of this bug is an exception if std::vector bounds checking is enabled.\r\n\r\n2) SiPixelDigitizerAlgorithm::PixelTempRewgt2D() calls templ2D methods before templ2D.interpolate() is called.  This is problematic because SiPixelTemplate2D::interpolate() sets the cached values for the current template that PixelTempRewgt2D() is accessing, so the calls to xsize() and ysize() around line 2348 are either accessing uninitialized values (first time) or stale values from the previous call to interpolate().  To fix this I refactored the caching of the current template values into a separated getid() method, modifying interpolate() and PixelTempRewgt2D() to use the new call.  (There are certainly other ways to address this if there are strong preferences for something else.)\r\n\r\nThese were found while chasing issue #23715 in valgrind.  (2) has pretty far-reaching consequences, but it isn't clear yet whether it is actually responsible for the crashes documented in that issue.", "branch": "master", "changed_files": 3, "comments": 15, "commits": 1, "created_at": "1535652615", "deletions": 70, "labels": ["code-checks-approved", "comparison-pending", "db-approved", "orp-pending", "pending-signatures", "reconstruction-pending", "simulation-approved", "tests-pending"], "milestone": "CMSSW_10_3_X", "number": 24421, "release-notes": [], "review_comments": 0, "state": "open", "title": "SiPixelDigitizerAlgorithm uninitialized variables", "updated_at": "1536752795", "user": "dan131riley"}