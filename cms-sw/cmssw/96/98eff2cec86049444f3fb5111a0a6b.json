{"additions": 694, "auther_ref": "lock_free_allocator_142x", "auther_sha": "e52d04f40f4e9a00180b31938284d3a27e12bcf3", "author": "fwyzard", "body": "#### PR description:\r\n    \r\nMove the live block descriptors to the alpaka buffers: instead of tracking the descriptors for the live blocks in a global map, store each block's descriptor within the deleter of the block itself.\r\n\r\nReimplement the free list as an `std::vector` of `tbb::concurrent_queue` objects, one per\r\nbin of the caching allocator.\r\nSince a block may be in the free list but not actually be available for reuse, blocks are popped from the queue until an available block is found and reused, or the queue is empty and new block is requested. Then all popped blocks are pushed back to the queue.\r\n\r\nUse atomic operations for the individual statistics.\r\nAccess to the whole set of statistics may not be fully consistent, but they should only be used for debugging or monitoring.\r\n\r\n*Note*: the `reconstruction` and `upgrade` signatures are due to the inclusion of #48217; they should no longer be needed once that gets merged.\r\n\r\n#### PR validation:\r\n\r\n[Validated](https://github.com/cms-sw/cmssw/pull/46658#issuecomment-2921873541) on top of CMSSW 15.1.0-pre3 with the 2024 HLT menu.\r\n\r\nNo impact on the HLT performance when running on GPUs:\r\n  - `CMSSW_15_1_0_pre3`: 1316.7  1.6 ev/s\r\n  - with this PR: 1317.8  0.6 ev/s\r\n\r\nEnabling the caching allocator for the alpaka CPU back-end leads to [a 10% speed-up](https://github.com/cms-sw/cmssw/pull/46658/files#r2119198716) in the alpaka code, and an overall speed-up of 5%-6% for the full HLT running _on CPU-only_:\r\n  - `CMSSW_15_1_0_pre3`: 809.5  1.4 ev/s\r\n  - with this PR: 856.0  2.5 ev/s\r\n", "branch": "master", "changed_files": 6, "comments": 57, "commits": 3, "created_at": "1731326494", "deletions": 435, "labels": ["core-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-pending", "heterogeneous-pending"], "milestone": "CMSSW_15_1_X", "number": 46658, "release-notes": [], "review_comments": 36, "state": "open", "title": "Make the caching memory allocator lock-free", "updated_at": "1749016147", "user": "fwyzard"}