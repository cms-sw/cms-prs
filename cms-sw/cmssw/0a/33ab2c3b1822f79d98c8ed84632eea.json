{"additions": 178, "auther_ref": "mm_dev_doNotVetoOnMaskedModules", "auther_sha": "622a1297d47176b208605e96aaa7a084b9affed5", "author": "mmusich", "body": "#### PR description:\r\n\r\nThe goal of this PR is to add a mechanism to ignore exceeding movements thresholds in the veto of the payload upload logic of the pixel alignment prompt calibration loop harvesting module, when these happen on a **known** inactive region (as flagged by `SiPixelQuality`).\r\nThis should be able to address the cases in which a SiPixelAli PCL upload gets stuck due to exceeding thresholds for some time, while there is no actual good reason for it (as the vetoing \"alignables\" are anyway poorly measured due to the lack of hits on them). A real life case happened in 2024, and is documented in this [cmsTalk thread](https://cms-talk.web.cern.ch/t/express-prompt-trackeralignment-temporary-raising-hg-combined-thresholds-for-bpix-l4/43681).\r\nThe logic is done in such a way that this mechanism is steered via the boolean flag `ignoreInactiveAlignables` (by default left to `false`) and the \"alignable\" is flagged as inactive if at least 50% + 1 of its `deepComponents` are inactive as flagged by `SiPixelQuality`.\r\nThis is done via the following action items:\r\n   * ce41c8c4597272144350bbe1584823176dde76dc: use `SiPixelQuality` in `MillePedeFileReader` and percolate consumes in calling classes\r\n   * 13490018f731200be9b4853ea12b5058699d0933: add function to establish if the alignable is active or not \r\n   * b58a338bbd8fd2061a2cdaee8d2e0172201f1944: add flag to ignore inactive alignables in the veto map\r\n   * 622a1297d47176b208605e96aaa7a084b9affed5, in addition, add `fillDescriptions` to `MillePedeDQMModule`\r\n\r\n#### PR validation:\r\n\r\nI tested this branch with the following script (trying to reproduce the failed uploads described above):\r\n\r\n```bash\r\n#!/bin/bash -ex\r\ncmsDriver.py stepHarvestBlock \\\r\n         -s ALCAHARVEST:SiPixelAliHGCombined \\\r\n         --conditions 140X_dataRun3_Express_v3 \\\r\n         --custom_conditions=SiPixelQuality_phase1_2024_v7_mc,SiPixelQualityFromDbRcd \\\r\n         --scenario pp \\\r\n         --data \\\r\n         --dasquery='file dataset=/StreamExpress/Run2024F-PromptCalibProdSiPixelAliHGComb-Express-v1/ALCAPROMPT run=383377' \\\r\n         --era Run3_2024 \\\r\n         --no_exec \r\n\r\ncmsRun stepHarvestBlock_ALCAHARVEST.py >& log.log\r\n```\r\n\r\n   * with the branch as is the payload is still vetoed\r\n   * if instead I flip this bit\r\n   \r\n```diff   \r\n   diff --git a/Alignment/MillePedeAlignmentAlgorithm/python/MillePedeFileReader_cfi.py b/Alignment/MillePedeAlignmentAlgorithm/python/MillePedeFileReader_cfi.py\r\nindex 97e86628ca4..4d3e6a354bd 100644\r\n--- a/Alignment/MillePedeAlignmentAlgorithm/python/MillePedeFileReader_cfi.py\r\n+++ b/Alignment/MillePedeAlignmentAlgorithm/python/MillePedeFileReader_cfi.py\r\n@@ -2,7 +2,7 @@ import FWCore.ParameterSet.Config as cms\r\n \r\n MillePedeFileReader = cms.PSet(\r\n     fileDir = cms.string(''),\r\n-    ignoreInactiveAlignables = cms.bool(True),\r\n+    ignoreInactiveAlignables = cms.bool(False),\r\n     millePedeEndFile = cms.string('millepede.end'),\r\n     millePedeLogFile = cms.string('millepede.log'),\r\n     millePedeResFile = cms.string('millepede.res'),\r\n```\r\n   the payload gets written regularly.\r\n\r\nIn the specifics these were the alignables that got the payload vetoed\r\n\r\n![image](https://github.com/user-attachments/assets/11b2ef82-1c1b-4176-b5a3-bf305e3720a8)\r\n\r\nand here is the corresponding `SiPixelQuality` to be used\r\n\r\n![image](https://github.com/user-attachments/assets/fbde6dbf-642b-4258-91d1-1b656b8c1167)\r\n\r\nAlso `runTheMatrix.py -l 1001.2,1001.3,1001.4 --ibeos` passes OK.\r\n \r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nNot a backport, not to be backported", "branch": "master", "changed_files": 10, "comments": 5, "commits": 4, "created_at": "1728465690", "deletions": 31, "labels": ["alca-pending", "pending-signatures", "orp-pending", "tests-started", "code-checks-approved", "trk"], "milestone": "CMSSW_14_2_X", "number": 46322, "release-notes": [], "review_comments": 0, "state": "open", "title": "SiPixelAlignment PCL harvester, add option to ignore exceeding thresholds on inactive modules when vetoing payload upload", "updated_at": "1728468033", "user": "mmusich"}