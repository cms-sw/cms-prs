{"additions": 48, "auther_ref": "MaxRuntime", "auther_sha": "4f00b3900b4e7115594f4bf115cceb1c6d58896e", "author": "justinasr", "body": "#### PR description:\r\n\r\n##### Motivation:\r\n\r\nThis PR is aimed at improving Monte Carlo request validation before submitting to central production. We (PdmV) run an 8h job in HTCondor to measure time/event, size/event, required memory (PeakValueRSS) and filter efficiency as well as checking if the job finishes without crashing. Measured values are then passed to computing during request submission. In order to fit as many events as possible in the 8h, we ask users to give us an time/event estimate that we then use to calculate number of events that we can fit in 8h (roughly 28800 seconds / time per event = events to run in validation). Even with 20% \"safety margin\", the jobs often run out of 8h limit and are killed by HTCondor due to time/event underestimation. User gets a message that the validation was killed, so time/event has to be adjusted and validation retried. This is wasteful as we are not testing whether the user supplied a correct time/event, but we are interested in getting that value from the job report after running as many events as we can in those 8h. For example, if according to user given time/event we expected 10k events, but only 6k managed to fit in the time slot, it is still good enough and we would gladly use values from the report and consider this validation a \"pass\" (currently job is abruptly killed by HTCondor, so we don't get the report).\r\n\r\n##### Changes:\r\n\r\nThis PR adds a new variable, called `maxRuntime` to the FWCore's InputSource. It represents a maximum number of seconds for the input source to keep on providing events. Number of elapsed seconds is checked after every processed event and if that value is higher than `maxRuntime`, the `state_` is set to `IsStop`, just like `eventLimitReached()` or `lumiLimitReached()`. The technical implementation is almost identical to the `maxSecondsUntilRampdown`, however, the `maxSecondsUntilRampdown` is not sufficiently \"accurate\" for us as this check is performed only after lumi or run end ([according to the comment](https://github.com/cms-sw/cmssw/blob/af3125e0a3f5f6a654666f00b2b777be0ac0de3f/FWCore/Framework/src/InputSource.cc#L156)), not after every event.\r\n\r\nRelevant `maxSecondsUntilRampdown` code is [here](https://github.com/cms-sw/cmssw/blob/3e2932932c1ad48f0dd4878144cc2888a914901f/FWCore/Framework/interface/InputSource.h#L373) and [here](https://github.com/cms-sw/cmssw/blob/af3125e0a3f5f6a654666f00b2b777be0ac0de3f/FWCore/Framework/src/InputSource.cc#L154).\r\n\r\n##### Notes: \r\n\r\nSuch premature finish upsets `externalLHEProducer` and it throws a [\"Event loop is over, but there are still lhe events to process.\" exception](https://github.com/cms-sw/cmssw/blob/b3d43f277097d61e247c4c8c327ab515f64acd2d/GeneratorInterface/LHEInterface/plugins/ExternalLHEProducer.cc#L333).\r\n\r\nThere is a small running time \"offset\" of about 20 seconds, i.e. if `maxRuntime` is set to 600, job report will have about 620 seconds of total job time. This should not be an issue as long as this is more or less constant, i.e. we would set 7.5h as `maxRuntime` for our 8h job.\r\n\r\n#### PR validation:\r\n\r\n - Successfully `cmsRun` a couple of wmLHEGS, GEN and GS configs\r\n - `scram b runtests` tests succeeded after rebuilding `FWCore` and `IOPool`\r\n\r\n<!-- Please replace this text with a description of which tests have been performed to verify the correctness of the PR, including the eventual addition of new code for testing like unit tests, test configurations, additions or updates to the runTheMatrix test workflows -->\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR:\r\n\r\nNot a backport, but backports will be needed.", "branch": "master", "changed_files": 9, "closed_at": "1620122595", "comments": 8, "commits": 2, "created_at": "1618426149", "deletions": 10, "labels": ["code-checks-approved", "core-pending", "orp-pending", "pending-signatures", "tests-approved"], "milestone": "CMSSW_12_0_X", "number": 33435, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Add maxRuntime to InputSource so it would stop processing events after specified number of seconds", "updated_at": "1620122595", "user": "justinasr"}