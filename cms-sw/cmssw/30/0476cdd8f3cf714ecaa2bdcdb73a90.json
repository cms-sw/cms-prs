{"additions": 21, "auther_ref": "l1tMenuNtuple_fromHLTscout_151x", "auther_sha": "ba9c5559ba03c91d8a4447273c81037fccc5ca0f", "author": "artlbv", "body": "#### PR description:\r\nThis adds a customisation for the L1Ntuples to run on HLTSCOUT data which just stores the L1 uGT collection in it's RAW format `hltFEDSelectorL1`. I'm reusing the `L1NtupleNanoDST` setup but adding the unpacking of the `gtStage2Digis` into the sequence, hence I had to introduce a new customiser: `L1NtupleHLTSCOUT`.\r\n\r\n#### PR validation:\r\n\r\nTested in `CMSSW_15_1_0_pre3` with:\r\n```bash\r\ncmsDriver.py l1NtupleFromHLTScout -s NONE -n 1000 --no_output \\\r\n--era=Run3 --data --conditions=150X_dataRun3_HLT_v1  \\\r\n--customise=L1Trigger/L1TNtuples/customiseL1Ntuple.L1NtupleHLTSCOUT \\\r\n--filein file:/eos/cms/tier0/store/data/Run2025C/ScoutingPFRun3/HLTSCOUT/v1/000/393/515/00000/0037f433-1c58-4071-91f0-f2ae428ba870.root \r\n```\r\n\r\nWhich successfully produces a `L1Ntuple.root` file with the trees being properly filled for the unpacked L1 objects and uGT decisions.\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nNot planned, except if considered useful by the L1 DPG et al.", "branch": "master", "changed_files": 1, "comments": 3, "commits": 1, "created_at": "1750761354", "deletions": 0, "labels": ["l1-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-approved"], "milestone": "CMSSW_15_1_X", "number": 48395, "release-notes": [], "review_comments": 0, "state": "open", "title": "Add L1Ntuple customisation for HLTScouting", "updated_at": "1750761482", "user": "artlbv"}