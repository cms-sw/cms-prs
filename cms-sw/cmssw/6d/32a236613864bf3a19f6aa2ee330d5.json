{"additions": 119, "auther_ref": "dd4hep_perf", "auther_sha": "6d46900607c037506c8a665f7077fec4867262ed", "author": "ghugo83", "body": "**Summary: Reduce number of unnecessary calls to regex comparisons, by simply _renaming_ SpecPar blocks (magic).**\r\n\r\nAt XML parsing stage, https://github.com/cms-sw/cmssw/blob/master/DetectorDescription/DDCMS/plugins/dd4hep/DDDefinitions2Objects.cc#L974 : all the paths of different SpecPar blocks, with the same block name, are gathered.\r\n\r\nIt occurs that **many different XMLs use SpecPar sections with the same name, to define different parameters.**\r\nThis has several occurrences, mentioned in [1].\r\n\r\n**This results, when doing a lookup for a specific parameter from XML, in looping over paths which are not of interest (because these paths are not associated with this parameter anyway).**\r\n\r\nFor example: when looking for TrackerRadLength, all paths in Geometry/TrackerRecoData/data/PhaseI/trackerRecoMaterial.xml (expected) **and SimTracker/TrackerMaterialAnalysis/data/trackingMaterialGroups_ForPhaseI.xml (not expected)** are looked up. Indeed, the SpecPar blocks in these different XMLs have the same name.\r\n\r\nA fix could be to simply add namespace at https://github.com/cms-sw/cmssw/blob/master/DetectorDescription/DDCMS/plugins/dd4hep/DDDefinitions2Objects.cc#L974 , to directly distinguish the different SpecPar blocks. But this results in longer strings (negligible effect in that case), and more importantly, to potential regressions.\r\n\r\nA simple fix is to just rename the SpecPar blocks defining different parameters, so that their paths end up stored in different vectors.\r\nThis leads to a big perf improvement: x1.4 speedup of overall step1 initialization (XML parsing and geo construction, up to event generator start) on DD4hep workflow on my local.\r\n\r\nNB: This is reducing the 'number of calls'.\r\nIn a subsequent PR, I propose to remove all regex from trackerRecoMaterial.xml  and trackingMaterialGroups_ForPhaseI.xml (this also has an effect on perf, even if less consequent).\r\n\r\nNB 2: Why has trackingMaterialGroups_ForPhaseI.xml been (recently) included in the geometry scenarios? Is it really needed?\r\n\r\nNB 3: Why is there a duplicated XML file for DD4hep (SimTracker/TrackerMaterialAnalysis/data/dd4hep_trackingMaterialGroups_ForPhaseII.xml) ?\r\n\r\n\r\n[1] XMLs where this situation occurs:\r\n- zdcsens.xml and zdcProdCuts.xml (blocks named zdc)\r\n- hcalRecNumbering.xml,HcalProdCuts.xml, hcalSimNumbering.xml, and hcalsenspmf.wml (blocks named hcal)\r\n- All blocks in trackerRecoMaterial.xml and trackingMaterialGroups_ForPhaseI.xml\r\nSince trackingMaterialGroups_ForPhaseI.xm paths are very heavy, this is where the effect is the biggest, though this issue also appears for Zdc and Hcal.\r\n\r\n@ianna @civanch  @cvuosalo", "branch": "master", "changed_files": 3, "closed_at": "1608206447", "comments": 9, "commits": 3, "created_at": "1608118811", "deletions": 119, "labels": ["code-checks-approved", "fully-signed", "orp-approved", "simulation-approved", "tests-approved"], "merge_commit_sha": "fd1d7dea751e5b4cd56461451577a4f4073dacc9", "merged_at": "1608206447", "merged_by": "cmsbuild", "milestone": "CMSSW_11_3_X", "number": 32505, "release-notes": [], "review_comments": 4, "state": "closed", "title": "Improve DD4hep workflow perf, step 1: All paths from SpecPar blocks with same name are stacked together", "updated_at": "1608206447", "user": "ghugo83"}