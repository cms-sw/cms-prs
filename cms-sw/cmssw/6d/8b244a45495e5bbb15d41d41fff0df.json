{"additions": 23, "auther_ref": "bookmva-memory-mgmt", "auther_sha": "91be322508e980a568e3092c14266ddd75ac9d17", "author": "dan131riley", "body": "Older versions of TMVA::Reader didn't clean up classification methods, and so leaked memory.  Some CMS code cleaned up the memory itself to avoid leaking.  Starting with ROOT 6.07+, TMVA::Reader now cleans up after itself, so the CMS cleanups are resulting in double frees and potentially corrupted memory.  This (rather ugly) PR patches all the places I could easily find to not assume ownership of the objects.  More details are in issue #17256", "branch": "CMSSW_9_0_X", "changed_files": 18, "closed_at": "1486107105", "comments": 20, "commits": 3, "created_at": "1485289111", "deletions": 41, "labels": ["analysis-pending", "comparison-available", "orp-pending", "pending-signatures", "reconstruction-approved", "tests-approved"], "merge_commit_sha": "5516ed7ba665f61da249400199179dea82e60a9b", "merged_at": "1486107105", "merged_by": "davidlange6", "milestone": "CMSSW_9_0_X", "number": 17266, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Avoid freeing memory owned by TMVA::Reader", "updated_at": "1507556241", "user": "dan131riley"}