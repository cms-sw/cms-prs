{"additions": 132, "auther_ref": "removeConsumesMany", "auther_sha": "00fe2d8cca17e571c2b7081708fa23b6dee19201", "author": "wddgit", "body": "#### PR description:\r\n\r\nRemove consumesMany from the Framework. Also remove related code.\r\n\r\nAll uses of consumesMany outside the Framework were removed by previous PRs. This PR should not affect anything other than Framework tests which were the only thing left using consumesMany. In this PR, if a Framework unit test was using consumesMany to test something else, then the test was converted to use GetterOfProducts. Tests whose purpose was to test getManyByType and consumesMany were deleted.\r\n\r\nNote that there is code outside of the Framework that still contains the getManyByType calls and I couldn't delete getManyByType from the Event or Run yet. I plan to do that in a future PR. All such code has been broken since 2015 when we implemented code that would detect calls to getManyByType without a consumesMany call. All of the code still containing getManyByType calls does not call consumesMany. Since 2015, it would have thrown an exception if executed. \r\n\r\nThere is one other thing I was reminded of as I worked on this PR. This potential issue does not affect anything in this PR, but I thought it was worth mentioning. One difference between GetterOfProducts and getManyByType is that the vector of products in getManyByType is ordered (each type/label/instance group in reverse process history order) and the one from GetterOfProducts is not. It is possible some previously migrated code could have a problem with that if the same type, module label, and instance was available from difference processes. I am not aware of any such problem... The client of GetterOfProducts should deal with this possibility (that is the design). If it ever became an actual problem we could add a sorting step (maybe optional) in GetterOfProducts.\r\n\r\n#### PR validation:\r\n\r\nExisting tests pass. There are not any new abilities to test in this PR. This shouldn't change the output or behavior of anything in the RelVals or production.\r\n", "branch": "master", "changed_files": 27, "comments": 8, "commits": 1, "created_at": "1687446699", "deletions": 549, "labels": ["dqm-pending", "core-pending", "pending-signatures", "orp-pending", "tests-started", "code-checks-approved"], "milestone": "CMSSW_13_2_X", "number": 42058, "release-notes": [], "review_comments": 5, "state": "open", "title": "Remove consumesMany and related code from the Framework", "updated_at": "1687456275", "user": "wddgit"}