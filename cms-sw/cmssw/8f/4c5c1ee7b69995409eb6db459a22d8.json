{"additions": 496, "auther_ref": "xrootd-openhandler-management", "auther_sha": "aeb5deacb8987661649a073d95db860b29c61096", "author": "bbockelm", "body": "Object lifetime management has always been tricky with the XrdCl code.  In particular,\n- With OpenHandler, outstanding callbacks cannot be canceled so we have to be ready for open callbacks to return _after_ the TFile is closed.\n- As the TFile owns the IO buffers, any Read / ReadV handlers must be finished by time we return / throw an exception.\n\nThis PR fixes up the lifetime management to obey these rules.  In particular:\n- We call wait() on all futures associated with reads before we call get().\n- The OpenHandler now carries a strong self-reference while the callback is alive.\n- The OpenHandler also carries a weak reference to the RequestManager; if the callback is invoked when the weak reference points to an invalid object, we throw away the results and do not try to contact the parent object.\n- The file close is now asynchronous (the inactive sources are, by definition, poorly performing and I've observed the close() taking more than 3 minutes).\n\nWith this PR, I now observe no crashes in XrdAdaptor code during widescale testing!\n", "branch": "CMSSW_7_3_DEVEL_X", "changed_files": 8, "closed_at": "1416738939", "comments": 5, "commits": 13, "created_at": "1416242420", "deletions": 168, "labels": ["comparison-pending", "core-approved", "fully-signed", "tests-pending"], "merge_commit_sha": "c29e39c99760dac6596e614b1396d02a4f90b05d", "merged_at": "1416738939", "merged_by": "ktf", "number": 6452, "release-notes": [], "review_comments": 0, "state": "closed", "title": "XrdRequestManager::OpenHandler improved object lifetime management", "updated_at": "1416738939", "user": "bbockelm"}