{"additions": 36, "auther_ref": "dqm-allow-per-lumi-in-dqmonedanalyzer", "auther_sha": "466e9d789a8772273ddbcb04b1361bd3915e6ece", "author": "schneiml", "body": "#### PR description:\r\n\r\nAfter the discussion started by @Dr15Jones in #29314 , I remembered that we still had the option to do the lumi-switching in the `DQMStore` on a per-event basis. This allows modules like `METAnalyzer` to book per-lumi histograms but remain `DQMOneEDAnalyzer` and yet not block concurrent lumis.\r\n\r\nThe cost is higher overhead. The `enterLumi/leaveLumi` calls should be fast in the common case (take a lock, do a map lookup, do nothing), but with many lumi MEs (for example when per-lumi saving by default like in the UL ReReco) all the pointer bending could cause some overhead. However, even that might still be negligible, or could be optimized a bit more if it is a problem.\r\n\r\n#### PR validation:\r\n\r\nI tested a workflow with `METAnalyzer` and it seems to come out well. The PR tests should catch eventual differences.\r\n\r\nI also updated the unit tests to excercise this feature and it seems fine. However, I don't observe any concurrent lumis in the unit tests, even though they are enabled and there should not be any blocking modules. It would be nice to see some test case where events actually alternate between lumis.", "branch": "master", "changed_files": 5, "closed_at": "1586879536", "comments": 27, "commits": 4, "created_at": "1585304925", "deletions": 36, "labels": ["code-checks-approved", "comparison-available", "dqm-approved", "fully-signed", "orp-approved", "tests-approved"], "merge_commit_sha": "bd3cfb04d262bddc9916cda1fe1a6e256fdc1beb", "merged_at": "1586879536", "merged_by": "cmsbuild", "milestone": "CMSSW_11_1_X", "number": 29321, "release-notes": [], "review_comments": 0, "state": "closed", "title": "DQM: Allow per-lumi MEs in DQMOneEDAnalyzer", "updated_at": "1586879537", "user": "schneiml"}