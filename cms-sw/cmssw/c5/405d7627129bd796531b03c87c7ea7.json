{"additions": 2274, "auther_ref": "deleteNonconsumedModules", "auther_sha": "c38022db35429a81db27c9b63bf09266b4613af3", "author": "makortel", "body": "#### PR description:\r\n\r\nThis PR makes the framework to delete unscheduled EDModules whose output products are not consumed by any scheduled EDModule. For motivation see https://github.com/cms-sw/cmssw/issues/26438 (which this PR mostly resolves).\r\n\r\nHere \"unscheduled\" means that such EDModules are only in `Task`s, i.e. not directly in any `Path` or `EndPath`, and \"scheduled\" means an EDModule in a `Path` or `EndPath`. If the module data dependence graph has a subgraph of unscheduled modules whose output products are not consumed by any scheduled module, those unscheduled modules are deleted.\r\n\r\nA possible data dependence from a scheduled module from a SubProcess is also enough to keep an otherwise non-consumed EDModule alive. For example, if the Process and its SubProcess both have a module `foo`, and only the SubProcess has a consumer with an `InputTag(\"foo\")`, the module `foo` in the Process is kept as well for the case that the SubProcess's `foo` would not produce a product for some events (assuming the product types and instance names also match).\r\n\r\nThe data dependencies are checked also for Lumi and Run products in addition of Event products, for which the `EDConsumerBase::modulesWhoseProductsAreConsumed()` and `PathsAndConsumesOfModules` were extended. They were extended also to carry the dependencies from the SubProcesses (it turned out that passing pairs of module label and process name are sufficient, the product type and instance name get handled automatically).\r\n\r\nThe non-consumed modules are deleted after `preallocate` signal and before `beginJob()` signal. Two new signals, `preModuleDestruction` and `postModuleDestruction` are added for those deletions (the \"normal\" module deletion at the end of the `cmsRun` process do not emit these signals). I took a look of all modules watching either `preModuleConstruction` or `postModuleConstruction` signals, and added watch for the destruction signals if it seemed to make sense.\r\n\r\nNote that even if the modules are deleted, the corresponding Workers are kept alive. The Workers are removed from the containers of unscheduled and accumulator modules, so they won't get any further framework transitions after the deletion.\r\n\r\nResolves https://github.com/cms-sw/cmssw/issues/26438.\r\n\r\n#### PR validation:\r\n\r\nFramework unit tests run.", "branch": "master", "changed_files": 81, "closed_at": "1606906444", "comments": 139, "commits": 26, "created_at": "1587685110", "deletions": 141, "labels": ["code-checks-approved", "comparison-available", "core-approved", "fully-signed", "heterogeneous-approved", "orp-approved", "tests-approved"], "merge_commit_sha": "9be9e4c61d8c1a194d7742b29fbc035e9db44aad", "merged_at": "1606906444", "merged_by": "cmsbuild", "milestone": "CMSSW_11_3_X", "number": 29553, "release-notes": [], "review_comments": 50, "state": "closed", "title": "Delete unscheduled modules that are not consumed by any scheduled module", "updated_at": "1606906444", "user": "makortel"}