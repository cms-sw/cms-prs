{"additions": 4, "auther_ref": "TICLMemory", "auther_sha": "e685435425b12892570252f92a85a6563f343ea8", "author": "rovere", "body": "#### PR description:\r\n\r\nRecent memory profiles done using igprof revealed an important usage of\r\nmemory by TICL, in particular during the pattern-recognition stage by\r\nthe HGCGraph. After inspection, it has been noticed that the dynamic data\r\nstructured internally used, mainly vectors, were cleared at every event\r\nbut that a request to free the underlying memory was never\r\ntriggered. A call to `shrink_to_fit` has been added to the clearing\r\nstep. This solved the issue. The memory profile while processing\r\nevents is far less demanding. The swap with an empty vector has also\r\nbeen tested: since the results were identical, the former solution has\r\nbeen implemented.\r\n\r\nThis PR does not reduce the overall memory footprint of TICL. Memory\r\nallocations will still be present while processing data. The possible\r\nabsolute improvement of the memory footprint can be addressed at a later\r\nstage. Moreover, the underlying memory re-allocations could be reduced, to a\r\npartial extent, by implementing some smart pre-allocation. In all cases\r\nin which the dimension of the dynamic data structures is known upfront,\r\nthe memory allocation is done in one single step calling `reserve`.  In\r\nall other cases, the memory is increased and re-allocated following the\r\nusual exponential growth.\r\n\r\n\r\n#### PR validation:\r\n\r\n`runTheMatrix.py -l limited`", "branch": "master", "changed_files": 2, "closed_at": "1589823771", "comments": 12, "commits": 1, "created_at": "1589706073", "deletions": 2, "labels": ["code-checks-approved", "comparison-available", "fully-signed", "orp-approved", "reconstruction-approved", "tests-approved", "upgrade-approved"], "merge_commit_sha": "467331c8e06595535bd32126306c95815cd8c18a", "merged_at": "1589823770", "merged_by": "cmsbuild", "milestone": "CMSSW_11_1_X", "number": 29861, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Release memory in HGCGraph", "updated_at": "1589823771", "user": "rovere"}