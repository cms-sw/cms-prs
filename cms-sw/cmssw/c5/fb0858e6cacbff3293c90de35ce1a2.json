{"additions": 31, "auther_ref": "improveExternalGeneratorFilterSkippingALumi", "auther_sha": "c894f45c011255c39b0a42ec55a145679b921987", "author": "wddgit", "body": "#### PR description:\r\n\r\nImprove ExternalGeneratorFilter to handle a stream skipping a lumi. Allowing a stream to skip a lumi is a proposed new Framework behavior. See PR #43522, which is not merged yet. This PR is part of an effort to improve code outside the Framework so all modules will be able properly handle the new Framework behavior. \r\n\r\nThe previous version of the code in this module selected a particular stream to use to run beginLumiProduce in globalBeginLuminosityBlockProduce. For other streams, beginLumiProduce is called in streamBeginLuminosityBlock.\r\n\r\nOn the selected stream, the pointer to the stream cache is set to null in streamBeginLuminosityBlock. If the stream skips the lumi, then that never happens. Then the compare_exchange_strong in streamEndLuminosityBlockSummary never executes because it is expecting the value to be null and it is not. The same stream cache would be used for the next globalBeginLuminosityBlock. That stream might not be done yet with the preceding lumi. And at that point we would be in a bad state.\r\n\r\nThere is a second pre-existing problem unrelated to a stream skipping a lumi. This problem probably happens very rarely or never. After a global begin lumi transition occurs and before the selected stream runs streamBeginLuminosityBlock and sets the stream cache pointer to null, a different stream could finish and try to move to the next lumi. The next global begin lumi will wait. That wait depends on the stream cache pointer being set to null before you get there. If that pointer has not been set null yet, then the next lumi could start early and then we would also be in a bad state. This problem could occur even without a stream skipping a lumi.\r\n\r\nThe fixes in this PR address both issues.\r\n\r\nThere was also a compiler warning about a std::move call that accomplishes nothing and I fixed that also (one line).\r\n\r\n#### PR validation:\r\n\r\nThere are some nice and thorough unit tests of this module in a different package, GeneratorInterface/Pythia8Interface. I checked that package out also and ran those tests and they passed. I also temporarily edited the code in my working area to force it to use the new code path in globalEndLuminosityBlockProduce and ran the same unit tests again and they still pass.\r\n", "branch": "master", "changed_files": 1, "comments": 14, "commits": 1, "created_at": "1706130134", "deletions": 18, "labels": ["generators-pending", "pending-signatures", "tests-approved", "orp-pending", "code-checks-approved"], "milestone": "CMSSW_14_1_X", "number": 43783, "release-notes": [], "review_comments": 11, "state": "open", "title": "Improve ExternalGeneratorFilter to handle a stream skipping a lumi", "updated_at": "1708350210", "user": "wddgit"}