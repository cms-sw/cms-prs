{"additions": 58, "auther_ref": "modsToRunToCompletion", "auther_sha": "86a99549e1d0e7738ab385c56541e1cddfdd4752", "author": "wddgit", "body": "#### PR description:\r\n\r\nChange exceptionMessageRuns_ to be an atomic bool along with fixing side effects of that. This will be necessary for concurrent runs and is similar to what we currently do for lumis.\r\n\r\nPlus deletion of some obsolete unused lines of code, (including an unused set of braces that changes indentation on a number of lines of code that are otherwise unchanged)\r\n\r\n#### PR validation:\r\n\r\nThis shouldn't change behavior in any detectable way until we implement concurrent runs so I am relying on existing unit tests. In a manual test, I caused exceptions to be thrown \"while trying to clean up runs after the primary fatal exception\" and the printout looks as expected.\r\n", "branch": "master", "changed_files": 5, "comments": 3, "commits": 1, "created_at": "1653066297", "deletions": 68, "labels": ["core-pending", "pending-signatures", "orp-pending", "tests-started", "code-checks-approved"], "milestone": "CMSSW_12_5_X", "number": 38030, "release-notes": [], "review_comments": 0, "state": "open", "title": "Prepare runToCompletion() for concurrent runs", "updated_at": "1653066725", "user": "wddgit"}