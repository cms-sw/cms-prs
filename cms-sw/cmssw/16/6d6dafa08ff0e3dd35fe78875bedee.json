{"additions": 293, "auther_ref": "devel_hltParserMaskOperator_3", "auther_sha": "0bd9d8e9502516bfd1ea2e8261cb2e86ab9997c5", "author": "missirol", "body": "#### PR description:\r\n\r\nThis PR aims to add a new operator to the syntax supported by the `triggerExpression::Parser` class.\r\n\r\nThe new operator is binary, and tentatively [0] named `MASKING`.\r\n\r\nGiven a generic expression `ExprFoo` (e.g. `L1_A* OR L1_B*`) and a generic pattern `PattBar` (e.g. `L1*copy*`), `ExprFoo MASKING PattBar` corresponds to evaluating `ExprFoo` disabling in it (\"masking\") all the triggers matching `PattBar`.\r\n\r\nMore details on the syntax are given in [1].\r\n\r\nA use case for this comes from HLT online operations [2], see for example [CMSHLT-2403](https://its.cern.ch/jira/browse/CMSHLT-2403?focusedCommentId=4433220&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-4433220).\r\n\r\nThe idea to introduce a new logical operator to solve this issue comes from @fwyzard.\r\n\r\nUnit tests in HLT packages are updated accordingly.\r\n\r\nMerely technical. No changes expected.\r\n\r\n---\r\n\r\n[0] Feel free to suggest a better name (it can be changed, of course); I just found `MASKING` slightly clearer than `EXCEPT` or `BUT`.\r\n\r\n[1] Esp. during commissioning, \"copies\" of some L1T seeds are used online for tests (e.g. having `L1_ZeroBias_copy` with loose PSs for high-rate tests, leaving `L1_ZeroBias` and the HLTs seeded by it unaffected), while HLT tipically wants to ignore such \"copy\" seeds in the collection of \"HLTPhysics\" data (L1A Physics triggers). For this reason, right now in the online menu the (Ephemeral)HLTPhysics triggers are seeded by a EDFilter containing (for lack of a better syntax) the explicit list of all L1T seeds which are not \"copy\" seeds (over 300 strings), which is clearly difficult to maintain. Using the equivalent `L1_* MASKING L1_ZeroBias_copy` would be the better approach.\r\n\r\n[2] Behaviour of `MASKING` operator:\r\n\r\n - In `(PATTERN_A OR/AND PATTERN_B) MASKING PATTERN_C`, all matches of `PATTERN_C` are masked in both `PATTERN_A` and `PATTERN_B`.\r\n\r\n - The argument of the `MASKING` operation (i.e. `B` in `A MASKING B`) can be only a single pattern corresponding to L1T seeds (class: `TriggerExpressionL1uGTReader`) or HLT paths (class: `TriggerExpressionPathReader`); the argument cannot be a constant (`TRUE` or `FALSE`), a prescale expression (e.g. `X / N`), nor a unary or a binary operator; if unsupported arguments are used, e.g. (`[..] MASKING (THIS AND THAT)`), the parsing will fail. Examples of unsupported expressions: `EXPR_A MASKING (PATTERN_B AND/OR PATTERN_C)`, `EXPR_A MASKING (NOT PATTERN_B)`, `EXPR_A MASKING TRUE`, `EXPR_A MASKING (PATH / N)`.\r\n\r\n#### PR validation:\r\n\r\nImproved unit tests pass.\r\n\r\n#### If this PR is a backport, please specify the original PR and why you need to backport that PR. If this PR will be backported, please specify to which release cycle the backport is meant for:\r\n\r\nTSG might want to backport this new feature down to `CMSSW_12_4_X` for online operations.", "branch": "master", "changed_files": 13, "comments": 5, "commits": 1, "created_at": "1661437649", "deletions": 65, "labels": ["hlt-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-pending"], "milestone": "CMSSW_12_6_X", "number": 39196, "release-notes": [], "review_comments": 3, "state": "open", "title": "introduce `MASKING` operator in `triggerExpression::Parser`", "updated_at": "1661869533", "user": "missirol"}