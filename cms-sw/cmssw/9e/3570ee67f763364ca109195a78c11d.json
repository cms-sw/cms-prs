{"additions": 3945, "auther_ref": "SplitModules", "auther_sha": "580617ca3a9de0d4d79d6a70e97fd1c3e005987f", "author": "b-fontana", "body": "#### Description:\r\n\r\nPorting of the HGCAL RecHit calibration code (```RecoLocalCalo/HGCalRecProducers/plugins/HGCalRecHitProducer.cc``` and related) to GPUs using CUDA. \r\nThe GPU version introduces a code split between the three subdetectors which comprise HGCAL, so that their respective modules can run independently. Each subdetector includes three modules:\r\n\r\n- ```UncalibRecHit```-to-SoA conversion, host-to-device transfer and GPU kernel execution (```RecoLocalCalo/HGCalRecProducers/plugins/{EE,HEF,HEB}RecHitGPU.cc```)\r\n- Output SoA device-to-host transfer (```RecoLocalCalo/HGCalRecProducers/plugins/{EE,HEF,HEB}RecHitGPUtoSoA.cc```)\r\n- Output SoA conversion to ```RecHit``` class (```RecoLocalCalo/HGCalRecProducers/plugins/{EE,HEF,HEB}RecHitFromSoA.cc```)\r\n\r\nThe modules can be run with:\r\n\r\n```bash\r\ncmsRun RecoLocalCalo/HGCalRecProducers/test/HeterogeneousHGCalRecHit_cfg.py PU=0\r\n```\r\n\r\nwhere PU can also be 50, 100, 140 and 200.\r\nThe input data is currently available under ```/home/bfontana/``` in ```patatrack02```, in both ROOT compressed and uncompressed formats (uncompressed PU200 is missing due to lack of space).\r\n\r\n#### Validation:\r\n\r\nCode available in ```Validation/HGCalValidation/plugins/HGCalRecHitValidation.cc```. It produces ROOT histograms with the CPU and GPU outputs, and their residuals. It can be run with\r\n\r\n```bash\r\ncmsRun Validation/HGCalValidation/test/HeterogeneousHGCalRecHitsValidator_cfg.py PU=0\r\n```\r\n\r\n#### Timing:\r\n\r\n```bash\r\ncmsRun RecoLocalCalo/HGCalRecProducers/test/HeterogeneousRecHitsTiming_cfg.py\r\n```\r\n\r\nwhere PU and which version to use (GPU or CPU) must be specified manually in the above python file.\r\nSeveral measurements are available [here](https://bfontana.web.cern.ch/bfontana/GPUWork/measurements_throughput_PR.html), showing that both the CPU and the GPU versions are mostly I/O bound.\r\n\r\n#### Tests:\r\n\r\nThe recipe described [here](https://cms-sw.github.io/PRWorkflow.html) was followed. Everything run properly except some of the tests (```scram b runtests```):\r\n\r\n- ```test runtestRecoEgammaElectronIdentification had ERRORS```\r\n- ```test test_CreateFileLists had ERRORS```\r\n- ```test testAlignmentOfflineValidation had ERRORS```\r\n- ```test testPVPlotting had ERRORS```\r\n- ```test testSSTGainPCL_fromRECO had ERRORS```\r\n- ```test testSSTGainPCL_fromRECO had ERRORS```\r\n- ```test checkMultiRunHarvestingOutput had ERRORS```\r\n- ...\r\n\r\n```runTheMatrix.py -l limited -i all --ibeos``` was successful:\r\n\r\n```bash\r\n35 34 33 25 17 4 1 1 1 tests passed, 0 0 0 0 0 0 0 0 0 failed\r\n```", "branch": "master", "changed_files": 73, "closed_at": "1617004962", "comments": 63, "commits": 52, "created_at": "1611061510", "deletions": 15, "labels": ["alca-approved", "code-checks-approved", "db-approved", "dqm-approved", "fully-signed", "geometry-approved", "heterogeneous-approved", "orp-approved", "reconstruction-approved", "tests-approved", "upgrade-approved"], "merge_commit_sha": "655b983dae8fd6013bc7772ec3047ab4ad54063d", "merged_at": "1617004962", "merged_by": "cmsbuild", "milestone": "CMSSW_11_3_X", "number": 32683, "release-notes": [], "review_comments": 108, "state": "closed", "title": "Heterogeneous HGCAL RecHit Calibration", "updated_at": "1617004962", "user": "b-fontana"}