{"additions": 419, "auther_ref": "EventSelectorThreadSafety", "auther_sha": "2ce14e6d8107498daf3a3065561241717cbd26a5", "author": "wmtan", "body": "This PR is a major step toward a thread safe global::OutputModule.\nThe EventSelector class currently contains data members  that can be modified during the processing of an event. However, that data, in fact, can only change on a run boundary. This PR implements a beginRun() function for the event selectors, which will modify the data members if needed. In that way, the per event function EventSelector::acceptEvent() no linger needs to modify any data members.  This PR makes it const. This removes a serious impediment in parallel procesing of events in an output module.\nThis PR also changes the names of some data members and function arguments of EventSelector to be more mnemonic and less confusing,\nThis PR also modifies the output module base class so that it has only one set of EventSelectors, rather than one set per stream. With this PR, separate EventSelectors per stream are no longer needed.\n", "branch": "CMSSW_7_6_X", "changed_files": 17, "closed_at": "1441306796", "comments": 2, "commits": 1, "created_at": "1441304425", "deletions": 614, "labels": ["comparison-pending", "core-pending", "orp-pending", "pending-signatures", "tests-pending"], "milestone": "CMSSW_7_6_X", "number": 11114, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Do not modify EventSelector during an event (For OutputModule thread safety)", "updated_at": "1441383349", "user": "wmtan"}