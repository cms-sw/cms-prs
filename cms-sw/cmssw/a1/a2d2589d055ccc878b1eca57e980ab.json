{"additions": 1051, "auther_ref": "cmsArgParse", "auther_sha": "0cd0b5fb1d8b647a2a224ff8b8078db1b2505267", "author": "kpedro88", "body": "#### PR description:\r\n\r\n1. Modify `cmsRun` to use a stricter syntax (already [required for the use of VarParsing](https://github.com/cms-sw/cmssw/blob/19c178740257eb48367778593da55dcad08b7a4f/FWCore/ParameterSet/python/VarParsing.py#L166-L168)), eliminating the `-p`,`--parameter-set` flag and treating the Python config file name as a required positional parameter only. This enables treating everything *after* that parameter as arguments to the Python config file. (In practice, this required writing a simple custom parser for `boost::program_options`, which does not natively have the equivalent of `argparse`'s `REMAINDER` type.)\r\n    * Also modify `cmsRun` not to treat `sys.exit(0)` in Python as an exception, but rather just to stop execution and exit with code 0. This allows using `cmsRun config.py --help` in an intuitive way.\r\n2. Modify `edmConfigDump` to handle command-line arguments (either VarParsing or argparse, or anything else, in principle). Here, `argparse`'s `REMAINDER` type is used.\r\n    * `edmConfigSplit` and `edmConfigHash` modified for the same purpose. No other edm tools were identified for which such a modification makes sense.\r\n    * `edmParameterSetDump` seems like a prototype of `edmConfigDump` that had not substantially changed in over a decade (the somewhat fragmented history: [part 1](https://github.com/cms-sw/cmssw/commits/78e05a9e1fdba15dc9950d2de67e81faa6bdec4a/FWCore/ParameterSet/src/MakeParameterSets.cc), [part 2](https://github.com/cms-sw/cmssw/commits/CMSSW_6_2_X/FWCore/PythonParameterSet/bin/edmParameterSetDump.cpp), [part 3](https://github.com/cms-sw/cmssw/commits/fb478a3d5ba1ed6159d18b025edaed00b2166b6e/FWCore/PythonParameterSet/bin/edmParameterSetDump.cpp), [part 4](https://github.com/cms-sw/cmssw/commits/master/FWCore/ParameterSetReader/bin/edmParameterSetDump.cpp)), so it is removed as redundant.\r\n\r\nSummary of interface changes:\r\n* `cmsRun`: `-p`,`--parameter-set` flags removed. `config_file.py` now a positional parameter that must come after any other arguments to `cmsRun` and before any arguments to the Python config file itself.\r\n* `cmsRun`: `-c`,`--command` flag added to allow passing a config as a string containing Python code, rather than a file (following the `python -c` interface). (@Dr15Jones realized while reviewing this PR that such functionality had been available from the pybind11 interface setup before it was modified here.)\r\n* When invoking `cmsRun config_file.py ...`, inside the Python config file, the contents of `sys.argv` are `[\"config_file.py\",...]` (consistent with the result of `python3 config_file.py ...`). Previously, when using `cmsRun`, the contents of `sys.argv` would be `[\"cmsRun\",\"config_file.py\",...]`.\r\n* `PyBind11ProcessDesc`: constructors modified with an additional `bool isFile` parameter, to allow for any config file names (rather than just ending in `.py`), as requested by Core.\r\n* `readConfig()` functions now use `vector<string>` input rather than `int argc, char* argv[]`.\r\n\r\nUnit tests in packages with dependencies on headers modified here are updated accordingly. Other unit tests will be updated in separate PRs.\r\n\r\n#### PR validation:\r\n\r\nUnit tests in the modified packages pass, including new tests of the relevant behavior from the modified executables.\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nHaving this functionality available in all active release cycles would be nice, and I'm happy to prepare full or partial backports. However, the interface changes and the impacts on tests from various packages make this a difficult proposition to support centrally. It's possible that minimal branches can be provided for users who want this functionality in their own working areas.\r\n", "branch": "master", "changed_files": 138, "comments": 23, "commits": 25, "created_at": "1692815341", "deletions": 573, "labels": ["reconstruction-pending", "core-pending", "analysis-pending", "pending-signatures", "tests-pending", "orp-pending", "requires-external", "code-checks-pending", "heterogeneous-pending"], "milestone": "CMSSW_13_3_X", "number": 42650, "release-notes": [], "review_comments": 11, "state": "open", "title": "Improve command-line argument support for Python configs in cmsRun and edm tools", "updated_at": "1695118964", "user": "kpedro88"}