{"additions": 282, "auther_ref": "alpakaCopyPostCopy", "auther_sha": "0db641f8ea2e4e8284842196e4b6226fe0d5cf77", "author": "makortel", "body": "#### PR description:\r\n\r\nFollowing https://github.com/cms-sw/cmssw/issues/45708#issuecomment-2294166204 this PR adds the possibility for a `CopyToHost<T>::postCopy()` function, that is called by the implicit data product device-to-host copy operation after the copy has finished (but only if the `postCopy()` function is defined). This facility allows data products that need to be updated after a `memcpy()` (e.g. because they have pointers to itself) to be used without blocking synchronization calls in `CopyToHost::copyAsync()`. I expect (hope) we will ever have only at most few such data products.\r\n\r\nThe first commit has a C++17 SFINAE -based solution for checking if the `CopyToHost<T>::postCopy()` exists (that can be backported to 14_0_X), and the second commit replaces that with C++20 concepts-based solution.\r\n\r\nResolves https://github.com/cms-sw/framework-team/issues/989\r\n\r\n#### PR validation:\r\n\r\nAdded unit test runs on CPU-only and NVIDIA GPU nodes.\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\n~~To be backported to 14_1_X, and to 14_0_X (first commit only).~~ Following https://github.com/cms-sw/cmssw/issues/45708#issuecomment-2324539478 not to be backported.", "branch": "master", "changed_files": 16, "comments": 11, "commits": 2, "created_at": "1724679409", "deletions": 2, "labels": ["pending-signatures", "orp-pending", "tests-started", "code-checks-approved", "heterogeneous-pending"], "milestone": "CMSSW_14_2_X", "number": 45801, "release-notes": [], "review_comments": 2, "state": "open", "title": "Add possibility for a `CopyToHost::postCopy()` operation", "updated_at": "1725383988", "user": "makortel"}