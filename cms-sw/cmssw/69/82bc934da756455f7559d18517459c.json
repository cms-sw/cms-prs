{"additions": 24, "auther_ref": "FastMonitoringService_mutex_123x", "auther_sha": "185126e4076c1209aa1b66fd1e131214c0b09be8", "author": "fwyzard", "body": "#### PR description:\r\n\r\nThese changes attempt to fix a rare error that is only observed online during data taking:\r\n```\r\ncmsRun: ../nptl/pthread_mutex_lock.c:81: __pthread_mutex_lock: Assertion `mutex->__data.__owner == 0' failed.\r\n\r\n\r\nA fatal system signal has occurred: abort signal\r\nThe following is the call stack containing the origin of the signal.\r\n\r\nSat Jul 2 01:52:36 CEST 2022\r\nThread 13 (Thread 0x7fd568bfd700 (LWP 2362148) \"cmsRun\"):\r\n...\r\n#4 <signal handler called>\r\n#5 0x00007fd5f463d37f in raise () from /lib64/libc.so.6\r\n#6 0x00007fd5f4627db5 in abort () from /lib64/libc.so.6\r\n#7 0x00007fd5f4627c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6\r\n#8 0x00007fd5f4635a76 in __assert_fail () from /lib64/libc.so.6\r\n#9 0x00007fd5f49d7c61 in pthread_mutex_lock () from /lib64/libpthread.so.0\r\n#10 0x00007fd5e94ed1bf in evf::FastMonitoringService::preStreamEndLumi(edm::StreamContext const&) () from /opt/offline/el8_amd64_gcc10/cms/cmssw/CMSSW_12_3_6/lib/el8_amd64_gcc10/libEventFilterUtilities.so\r\n#11 0x00007fd5f70944df in edm::StreamSchedule::processOneStreamAsync<edm::OccurrenceTraits(edm::WaitingTaskHolder, edm::OccurrenceTraits::TransitionInfoType&, edm::ServiceToken const&, bool)::{lambda()#2}::operator()() () from /opt/offline/el8_amd64_gcc10/cms/cmssw/CMSSW_12_3_6/lib/el8_amd64_gcc10/libFWCoreFramework.so\r\n...\r\n```\r\n\r\nThe current code locks a mutex with `std::lock_guard`, but unlocks it explicitly under some circumstances, causing to a double unlock and leading to undefined behaviour.\r\n\r\nThis change replaces the use of `std::lock_guard` with `std::unique_lock`, that can be safely released and unlocked before going out of scope.\r\n\r\nA second minor change should avoid a few memory copies when emitting a LogInfo message.\r\n\r\n#### PR validation:\r\n\r\nTested running a recent HLT menu in DAQ-like mode.\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nBackport of #38583 for data taking.", "branch": "CMSSW_12_3_X", "changed_files": 1, "closed_at": "1656910644", "comments": 7, "commits": 2, "created_at": "1656754236", "deletions": 22, "labels": ["daq-approved", "fully-signed", "tests-approved", "bug-fix", "orp-approved", "backport-ok"], "merge_commit_sha": "efcaeda9d9138ba065c1950d62063a1b0a6db799", "merged_at": "1656910644", "merged_by": "cmsbuild", "milestone": "CMSSW_12_3_X", "number": 38585, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Improve early unlocking in FastMonitoringService [12.3.x]", "updated_at": "1656910645", "user": "fwyzard"}