{"additions": 10, "auther_ref": "iarspider-patch-20240817-5", "auther_sha": "a3b77c7291e95d9b9e81f3c928f0b1b64854de0e", "author": "iarspider", "body": "#### PR description:\r\n\r\nIn GCC13 IBs, the following warnings are emitted:\r\n\r\n```\r\nsrc/CalibTracker/SiStripCommon/plugins/TkDetMapESProducer.cc: In member function 'std::unique_ptr<TkDetMap> TkDetMapESProducer::produce(const TrackerTopologyRcd&)':\r\n  src/CalibTracker/SiStripCommon/plugins/TkDetMapESProducer.cc:297:15: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n   297 |   const auto& geomDet = tTopoRcd.getRecord<IdealGeometryRecord>().get(geomDetToken_);\r\n      |               ^~~~~~~\r\nsrc/CalibTracker/SiStripCommon/plugins/TkDetMapESProducer.cc:297:70: note: the temporary was destroyed at the end of the full expression 'edm::eventsetup::DependentRecordImplementation<RecordT, ListT>::getRecord() const [with DepRecordT = IdealGeometryRecord; RecordT = TrackerTopologyRcd; ListT = edm::mpl::Vector<IdealGeometryRecord, PTrackerParametersRcd>]().IdealGeometryRecord::<anonymous>.edm::eventsetup::DependentRecordImplementation<IdealGeometryRecord, edm::mpl::Vector<GeometryFileRcd> >::<anonymous>.edm::eventsetup::EventSetupRecordImplementation<IdealGeometryRecord>::get<GeometricDet>(((TkDetMapESProducer*)this)->TkDetMapESProducer::geomDetToken_)'\r\n  297 |   const auto& geomDet = tTopoRcd.getRecord<IdealGeometryRecord>().get(geomDetToken_);\r\n      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\r\n\t  \r\nsrc/CalibTracker/SiStripESProducers/plugins/fake/SiStripBackPlaneCorrectionFakeESSource.cc: In member function 'SiStripBackPlaneCorrectionFakeESSource::ReturnType SiStripBackPlaneCorrectionFakeESSource::produce(const SiStripBackPlaneCorrectionRcd&)':\r\n  src/CalibTracker/SiStripESProducers/plugins/fake/SiStripBackPlaneCorrectionFakeESSource.cc:68:15: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n    68 |   const auto& geomDet = iRecord.getRecord<TrackerTopologyRcd>().get(m_geomDetToken);\r\n      |               ^~~~~~~\r\nsrc/CalibTracker/SiStripESProducers/plugins/fake/SiStripBackPlaneCorrectionFakeESSource.cc:68:68: note: the temporary was destroyed at the end of the full expression 'edm::eventsetup::DependentRecordImplementation<RecordT, ListT>::getRecord() const [with DepRecordT = TrackerTopologyRcd; RecordT = SiStripBackPlaneCorrectionRcd; ListT = edm::mpl::Vector<TrackerTopologyRcd>]().TrackerTopologyRcd::<anonymous>.edm::eventsetup::DependentRecordImplementation<TrackerTopologyRcd, edm::mpl::Vector<IdealGeometryRecord, PTrackerParametersRcd> >::get<GeometricDet, IdealGeometryRecord>(((SiStripBackPlaneCorrectionFakeESSource*)this)->SiStripBackPlaneCorrectionFakeESSource::m_geomDetToken)'\r\n   68 |   const auto& geomDet = iRecord.getRecord<TrackerTopologyRcd>().get(m_geomDetToken);\r\n      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~\r\n\r\nsrc/CalibTracker/SiStripESProducers/plugins/fake/SiStripHashedDetIdFakeESSource.cc: In member function 'virtual std::unique_ptr<SiStripHashedDetId> SiStripHashedDetIdFakeESSource::produce(const SiStripHashedDetIdRcd&)':\r\n  src/CalibTracker/SiStripESProducers/plugins/fake/SiStripHashedDetIdFakeESSource.cc:34:15: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n    34 |   const auto& geomDet = record.getRecord<TrackerDigiGeometryRecord>().get(geomDetToken_);\r\n      |               ^~~~~~~\r\nsrc/CalibTracker/SiStripESProducers/plugins/fake/SiStripHashedDetIdFakeESSource.cc:34:74: note: the temporary was destroyed at the end of the full expression 'edm::eventsetup::DependentRecordImplementation<RecordT, ListT>::getRecord() const [with DepRecordT = TrackerDigiGeometryRecord; RecordT = SiStripHashedDetIdRcd; ListT = edm::mpl::Vector<TrackerDigiGeometryRecord>]().TrackerDigiGeometryRecord::<anonymous>.edm::eventsetup::DependentRecordImplementation<TrackerDigiGeometryRecord, edm::mpl::Vector<IdealGeometryRecord, TrackerAlignmentRcd, TrackerAlignmentErrorExtendedRcd, TrackerSurfaceDeformationRcd, GlobalPositionRcd, TrackerTopologyRcd, PTrackerParametersRcd, PTrackerAdditionalParametersPerDetRcd> >::get<GeometricDet, IdealGeometryRecord>(((SiStripHashedDetIdFakeESSource*)this)->SiStripHashedDetIdFakeESSource::geomDetToken_)'\r\n   34 |   const auto& geomDet = record.getRecord<TrackerDigiGeometryRecord>().get(geomDetToken_);\r\n      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\r\nsrc/CalibTracker/SiStripESProducers/plugins/fake/SiStripLorentzAngleFakeESSource.cc: In member function 'SiStripLorentzAngleFakeESSource::ReturnType SiStripLorentzAngleFakeESSource::produce(const SiStripLorentzAngleRcd&)':\r\n  src/CalibTracker/SiStripESProducers/plugins/fake/SiStripLorentzAngleFakeESSource.cc:186:15: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n   186 |   const auto& geomDet = iRecord.getRecord<TrackerTopologyRcd>().get(m_geomDetToken);\r\n      |               ^~~~~~~\r\nsrc/CalibTracker/SiStripESProducers/plugins/fake/SiStripLorentzAngleFakeESSource.cc:186:68: note: the temporary was destroyed at the end of the full expression 'edm::eventsetup::DependentRecordImplementation<RecordT, ListT>::getRecord() const [with DepRecordT = TrackerTopologyRcd; RecordT = SiStripLorentzAngleRcd; ListT = edm::mpl::Vector<TrackerTopologyRcd>]().TrackerTopologyRcd::<anonymous>.edm::eventsetup::DependentRecordImplementation<TrackerTopologyRcd, edm::mpl::Vector<IdealGeometryRecord, PTrackerParametersRcd> >::get<GeometricDet, IdealGeometryRecord>(((SiStripLorentzAngleFakeESSource*)this)->SiStripLorentzAngleFakeESSource::m_geomDetToken)'\r\n  186 |   const auto& geomDet = iRecord.getRecord<TrackerTopologyRcd>().get(m_geomDetToken);\r\n      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~\r\n\t  \r\nsrc/CalibTracker/SiStripQuality/plugins/SiStripQualityHotStripIdentifier.cc: In member function 'void SiStripQualityHotStripIdentifier::bookHistos()':\r\n  src/CalibTracker/SiStripQuality/plugins/SiStripQualityHotStripIdentifier.cc:170:83: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n   170 |   for (const auto& it : SiStripDetInfoFileReader::read(fp_.fullPath()).getAllData()) {\r\n      |                                                                                   ^\r\nsrc/CalibTracker/SiStripQuality/plugins/SiStripQualityHotStripIdentifier.cc:170:82: note: the temporary was destroyed at the end of the full expression 'SiStripDetInfoFileReader::read(std::string)().SiStripDetInfo::getAllData()'\r\n  170 |   for (const auto& it : SiStripDetInfoFileReader::read(fp_.fullPath()).getAllData()) {\r\n      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\r\n```\r\n\r\n#### PR validation:\r\n\r\nBot tests\r\n", "branch": "master", "changed_files": 5, "comments": 8, "commits": 2, "created_at": "1723884478", "deletions": 5, "labels": ["alca-pending", "pending-signatures", "orp-pending", "tests-started", "code-checks-pending", "trk"], "milestone": "CMSSW_14_1_X", "number": 45732, "release-notes": [], "review_comments": 1, "state": "open", "title": "[GCC13] Avoid Wdangling-reference warning in CalibTracker submodules", "updated_at": "1723970284", "user": "iarspider"}