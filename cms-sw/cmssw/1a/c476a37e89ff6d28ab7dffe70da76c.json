{"additions": 324, "auther_ref": "10_4_x_dev", "auther_sha": "cc524e2f514fde19506ddc3b98eea34d584cf72a", "author": "guitargeek", "body": "This basically a follow up to https://github.com/cms-sw/cmssw/pull/23767, where I fixed a thread-safety issue in the new Egamma MVA ID implementation by just moving the IDs out of the global cache of the producer.\r\n\r\nI did not consider this as a permanent solution, because the MVA IDs with the large GBRForests should indeed not be replicated for each thread. Here I propose:\r\n\r\n* To simply promote the MVAValueMapProducer to a global EDProducer to not duplicate the GBRForests\r\n* To wrap the employed `StringCutObjectSelector<>` and `StringCutObjectFunction<>` into a little class together with a `std::mutex` to make their operator() thread safe\r\n* Make the MultiToken thread safe so it can be used in global producers\r\n\r\nThe matrix tests pass and the changes were also a little bit battle tested with the multi-threaded ntuplizer in my MultileptonAnalysis.", "branch": "master", "changed_files": 14, "comments": 11, "commits": 6, "created_at": "1541154514", "deletions": 419, "labels": ["code-checks-approved", "comparison-pending", "orp-pending", "pending-signatures", "reconstruction-pending", "tests-pending"], "milestone": "CMSSW_10_4_X", "number": 25101, "release-notes": [], "review_comments": 3, "state": "open", "title": "Egamma IDs back to global cache", "updated_at": "1541525232", "user": "guitargeek"}