{"additions": 1, "auther_ref": "13_0_X_add-PileupSummaryInfos_addPileupInfo-to-SiPixelCalSingleMuonTight", "auther_sha": "3918a239d9076265475e5801e9eccbc36c832b1c", "author": "mmusich", "body": "backport of https://github.com/cms-sw/cmssw/pull/41411\r\n\r\n#### PR description:\r\n\r\nTitle says it all. Needed for pixel dynamic inefficiency studies, as reported [here](https://indico.cern.ch/event/1271485/contributions/5377156/attachments/2635145/4558662/Pixel_Dynamic_Inefficiency_simulation_Validation___update.pdf#page=2), see for long version also [here](https://github.com/CMSTrackerDPG/Tasks/issues/1).\r\n\r\n#### PR validation:\r\n\r\nRun the command:\r\n```\r\ncmsDriver.py -s ALCA:SiPixelCalSingleMuonTight --conditions 124X_mcRun3_2022_realistic_postEE_forPixelIneff_v5 --eventcontent=ALCARECO --datatier ALCARECO -n 10000 --no_exec --era Run3 --python_filename=SingleMuonTightCombinedMC.py --nThreads=8 --filein=/store/relval/CMSSW_12_4_12/RelValZMM_PU_13p6/GEN-SIM-RECO/PU_124X_mcRun3_2022_realistic_postEE_forPixelIneff_v5_PDMVRELVALS188_HS_2023PU-v1/00000/05930f72-62dc-45fd-814b-2652a4ddd08d.root\r\n```\r\nwith this branch and without and found the following changes:\r\n\r\n```diff\r\n< File SiPixelCalSingleMuonTight_new.root Events 1103\r\n---\r\n> File SiPixelCalSingleMuonTight.root Events 1103\r\n4,22c4,21\r\n< PileupSummaryInfos_addPileupInfo__HLT. 24663 8817.56\r\n< recoMuons_muons__RECO. 18709.7 6319.87\r\n< recoVertexs_offlinePrimaryVertices__RECO. 45693.1 5982.61\r\n< recoVertexsedmAssociation_offlinePrimaryVertices__RECO. 5417.33 1329.82\r\n< EventProductProvenance 4409.7 651.125\r\n< intedmValueMap_offlinePrimaryVertices__RECO. 5398.31 371.293\r\n< recoTrackExtras_ALCARECOSiPixelCalSingleMuonTight__ALCA. 473.744 348.975\r\n< recoTracks_ALCARECOSiPixelCalSingleMuonTight__ALCA. 589.343 261.811\r\n< SiStripClusteredmNewDetSetVector_ALCARECOSiPixelCalSingleMuonTight__ALCA. 682.138 229.76\r\n< floatedmValueMap_offlinePrimaryVertices__RECO. 247.966 190.427\r\n< TrackingRecHitsOwned_ALCARECOSiPixelCalSingleMuonTight__ALCA. 1648.62 183.922\r\n< SiPixelClusteredmNewDetSetVector_ALCARECOSiPixelCalSingleMuonTight__ALCA. 346.11 166.796\r\n< SiPixelClusteredmNewDetSetVector_closebyPixelClusters__ALCA. 344.534 164.618\r\n< edmTriggerResults_TriggerResults__HLT. 1527.38 63.7217\r\n< Phase2TrackerCluster1DedmNewDetSetVector_ALCARECOSiPixelCalSingleMuonTight__ALCA. 78.7643 35.2466\r\n< EventAuxiliary 115.829 14.3083\r\n< floatsedmValueMap_trackDistances__ALCA. 65.3626 13.2248\r\n< EventSelections 92.1442 6.30372\r\n< BranchListIndexes 25.1686 3.18223\r\n---\r\n> recoMuons_muons__RECO. 18718 6361.84\r\n> recoVertexs_offlinePrimaryVertices__RECO. 45703.9 6008.53\r\n> recoVertexsedmAssociation_offlinePrimaryVertices__RECO. 5421.87 1336.26\r\n> EventProductProvenance 4410.01 883.01\r\n> intedmValueMap_offlinePrimaryVertices__RECO. 5402.4 377.336\r\n> recoTrackExtras_ALCARECOSiPixelCalSingleMuonTight__ALCA. 465.82 339.411\r\n> recoTracks_ALCARECOSiPixelCalSingleMuonTight__ALCA. 581.367 252.24\r\n> SiStripClusteredmNewDetSetVector_ALCARECOSiPixelCalSingleMuonTight__ALCA. 678.673 223.561\r\n> floatedmValueMap_offlinePrimaryVertices__RECO. 247.745 190.081\r\n> TrackingRecHitsOwned_ALCARECOSiPixelCalSingleMuonTight__ALCA. 1649.56 186.464\r\n> SiPixelClusteredmNewDetSetVector_ALCARECOSiPixelCalSingleMuonTight__ALCA. 342.141 161.065\r\n> SiPixelClusteredmNewDetSetVector_closebyPixelClusters__ALCA. 340.872 159.252\r\n> edmTriggerResults_TriggerResults__HLT. 1528.05 66.9565\r\n> Phase2TrackerCluster1DedmNewDetSetVector_ALCARECOSiPixelCalSingleMuonTight__ALCA. 75.6074 31.505\r\n> EventAuxiliary 115.728 14.0508\r\n> floatsedmValueMap_trackDistances__ALCA. 65.0462 12.796\r\n> EventSelections 92.4488 6.83862\r\n> BranchListIndexes 25.0834 3.07978\r\n```\r\n\r\n**The additional collection (as measured on around 1k events) adds about 8kB/event, so the overall on-file size is increased by 40%**\r\n   * this is undoubtedly sizeable, but as per AlCa conveners advice (@tvami): \"this ALCARECO has an order of magnitude less events than other ALCARECOs, so even the 40% increase will make the size reasonable \". \r\n   * Moreover it should only be there for MC (which I think we unfrequently run, except in relvals)\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nverbatim backport to 13.0.X of https://github.com/cms-sw/cmssw/pull/41411\r\n\r\ncc:\r\n@ferencek @mroguljic FYI", "branch": "CMSSW_13_0_X", "changed_files": 1, "comments": 2, "commits": 1, "created_at": "1683025147", "deletions": 0, "labels": ["alca-pending", "pending-signatures", "orp-pending", "tests-started", "backport-ok", "trk"], "milestone": "CMSSW_13_0_X", "number": 41484, "release-notes": [], "review_comments": 0, "state": "open", "title": "[13.0.X] add `PileupSummaryInfos_addPileupInfo` to `SiPixelCalSingleMuonTight` output data-tier", "updated_at": "1683025248", "user": "mmusich"}