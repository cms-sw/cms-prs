{"additions": 1155, "auther_ref": "ecal-phisym-run3-wf", "auther_sha": "857749e3a85c0ebc4de882057c0ad5c5f1d8ad40", "author": "simonepigazzini", "body": "#### PR description:\r\n\r\n- Run1 EcalPhiSym code removed from Calibration/EcalCalibAlgos\r\n- Run3 workflow added:\r\n  + EcalPhiSymRecHit and EcalPhiSymInfo dataformats\r\n  + Object producers and flat table producers for NanoAOD output\r\n  + config files and test workflow\r\n- The EcalPhiSymRecHitProducer comes in two flavors: `EndRun` and `EndLuminosityBlock` producer, a base class\r\n  provides the common methods. The producers are `edm::global`, I ran a basic test to check that the products are identical \r\n  when running with a single or multiple threads.\r\n- It is unclear if any thread safety should be implemented using a `edm::SerialTaskQueue`. The documentation available [here](https://twiki.cern.ch/twiki/bin/view/CMSPublic/FWMultithreadedFrameworkGlobalModuleInterface#edm_one_WatchLuminosityBlocks) does not reflect the current interface of the class.\r\n\r\nAt the moment, both the new data formats and the producer have been placed inside Calibration/EcalCalibAlgos. The data formats might be moved somewhere else, either DataFormats/EcalRecHit or a new package under CalibFormats/. I do not have strong opinions, the current option keeps everything \"close\" and in the same place where the ECALPedestalPCL workflow is. Eventually, we plan to run this workflow at T0 as part of ALCARECO (pending further discussion with AlCa and T0).", "branch": "master", "changed_files": 19, "comments": 2, "commits": 4, "created_at": "1645050175", "deletions": 2567, "labels": ["alca-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-pending"], "milestone": "CMSSW_12_3_X", "number": 36988, "release-notes": [], "review_comments": 0, "state": "open", "title": "Ecal phisym run3 workflow", "updated_at": "1645051206", "user": "simonepigazzini"}