{"additions": 9, "auther_ref": "iarspider-patch-20240817-3", "auther_sha": "baec11121af9d7bcef35b0d9cb1ae8860e8330cd", "author": "iarspider", "body": "#### PR description:\r\n\r\nIn GCC13 IB, complier complains about dangling reference to a temporary:\r\n\r\n```\r\nsrc/CalibTracker/SiPhase2TrackerESProducers/plugins/SiPhase2OuterTrackerFakeLorentzAngleESSource.cc: In member function 'virtual std::unique_ptr<SiPhase2OuterTrackerLorentzAngle> SiPhase2OuterTrackerFakeLorentzAngleESSource::produceOTLA(const SiPhase2OuterTrackerLorentzAngleRcd&)':\r\n  src/CalibTracker/SiPhase2TrackerESProducers/plugins/SiPhase2OuterTrackerFakeLorentzAngleESSource.cc:72:15: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n    72 |   const auto& geomDet = rcd.getRecord<TrackerTopologyRcd>().get(m_geomDetToken);\r\n      |               ^~~~~~~\r\nsrc/CalibTracker/SiPhase2TrackerESProducers/plugins/SiPhase2OuterTrackerFakeLorentzAngleESSource.cc:72:64: note: the temporary was destroyed at the end of the full expression 'edm::eventsetup::DependentRecordImplementation<RecordT, ListT>::getRecord() const [with DepRecordT = TrackerTopologyRcd; RecordT = SiPhase2OuterTrackerLorentzAngleRcd; ListT = edm::mpl::Vector<TrackerTopologyRcd>]().TrackerTopologyRcd::<anonymous>.edm::eventsetup::DependentRecordImplementation<TrackerTopologyRcd, edm::mpl::Vector<IdealGeometryRecord, PTrackerParametersRcd> >::get<GeometricDet, IdealGeometryRecord>(((SiPhase2OuterTrackerFakeLorentzAngleESSource*)this)->SiPhase2OuterTrackerFakeLorentzAngleESSource::m_geomDetToken)'\r\n   72 |   const auto& geomDet = rcd.getRecord<TrackerTopologyRcd>().get(m_geomDetToken);\r\n      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~\r\nsrc/CalibTracker/SiPhase2TrackerESProducers/plugins/SiPhase2OuterTrackerFakeLorentzAngleESSource.cc: In member function 'virtual std::unique_ptr<SiPhase2OuterTrackerLorentzAngle> SiPhase2OuterTrackerFakeLorentzAngleESSource::produceOTSimLA(const SiPhase2OuterTrackerLorentzAngleSimRcd&)':\r\n  src/CalibTracker/SiPhase2TrackerESProducers/plugins/SiPhase2OuterTrackerFakeLorentzAngleESSource.cc:78:15: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n    78 |   const auto& geomDet = rcd.getRecord<TrackerTopologyRcd>().get(m_geomDetToken);\r\n      |               ^~~~~~~\r\nsrc/CalibTracker/SiPhase2TrackerESProducers/plugins/SiPhase2OuterTrackerFakeLorentzAngleESSource.cc:78:64: note: the temporary was destroyed at the end of the full expression 'edm::eventsetup::DependentRecordImplementation<RecordT, ListT>::getRecord() const [with DepRecordT = TrackerTopologyRcd; RecordT = SiPhase2OuterTrackerLorentzAngleSimRcd; ListT = edm::mpl::Vector<TrackerTopologyRcd>]().TrackerTopologyRcd::<anonymous>.edm::eventsetup::DependentRecordImplementation<TrackerTopologyRcd, edm::mpl::Vector<IdealGeometryRecord, PTrackerParametersRcd> >::get<GeometricDet, IdealGeometryRecord>(((SiPhase2OuterTrackerFakeLorentzAngleESSource*)this)->SiPhase2OuterTrackerFakeLorentzAngleESSource::m_geomDetToken)'\r\n   78 |   const auto& geomDet = rcd.getRecord<TrackerTopologyRcd>().get(m_geomDetToken);\r\n      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~\r\n```\r\n\r\nPreviously this warning was fixed by removing reference. However I think `geomDet` is not cheap to copy, so I opted for explicitly storing result of `getRecord` call.\r\n\r\n#### PR validation:\r\n\r\nBot tests", "branch": "master", "changed_files": 2, "comments": 22, "commits": 2, "created_at": "1723882385", "deletions": 4, "labels": ["core-pending", "alca-pending", "db-pending", "pending-signatures", "tests-pending", "orp-pending", "upgrade-approved", "requires-external", "code-checks-approved", "trk"], "milestone": "CMSSW_14_2_X", "number": 45730, "release-notes": [], "review_comments": 1, "state": "open", "title": "[GCC13][AlCa] Avoid Wdangling-reference in SiPhase2OuterTrackerFakeLorentzAngleESSource", "updated_at": "1724756342", "user": "iarspider"}