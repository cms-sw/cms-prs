{"additions": 505, "auther_ref": "dynamic_occ", "auther_sha": "2967c14ff9c690e73fc815292a851b4ed71a1d45", "author": "SegmentLinking", "body": "### Dynamic Memory Limits\r\n\r\nI compute a dynamic max for each module that is the max possible number of objects that can be created given the number of lower level objects (so for example the number of possible T5's for a given module given the total number of T3's in modules where two T3's can be connected). This upper bound provides a large reduction in the occupancies. This is also accomplished with no new truncations, since this dynamic max represents the maximum number of possible objects that can be created.\r\n\r\nFor the segments, I had to rearrange the addPixelSegmentToEvent() function so that the segments container is instantiated after the MDs container is filled. Right now the segments object is instantiated during the pLS loading, which is done before the MDs container is filled.\r\n\r\n### Object Size Reduction\r\n\r\nReduction in object sizes (total occupancy basically) at current max occupancies (averaged over 10 events, 0.8 GeV):\r\n- 682,404 -> 303,891 (55% decrease) for MD's.\r\n- 1,930,994->857,880 (56% decrease) for Segments.\r\n- 1,980,235 -> 737,502 (63% decrease) for T3's.\r\n- 502,053 -> 212,953 (58% decrease) for T5's.\r\n\r\n### Total Memory Decrease\r\n\r\nFor single stream, 100 events at current occupancies:\r\n\r\n1695MiB -> 1275MiB (**25%** decrease, 0.8 GeV)\r\n\r\nThe code has been tested locally: it compiles and gives the identical results (on CPU) for LST.", "branch": "master", "changed_files": 21, "comments": 1, "commits": 1, "created_at": "1738345620", "deletions": 431, "labels": ["reconstruction-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-pending", "tracking"], "milestone": "CMSSW_15_0_X", "number": 47232, "release-notes": [], "review_comments": 0, "state": "open", "title": "Dynamic Memory Allocation for LST Objects", "updated_at": "1738345646", "user": "GNiendorf"}