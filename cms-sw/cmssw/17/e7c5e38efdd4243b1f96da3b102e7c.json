{"additions": 184, "auther_ref": "CMSSW_14_1_0_pre7/stripsTiming", "auther_sha": "49e294beac0e90310001977ec2b7c31b86e3d765", "author": "slava77", "body": "The primary goal was to speedup the full-unpacking configuration of `SiStripClusterizerFromRaw`. \r\n\r\nThe following relatively straightforward updates are made:\r\n- concrete `ThreeThresholdAlgorithm` is passed using templates and most methods of `ThreeThresholdAlgorithm` are inlined\r\n- per-strip noise and quality bit values are precomputed in creation of `SiStripClusterizerConditions` (the downside here is around 32MB of memory in conditions data and the cost of precomputation equal to around 10 events of strip unpacking cost)\r\n\r\nOverall `SiStripClusterizerFromRaw` is faster by 27% on ttbar relval Run3 MC, running with full unpacking (measured with callgrind on 300 events on the HLT config in CMSSW_14_1_4_patch5):\r\n- inlines and templates give 14%\r\n- conditions precomputation another 13%\r\n\r\nNo differences in physics results are expected.\r\n\r\nIn case backports are needed, the commits are made so that the backport is trivial down to 14_1_X. \r\n\r\n\r\n@mmasciov \r\n\r\n", "branch": "master", "changed_files": 4, "comments": 5, "commits": 4, "created_at": "1736360575", "deletions": 139, "labels": ["reconstruction-pending", "alca-pending", "pending-signatures", "orp-pending", "tests-started", "code-checks-approved", "performance-improvements", "trk"], "milestone": "CMSSW_15_0_X", "number": 47061, "release-notes": [], "review_comments": 0, "state": "open", "title": "speedup SiStripClusterizer(FromRaw) using ThreeThresholdAlgorithm", "updated_at": "1736364982", "user": "slava77"}