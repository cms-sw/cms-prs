{"additions": 348, "auther_ref": "full_dyn_t5", "auther_sha": "91ec7388cb6bbec76902d22e26ab1f1c121ff9fe", "author": "SegmentLinking", "body": "#### PR description:\r\nThis PR introduces dynamic memory caps for the LS, T3, and T5 objects, reducing LST's memory footprint and eliminating truncation of LST track primitives due to underallocation.\r\n\r\n### Memory Reduction (0.8 GeV, 10 event average)\r\nThe numbers below are the average sums over 10 events of the memory caps for all modules in an event. Previously, most space that was allocated was not used to avoid possible truncation (eg, only O(6k) T5's are created per event, but 500k elements were allocated in the T5 arrays using the constant caps). This PR fixes this approach by first doing quick counts using a subset of the cuts in the actual creation kernels to get a better estimate of how much space needs to be allocated per module.\r\n\r\nFirst number is using only the static caps (ie prior to https://github.com/cms-sw/cmssw/pull/47232), second is current, third is this PR.\r\n\r\nT5's - 502,000 -> 120,000 -> 57,000 (89% decrease)\r\nT3's - 1,980,000 -> 737,000 -> 409,000 (79% decrease)\r\nLS's - 1,931,000 -> 858,000 -> 532,000 (72% decrease)\r\n\r\n### Truncation Reduction (0.8 GeV, 10 event sum)\r\n\r\nFirst number is current, second is this PR.\r\n\r\nT5's - 0 -> 0 (current limits are already set very high)\r\nT3's - 1,349 -> 0\r\nLS's - 16,488 -> 0\r\n\r\nTiming increases on GPU by ~14% (3.6 ms -> 4.1 ms) for single stream and ~6% (1.7 ms -> 1.8 ms) for 8 streams. One thing to note however is that most of the timing increase on GPU is from reduced truncation (i.e. more objects being produced by LST, causing more computation downstream) rather than overhead from the new counting kernels that calculate dynamic caps for memory allocation. Timing with CPU backend increases by a similar 6-7%.\r\n\r\nc.c. @slava77 ", "branch": "master", "changed_files": 7, "comments": 3, "commits": 1, "created_at": "1754597258", "deletions": 223, "labels": ["reconstruction-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-approved", "tracking"], "milestone": "CMSSW_15_1_X", "number": 48698, "release-notes": [], "review_comments": 0, "state": "open", "title": "Dynamic Memory Caps for LS, T3, T5 Objects in LST", "updated_at": "1754597382", "user": "GNiendorf"}