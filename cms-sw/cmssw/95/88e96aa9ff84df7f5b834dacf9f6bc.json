{"additions": 1040, "auther_ref": "mtvGlobal", "auther_sha": "9cd9109cb8ca828cf8a654616febaafe9afc1901", "author": "makortel", "body": "This PR is an exercise to migrate `MultiTrackValidator` to concurrent DQM (=`DQMGlobalEDAnalyzer` and `ConcurrentMonitorElement`).\r\n\r\nI tried first to use `MTVHistoProducerAlgoForTracker` as the \"Histograms\" run cache, but in the end using a separate \"Histograms\" struct and percolating that to everywhere seemed to be less invasive (i.e. easier to migrate to).\r\n\r\n~~I added two member functions to `ConcurrentMonitorElement` as the `TH1` is no longer accessible~~\r\n* ~~`fillNoFlow()`: fills under/overflows to the first/last bins~~ (functionality moved to `DQMGenericClient`)\r\n  * ~~if there is a better way, I'm all ears~~\r\n* ~~`sumw2()`: calls `TH1::Sumw2()`~~ (implemented in #21852)\r\n   * ~~In principle one could construct the histogram object, call Sumw2, and then call `bookND()`, but I felt sumw2 would be common-enough use case to justify a function in the `ConcurrentMonitorElement` interface~~\r\n\r\nI added `noFlowDists` parameter to `DQMGenericClient` for a list of histograms for which the under/overflow bin contents are moved to first/last bins to avoid doing that at filling time (as is done in the current code).\r\n\r\nI also had to add additional `operator()` to `RecoTrackSelectorBase` to achieve const interface. In addition, I added alternative makers without `ConsumesCollector` for `TrackingParticleSelector` and `GenParticleCustomSelector`. Strictly speaking these are not needed for this PR, but I had them done already before decided to switch the migration strategy (and they simplify a bit the interfaces, e.g. now it is clear from `MTVHistoProducerAlgo` interface that it does not read anything from the event).\r\n\r\nTested in CMSSW_10_0_X_2017-12-23-1100 (rebased on top of CMSSW_10_0_X_2018-01-17-1100), no changes expected in results except for MTV plots vs. DeltaR whose filling was plagued by the same bug that was fixed for other plots in #18380.\r\n\r\nFYI @VinInn @rovere @hajohajo @fwyzard ", "branch": "master", "changed_files": 12, "comments": 29, "commits": 7, "created_at": "1514722851", "deletions": 946, "labels": ["analysis-pending", "code-checks-approved", "comparison-available", "dqm-pending", "hold", "orp-pending", "pending-signatures", "reconstruction-pending", "simulation-pending", "tests-approved"], "milestone": "CMSSW_10_0_X", "number": 21794, "release-notes": [], "review_comments": 2, "state": "open", "title": "Migrate MultiTrackValidator to concurrent DQM", "updated_at": "1516284000", "user": "makortel"}