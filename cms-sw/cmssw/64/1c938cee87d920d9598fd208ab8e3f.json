{"additions": 211, "auther_ref": "eventSetupModuleLabelMismatch", "auther_sha": "b09966341d945ed301801f78bb52bf1cd074f902", "author": "wddgit", "body": "#### PR description:\r\n\r\nEventSetup data is uniquely identified by data type, record type, and product label. In the ESInputTag, one can additionally add the requirement that the module producing the data product also be associated with a specific module label. Before this PR, if the EventSetup fails to get a data product the system prints the same message in the case where the data type, record type, and product label cannot be found and in the case where a matching product is found but the module label does not match. This PR modifies the exception message to explicitly identify those cases where the only problem is that the module label does not match. This makes debugging problems easier.\r\n\r\nThis also includes a bug fix for the case of a \"may consumes\" EventSetup request that also requires a specific module label. See the changes in ESTagGetter.cc. There is nothing in CMSSW using that feature currently so this bug shouldn't be causing any problems (unless there is code using it that isn't in the repository...).\r\n\r\nNote that one design decision was made implementing this. It would be nice to print out the module label requested in the ESInputTag and also the module label associated with the ESProducer in the case where there is a module label mismatch. That would make debugging even easier. But that information is not currently available at the point in code execution where the exception is constructed. It would require additional memory to make it available. Upon discussion between myself and Matti, we decided that it was better to save memory than to print out this info.  Mainly this was based on how little this feature is used and how rare such exceptions are. It is not hard to figure those module labels given the information that is available.\r\n\r\n#### PR validation:\r\n\r\nExtended the unit test eventsetup_t.cppunit.cc to cover the cases related to the bug in ESTagGetter.cc.  Also manually tested that all the exceptions were printing out nicely and formatted as expected in cases where the exceptions get thrown.\r\n", "branch": "master", "changed_files": 18, "comments": 6, "commits": 1, "created_at": "1725638529", "deletions": 289, "labels": ["reconstruction-pending", "core-pending", "pending-signatures", "tests-rejected", "orp-pending", "code-checks-approved"], "milestone": "CMSSW_14_2_X", "number": 45947, "release-notes": [], "review_comments": 1, "state": "open", "title": "Better exception message if module label in ESInputTag doesn't match", "updated_at": "1725881799", "user": "wddgit"}