{"additions": 1086, "auther_ref": "implement_generic_product_tools_v2", "auther_sha": "e5278a6b9c61fe813a9e24e04836f22c46e34797", "author": "fwyzard", "body": "#### PR description:\r\n\r\nSpecialise `Handle` and `OrphanHandle` for `WrapperBase`: this lets users produce and consume collections via their wrapper, using their run time type information (_e.g._ type name, type id, ...) instead of the compile time types. Implement integration test for this specialisations.\r\n\r\nIntroduce a `MemcpyTraits` structure, that should be specialised for types that can be safely `memcpy`ed, without requiring a full ROOT streamer de/serialisation.\r\nSpecialise the `MemcpyTraits` for arithmetic types and `vector`s of arithmetic types, and all `PortableObject` and `PortableCollection` types.\r\n\r\nImplement `edmtest::GenericCloner`: this `EDProducer` will consume and clone all the event products declared by its configuration; a direct `memcpy` will be used for types that support the `MemcpyTraits` interface; the ROOT dictionaries will be use to serialise and deserialise the other tyepes.\r\n\r\n#### PR validation:\r\n\r\nUnit tests pass.\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nMay be backported to 15.0.x as part of the MPI work.", "branch": "master", "changed_files": 16, "comments": 4, "commits": 6, "created_at": "1741117979", "deletions": 3, "labels": ["core-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-pending", "heterogeneous-pending"], "milestone": "CMSSW_15_1_X", "number": 47504, "release-notes": [], "review_comments": 0, "state": "open", "title": "Implement a `GenericCloner` test module", "updated_at": "1741118235", "user": "fwyzard"}