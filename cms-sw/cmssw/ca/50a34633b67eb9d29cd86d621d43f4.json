{"additions": 349, "auther_ref": "portFrom131XTo126X_pujetid_fix", "auther_sha": "50cea296015910453429fe71fe43d016bb63ffc5", "author": "jshin96", "body": "Backport from https://github.com/cms-sw/cmssw/pull/40762\r\n\r\nOriginal PR description:\r\n\r\nThis PR has three main modifications:\r\n\r\nPileup Jet Id variable bug fix.\r\nPileupJetIdProducer and PileupJetIdAlgo are used to compute input variables and the final discriminant for\r\nthe Pileup jet Id BDT. There was a bug for one of the variable calculation such that when there is no charged\r\nconstituent inside a jet, it assigns the very last constituent in the list of constituent as leading charged\r\nconstituent. This PR corrects this error and assigns zero pt and large phi and eta when there is no charged\r\nconstituent.\r\n\r\nCorrect puppi weight access implementation by ValueMap.\r\nPreviously, the puppi weight for each constituent was accessed from packedCandidate object in the code, but for the\r\ncompatibility with other codes in CMSSW, this weight must be implemented through ValueMap. In this PR, puppi\r\nweight retrieval from ValueMap is implemented, just like PR https://github.com/cms-sw/cmssw/pull/40667. As in that PR, the naming of \"puppi weight\" is\r\ngeneralized to \"constituent weight\". Furthermore, there are parts of PileupJetIdAlgo where comparison of constituent's pt\r\n(in order to find, for example, leading charged constituent) was done incorrectly when weighted pt was compared with\r\nunweighted pt. This error is also fixed.\r\n\r\nThe ValueMap implementation does not affect CHS jets. However, the fix in leading charged constituent selection could\r\nhave affected CHS jets. In further detail, CHS jets have more constituents in each jet in general and it is very rare\r\nfor CHS jets to have no charged constituent at all, so the effect of such fix was insignificant.\r\n\r\nAdd an option in PuppiProducer to apply photon protection for existing weights.\r\nPreviously the photon protection is applied also on existing puppi weights. This will confuse users who would want\r\nPuppiProducer to provide ValueMap of weights with the same exact weights stored in packedPFCandidates in MiniAODs.\r\nThis PR adds a flag (default set to False) to enable photon protection on existing puppi weights.\r\n\r\nPR validation:\r\n\r\nValidation plots comparing the input variables for Pileup Jet Id training before and after fix can be found in this JMAR meeting [contribution](https://indico.cern.ch/event/1245910/#5-pu-jetid-training-for-puppi).\r\nPasses the usual runTheMatrix test: runTheMatrix.py -l limited -i all --ibeos. Test done by @nurfikri89.\r\nPasses reMiniAOD and reNanoAOD workflows: runTheMatrix.py -i all --ibeos -l 1325.518,2500.312. Test done by @nurfikri89.\r\nPasses the JMENano workflows: runTheMatrix.py -i all --ibeos -l 10224.15,11024.15,25202.15,11634.15. Test done by @nurfikri89.", "branch": "CMSSW_12_6_X", "changed_files": 7, "comments": 47, "commits": 13, "created_at": "1676598528", "deletions": 113, "labels": ["reconstruction-pending", "pending-signatures", "tests-pending", "orp-pending", "hold", "backport-ok", "xpog-pending"], "milestone": "CMSSW_12_6_X", "number": 40802, "release-notes": [], "review_comments": 8, "state": "open", "title": "[PileupJetId, Puppi] Backport of #40762 (Pileup ID input variable fix, puppi weight ValueMap access, optional photon protection for existing puppi weights) to CMSSW_12_6_X", "updated_at": "1685713111", "user": "jshin96"}