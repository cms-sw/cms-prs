{"additions": 47, "auther_ref": "gcc-600-r234661-dqm-cleanup", "auther_sha": "ba2eaa693cd6a207b55b124fb4c4d2a5a682a063", "author": "davidlt", "body": "The following are last pieces to cleanup DQM with GCC 6.0.0 (r234661). In majority cases it's about using address as a pointer. Compiler can always assume that address is not `0/NULL/nullptr`, thus it can always assume that condition is `true` or `false` at compile time. Cleanup such places. There is one place there such comparison was replaced to `!std:vector::empty()` check for same. There is one instance where `abs` was replace by `std::fabs` and `<cmath>` header added.\n\nErrors are available in commit messages.\n\nPlease, review.\n", "branch": "CMSSW_8_1_X", "changed_files": 9, "closed_at": "1459934297", "comments": 7, "commits": 2, "created_at": "1459834404", "deletions": 111, "labels": ["comparison-available", "dqm-approved", "fully-signed", "orp-approved", "tests-approved"], "merge_commit_sha": "0dd8b8f01f46ec15289c08461ea23446706c9eb0", "merged_at": "1459934297", "merged_by": "davidlange6", "milestone": "Next CMSSW_8_1_X", "number": 13927, "release-notes": [], "review_comments": 0, "state": "closed", "title": "DQM GCC 6.0.0 (r234661) cleanup (address used as a pointer, std::fabs)", "updated_at": "1459934463", "user": "davidlt"}