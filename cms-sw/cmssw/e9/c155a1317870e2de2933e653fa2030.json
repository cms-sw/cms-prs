{"additions": 163, "auther_ref": "SoA_range_checking", "auther_sha": "2fe74705b4ab9590824299e11c39a08a1bb7a823", "author": "ericcano", "body": "#### PR description:\r\n\r\nThis PR adds copy and construction compatibility between `View`s and `ConstView`s (respectively, no const evasion was created) with different template parameters. This allows compile time switching to the range checking variant for debugging. The `View`s are usually used from the `PortableCollections` (and are non range checking). Changing the signature or a function or kernel to use the range checking variant simply requires a type definition change and the creation of a translating variable at the kernel call. The program will then half immediately on range violation.\r\n\r\n#### PR validation:\r\n\r\nThe copy and construction are now validated in a test, as part of this PR. I addition this feature was used and validated to debug an actual out of range error during module debugging.\r\n\r\n#### Backport status:\r\n\r\nBackport of https://github.com/cms-sw/cmssw/pull/41928 to CMSSW_14_0_X for data taking.", "branch": "CMSSW_14_0_X", "changed_files": 4, "comments": 6, "commits": 4, "created_at": "1707234113", "deletions": 46, "labels": ["fully-signed", "orp-pending", "tests-started", "backport", "heterogeneous-approved"], "milestone": "CMSSW_14_0_X", "number": 43881, "release-notes": [], "review_comments": 0, "state": "open", "title": "SoA range checking: adds inter operability between range checked and non range checked [14.0.x]", "updated_at": "1707234147", "user": "fwyzard"}