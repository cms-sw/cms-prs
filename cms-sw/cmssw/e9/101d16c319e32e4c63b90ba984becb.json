{"additions": 8, "auther_ref": "tblayer-displaced-crossings", "auther_sha": "1c875e831954c4a74f5f1bcb2da9d8b6645813a2", "author": "aminnj", "body": "When trying to compute expected barrel pixel layer hits for tracks with a displaced starting point, the logic in `TBLayer::computeCrossings` fails to return crossings when the starting point is between the inner and outer cylinders of a pixel layer. In the following plot of barrel pixel layers projected into the transverse plane, the current logic will return crossing points in blue for a dimuon pair originating at the red point, but fails to provide crossing points in the layer just above the red point.\r\n\r\n![image](https://user-images.githubusercontent.com/5760027/83843314-98be7280-a6b9-11ea-8ae2-4e7290c1d6ec.png)\r\n\r\nThis PR modifies the logic to allow for such crossings to be returned by not requiring that both `innerCrossing` and `outerCrossing` have solutions.\r\n\r\nIn my tests, \"prompt\" tracks are unaffected.\r\n", "branch": "CMSSW_11_0_X", "changed_files": 1, "closed_at": "1591367584", "comments": 4, "commits": 2, "created_at": "1591331598", "deletions": 3, "labels": ["comparison-pending", "orp-pending", "pending-signatures", "reconstruction-pending", "tests-pending"], "milestone": "CMSSW_11_0_X", "number": 30120, "release-notes": [], "review_comments": 0, "state": "closed", "title": "TBLayer computeCrossings doesn't allow for some displaced starting points", "updated_at": "1591367584", "user": "aminnj"}