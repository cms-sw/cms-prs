{"additions": 99, "auther_ref": "SiPixelDigitizerUpdate_from-CMSSW_10_1_0_pre2", "auther_sha": "3f9269df206298f55cd4c9ceadf707c3810e98e0", "author": "tsusa", "body": "The PR extends the functionality of the pixel inefficiency simulation (SiPixelDynamicInefficiency) in digitizer from the module to the ROC level. It was needed to simulate the damage in ROCs caused by the DCDC issue. The damage is bigger for the modules operated longer in such conditions (LV off/HV on), effect is also larger for ROCs closer to the beam.\r\nThe damage first appears in big pixels and then the standard size pixels. For that reason, the first 5% (percentage of the big pixels in the ROC) of bad pixels is assigned to the big ones, and the remaining part to the standard pixels.\r\n\r\nAs SiPixelDynamicInefficiency DB object has not been updated yet, no changes expected with this PR.\r\n\r\nThe plots showing pixelAlive measurements and results of the simulation for several modules are attached below. \r\n[PR_bpix.pdf](https://github.com/cms-sw/cmssw/files/1782047/PR_bpix.pdf)\r\n[PR_fpix.pdf](https://github.com/cms-sw/cmssw/files/1782048/PR_fpix.pdf)\r\n\r\n@veszpv @tvami @boudoul @jkarancs @ferencek ", "branch": "master", "changed_files": 2, "comments": 30, "commits": 2, "created_at": "1520270701", "deletions": 11, "labels": ["code-checks-approved", "comparison-available", "orp-pending", "pending-signatures", "simulation-pending", "tests-approved"], "milestone": "CMSSW_10_2_X", "number": 22465, "release-notes": [], "review_comments": 4, "state": "open", "title": "Implemented pixel inefficiency at ROC level", "updated_at": "1523037591", "user": "tsusa"}