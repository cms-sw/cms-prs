{"additions": 535, "auther_ref": "alpakaESProducer3", "auther_sha": "475e19b1241c9a8aaf98db769ba0c54dfc029c0e", "author": "makortel", "body": "#### PR description:\r\n\r\nThis PR simplifies the Alpaka ESProducer model by making it more strict towards the use case of being able to to use the host backend(s) and a device backend (of one platform) in the same job (for which a test configuration is added).\r\n\r\nIn this PR this goal is achieved by making each Alpaka ESProducer to produce the \"simplified\" ESProduct in the host memory, after which the ESProduct is implicitly copied to the memory of the device of the ESProducer's backend (if the job has a device memory space consumer for the ESProduct). The host-side ESProduct is also available to be used.\r\n\r\nThe `TransferToHost` class template specialization (introduced) in #39248 is replaced with `copyToHostAsync(TQueue&, TSrc const&) -> TDst` function overload. For host-to-device copies a similar `copyToDeviceAsync(TQueue&, TSrc const&) -> TDst` function overload is required. Here `TSrc` is the data product type in the source memory space, and `TDst` the type in the destination memory space. (I felt the function overload to be a little bit simpler and more expressive than the earlier class template specialization approach)\r\n\r\nIn practice the `ALPAKA_ACCELERATOR_NAMESPACE::ESProducer::setWhatProduced()` (for host-side Records) registers another callback function (implemented as lambda) to copy the host-side data product to the device memory. For host backends the copy is avoided, as the data product produced by the user-registered callback is used directly.\r\n\r\nThe earlier  \"ESProduct model 1\", where the re-formatted host ESProduct was not accessible for other purposes than the data copy, is removed because of being incompatible with the model here. The `PortableCollection`-based \"model 3\" is renamed to \"model 1\" in the comments throughout the code.\r\n\r\nGiven that this change comes in quite late in the porting effort, I'd be happy to help any porting project to migrate from the previous ESProducer model (from #39248) to this one.\r\n\r\n\r\n#### PR validation:\r\n\r\nUnit tests pass on machines with and without GPUs.", "branch": "master", "changed_files": 32, "comments": 11, "commits": 3, "created_at": "1671743773", "deletions": 233, "labels": ["pending-signatures", "tests-pending", "orp-pending", "code-checks-pending", "heterogeneous-pending"], "milestone": "CMSSW_13_0_X", "number": 40403, "release-notes": [], "review_comments": 4, "state": "open", "title": "Simplify Alpaka ESProducer model by making the data copies to device implicit", "updated_at": "1674080574", "user": "makortel"}