{"additions": 14, "auther_ref": "74x_digiPerf1", "auther_sha": "a2c40e42d88a1451a363fc4be8a25dbe85bc7fea", "author": "davidlange6", "body": "Roughly 10% improvement in mixing module time\n\nMain change are:\n 1) Avoid copying GenEvent when not needed\n\n 2) Avoid creating a random generator using it once. I'm lazy so used the static methods as done elsewhere in the digitizers. One can easily also make the RandPoissonQ object a member data with the same effect. RandPoissonQ does some setup assuming that the mu its given will be used over and over, so there is a CPU penalty for creating it and using it only once.\n", "branch": "CMSSW_7_4_X", "changed_files": 4, "closed_at": "1427545464", "comments": 6, "commits": 1, "created_at": "1427010172", "deletions": 22, "labels": ["comparison-available", "fully-signed", "simulation-approved", "tests-approved"], "merge_commit_sha": "1a6801de2ed2ac7875fc95c723d599966410f9bc", "merged_at": "1427545464", "merged_by": "cmsbuild", "milestone": "Next CMSSW_7_4_X", "number": 8451, "release-notes": [], "review_comments": 0, "state": "closed", "title": "avoid copies of GenEvent and optimizing random number usage in DIGI step", "updated_at": "1427545464", "user": "davidlange6"}