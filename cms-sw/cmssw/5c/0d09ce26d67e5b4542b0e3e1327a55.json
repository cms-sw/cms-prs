{"additions": 41, "auther_ref": "fixTrackingParticleNumberOfHits", "auther_sha": "b9b75bf0dbfc57d0fcd06606c07136768a677e61", "author": "makortel", "body": "The `TrackingParticle::numberOfHits()` (and the two other \"number of hits\") is calculated in a loop over the SimHits of a SimTrack, where only SimHits with the same `particleType` as the SimTrack's `pdgId` and the same `particleType` and `processType` as the \"first hit\" (or that's how the intention looks like). The purpose seems to be to ignore hits from e.g. delta rays or decays where the same SimTrack is reused.\r\n\r\nI agree with the intention, but the definition of \"first hit\" is flawed. When iterating over the `multimap` from SimTrack id to an index in a `vector<const PSimHit*>` in\r\nhttps://github.com/cms-sw/cmssw/blob/CMSSW_9_0_0_pre2/SimGeneral/TrackingAnalysis/plugins/TrackingTruthAccumulator.cc#L637-L674\r\nthe SimHits of a SimTracks are iterated in the order they get inserted in the `multimap` in\r\nhttps://github.com/cms-sw/cmssw/blob/CMSSW_9_0_0_pre2/SimGeneral/TrackingAnalysis/plugins/TrackingTruthAccumulator.cc#L563-L566\r\nThe order of SimHits originates from\r\nhttps://github.com/cms-sw/cmssw/blob/CMSSW_9_0_0_pre2/SimGeneral/TrackingAnalysis/plugins/TrackingTruthAccumulator.cc#L515-L530\r\nand\r\nhttps://github.com/cms-sw/cmssw/blob/CMSSW_9_0_0_pre2/SimGeneral/TrackingAnalysis/plugins/TrackingTruthAccumulator.cc#L306-L314\r\nhttps://github.com/cms-sw/cmssw/blob/CMSSW_9_0_0_pre2/SimGeneral/MixingModule/python/trackingTruthProducer_cfi.py#L11-L27\r\ni.e. first muon detectors, then pixel, and last (strip) tracker. If the \"first hit\" (according to the current logic) has `particleType` different from the SimTrack's `pdgId`, the resulting `numberOfHits` is zero. In phase0/1 this can happen if a non-muon particle decays to a muon resulting hit(s) in muon detectors. In phase2 the problem is exacerbated because also outer tracker SimHits are stored in the \"pixel hit\" collections, and for some reason for some SimTracks the OT SimHits have smaller index than pixel SimHits (typically leading to `numberOfHits()` being 0).\r\n\r\nThe proposed fix is to sort the SimHits by their `timeOfFlight()` before being inserted to the `multimap`, and ignore SimHits having `particleType` different from TrackingParticle `pdgId` from the \"first hit\" `particleType`+`processType` deduction (they are anyway ignored from the `numberOfHits` calculation already now).\r\n\r\nBut even this is not perfect, as there are cases where e.g. all SimHits have `particleType` different from TrackingParticle `pdgId`. So some further thought is still needed, but I think this PR is nevertheless an improvement. Similar fix is applied to `TrackingParticleNumberOfHits` as well.\r\n\r\nGiven that prior #17338 the TrackingParticles with `numberOfHits()==0` were ignored in `QuickTrackAssociatorByHits`, this bug caused some legitimate track-TrackingParticle pairs to not be associated. Already alone this PR would give almost the same changes in track true/fake classification as #17338 (there are cases where all SimHits of a TrackingParticle have a different `particleType` from the TrackingParticle `pdgId`, so #17338 was anyway needed). On top of #17338, the plots showing the number of hits or layers are expected to show small changes.\r\n\r\nTested in CMSSW_9_0_X_2017-01-22-2300 (on top of #17338), expected changes in validation plots are described above. No changes are expected in reco quantities.\r\n\r\n@rovere @VinInn @ebrondol @slava77 \r\n\r\n", "branch": "CMSSW_9_0_X", "changed_files": 2, "closed_at": "1486063538", "comments": 11, "commits": 3, "created_at": "1486021732", "deletions": 4, "labels": ["comparison-available", "fully-signed", "orp-approved", "simulation-approved", "tests-approved"], "merge_commit_sha": "a5cd0730fd5489e7c50c26bd8edf2b97dc142f97", "merged_at": "1486063537", "merged_by": "cmsbuild", "milestone": "CMSSW_9_0_X", "number": 17382, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Fix calculation of TrackingParticle::numberOfHits()", "updated_at": "1486063538", "user": "makortel"}