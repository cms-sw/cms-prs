{"additions": 80, "auther_ref": "betastar-update", "auther_sha": "fa11300ad2debe0c1475e8826f59a6e2cd0fa697", "author": "errai-", "body": "#### PR description:\r\n\r\nAdding some algorithmical and technical clarifications to the \"Betastar\" variables needed by the JERC group - originally implemented by @rappoccio . In the original implementation there were two variables: \"chargedHadronCHSEnergyFraction\" and \"chargedHadronPUEnergyFraction\". The latter was what we really needed - and corresponds to the old definition of a \"betastar\" variable. This means the fraction of charged energy removed by the CHS algorithm, w.r.t. the CHS jet energy. The former was added by @rappoccio , as our algorithms produced a slightly different charged hadron energy fraction than the standard algorithms. Below, a closer listing of updates and reasons for them is given.\r\n\r\n- The term \"Hadron\" was removed from the naming scheme, as we are actually monitoring all charged particles.\r\n- For JERC-related debugging purposes, \"chargedHadronCHSEnergyFraction\" is not an interesting variable, but its subcategories (fromPV==1, fromPV==2, fromPV==3) are. Hence, \"chargedHadronCHSEnergyFraction\" was replaced by three such variables, the sum of which gives the original \"chargedHadronCHSEnergyFraction\".\r\n- It was decided to not use the old and confusing naming schemes (beta, betastar), but to continue with clear and straighforward variable names: \"chargedFromPV0EnergyFraction\", \"chargedFromPV1EnergyFraction\", \"chargedFromPV2EnergyFraction\" and \"chargedFromPV3EnergyFraction\".\r\n- It is acknowledged that making changes to the variable names now - as the original naming scheme has already been integrated to cmssw - carries its problems. However, as the corresponding NANOAOD PR [1] has not yet been accepted, no working piece of code uses these variables, currently. Moreover, we are at the present the main consumers of these \"betastar\" variables and therefore now seems like a good time to think the variable names through thoroughly (to make things easier and more understandable for people using these pieces of code in the future).\r\n- The algorithmical part was clarified for \"chargedFromPV0EnergyFraction\" (former \"chargedHadronPUEnergyFraction\"): we associate each charged particle with fromPV==0 to the jet that it is closest to (in eta-phi plane), and keep it only if it is close enough to the jet axis (typically, delta R < 0.4). The formerly used algorithm allowed double-counting of charged particles, as they could have been associated with multiple jets.\r\n- For the variables \"chargedFromPVXEnergyFraction\" (X=1,2,3) we simply loop through the jet constituents and look at the value of fromPV.\r\n\r\n#### PR validation:\r\n\r\nThe code has been privately tested using the generic NANOAOD production line. The file jets_cff.py (in PhysicsTools/NanoAOD/python) was replaced by the one found in the open pull request by @rappoccio : [1]\r\n\r\n[1] https://github.com/cms-nanoAOD/cmssw/pull/246\r\n\r\nTagging @kirschen for the reference.", "branch": "master", "changed_files": 2, "closed_at": "1571838776", "comments": 71, "commits": 4, "created_at": "1557752324", "deletions": 73, "labels": ["analysis-approved", "code-checks-approved", "comparison-available", "hold", "orp-pending", "pending-signatures", "reconstruction-rejected", "tests-approved", "xpog-pending"], "milestone": "CMSSW_11_0_X", "number": 26767, "release-notes": [], "review_comments": 10, "state": "closed", "title": "Adding a fine-tuned version of the 'betastar' kind of variables.", "updated_at": "1571838777", "user": "errai-"}