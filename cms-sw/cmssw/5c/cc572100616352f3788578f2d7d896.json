{"additions": 7, "auther_ref": "FixTokenTransition_error", "auther_sha": "6364eea90e08621e448ef2f3958f16dfc649c140", "author": "michael-pitt", "body": "#### PR description:\r\n\r\nThis RP fixes an error caused by loading misaligned geometry record together with the aligned geometry record and hit the transitionID error:\r\n\r\n> The transition ID stored in the ESGetToken does not match the transition where the token is being used\r\n\r\n\r\nThis is happens if a user set buildMisalignedGeometry=True in [CTPPSGeometryESModule.cc](https://github.com/cms-sw/cmssw/blob/master/Geometry/VeryForwardGeometryBuilder/plugins/CTPPSGeometryESModule.cc)\r\n\r\n#### PR validation:\r\n\r\n```\r\ncmsrel CMSSW_12_4_3\r\ncd CMSSW_12_4_3/src\r\ncmsenv\r\nvoms-proxy-init --voms cms --valid 168:00\r\ncmsRun cfg.py\r\n```\r\nwhere the `cfg.py` is the following:\r\n\r\n```\r\nimport FWCore.ParameterSet.Config as cms\r\n \r\nfrom Configuration.StandardSequences.Eras import eras\r\nprocess = cms.Process(\"trackBasedAlignment\", eras.Run3)\r\n \r\n# minimum of logs\r\nprocess.MessageLogger = cms.Service(\"MessageLogger\",\r\n  statistics = cms.untracked.vstring(),\r\n  destinations = cms.untracked.vstring('cout'),\r\n  cout = cms.untracked.PSet(\r\n    threshold = cms.untracked.string('WARNING')\r\n  )\r\n)\r\n \r\n# input data\r\nprocess.source = cms.Source(\"PoolSource\",\r\n    skipBadFiles = cms.untracked.bool(True),\r\n    fileNames = cms.untracked.vstring(\r\n        '/store/data/Run2022A/ZeroBias/RAW/v1/000/354/329/00000/e2fefed8-a6e8-42d3-90b3-d8df8534769d.root'\r\n    ),\r\n)\r\n \r\n#load condisions using GT\r\nprocess.load('Configuration.StandardSequences.FrontierConditions_GlobalTag_cff')\r\nfrom Configuration.AlCa.GlobalTag import GlobalTag\r\nprocess.GlobalTag = GlobalTag(process.GlobalTag, '124X_dataRun3_Prompt_Candidate_2022_07_26_15_08_24', '')\r\n \r\n# PPS reco modules\r\nprocess.load(\"EventFilter.CTPPSRawToDigi.ctppsRawToDigi_cff\")\r\nprocess.load(\"RecoPPS.Configuration.recoCTPPS_cff\")\r\n \r\n# reload geometry\r\nprocess.load(\"Geometry.VeryForwardGeometry.geometryRPFromDD_2022_cfi\")\r\nprocess.ctppsGeometryESModule.buildMisalignedGeometry = cms.bool(True) #false will just complain about missing VeryForwardMisalignedGeometryRecord\r\n \r\n# initial alignments\r\nprocess.load(\"CalibPPS.ESProducers.ctppsRPAlignmentCorrectionsDataESSourceXML_cfi\")\r\nprocess.ctppsRPAlignmentCorrectionsDataESSourceXML.RealFiles = cms.vstring()\r\nprocess.es_prefer_AlignmentCorrections = cms.ESPrefer(\"CTPPSRPAlignmentCorrectionsDataESSourceXML\",\"ctppsRPAlignmentCorrectionsDataESSourceXML\")\r\n \r\n# aligner\r\nprocess.load(\"CalibPPS.AlignmentRelative.ppsStraightTrackAligner_cfi\")\r\n \r\nprocess.ppsStraightTrackAligner.verbosity = 1\r\n \r\nprocess.ppsStraightTrackAligner.tagUVPatternsStrip = cms.InputTag(\"totemRPUVPatternFinder\")\r\nprocess.ppsStraightTrackAligner.tagDiamondHits = cms.InputTag(\"\")\r\nprocess.ppsStraightTrackAligner.tagPixelHits = cms.InputTag(\"\")\r\nprocess.ppsStraightTrackAligner.tagPixelLocalTracks = cms.InputTag(\"ctppsPixelLocalTracks\")\r\n \r\nprocess.ppsStraightTrackAligner.maxEvents = int(1E5)\r\n \r\nprocess.ppsStraightTrackAligner.rpIds = [103,104,105,123,124,125]\r\nprocess.ppsStraightTrackAligner.excludePlanes = cms.vuint32()\r\nprocess.ppsStraightTrackAligner.z0 = +217000\r\n \r\nprocess.ppsStraightTrackAligner.maxResidualToSigma = 30\r\nprocess.ppsStraightTrackAligner.minimumHitsPerProjectionPerRP = 3\r\n \r\nprocess.ppsStraightTrackAligner.removeImpossible = True\r\nprocess.ppsStraightTrackAligner.requireNumberOfUnits = 2\r\nprocess.ppsStraightTrackAligner.requireOverlap = False\r\nprocess.ppsStraightTrackAligner.requireAtLeast3PotsInOverlap = True\r\nprocess.ppsStraightTrackAligner.additionalAcceptedRPSets = \"\"\r\n \r\nprocess.ppsStraightTrackAligner.cutOnChiSqPerNdf = True\r\nprocess.ppsStraightTrackAligner.chiSqPerNdfCut = 500\r\n \r\nprocess.ppsStraightTrackAligner.maxTrackAx = 0.5E-3\r\nprocess.ppsStraightTrackAligner.maxTrackAy = 0.5E-3\r\n \r\noptimize=\"s\"\r\nprocess.ppsStraightTrackAligner.resolveShR = True\r\nprocess.ppsStraightTrackAligner.resolveShZ = False\r\nprocess.ppsStraightTrackAligner.resolveRotZ = False\r\n \r\nprocess.ppsStraightTrackAligner.constraintsType = \"standard\"\r\nprocess.ppsStraightTrackAligner.standardConstraints.units = cms.vuint32(101,121)\r\nprocess.ppsStraightTrackAligner.oneRotZPerPot = False\r\nprocess.ppsStraightTrackAligner.useEqualMeanUMeanVRotZConstraints = True\r\n \r\nprocess.ppsStraightTrackAligner.algorithms = cms.vstring(\"Jan\")\r\n \r\nprocess.ppsStraightTrackAligner.JanAlignmentAlgorithm.stopOnSingularModes = False\r\n \r\nresults_dir=\"./\"\r\n \r\nprocess.ppsStraightTrackAligner.taskDataFileName = \"\" # results_dir + \"/task_data.root\"\r\n \r\nprocess.ppsStraightTrackAligner.fileNamePrefix = results_dir + \"/results_iteration_\"\r\nprocess.ppsStraightTrackAligner.expandedFileNamePrefix = results_dir + \"/results_cumulative_expanded_\"\r\nprocess.ppsStraightTrackAligner.factoredFileNamePrefix = results_dir + \"/results_cumulative_factored_\"\r\n \r\nprocess.ppsStraightTrackAligner.diagnosticsFile = results_dir + '/diagnostics.root'\r\nprocess.ppsStraightTrackAligner.buildDiagnosticPlots = True\r\nprocess.ppsStraightTrackAligner.JanAlignmentAlgorithm.buildDiagnosticPlots = True\r\n \r\n \r\n# processing sequence\r\nprocess.p = cms.Path(\r\n  # it is important to re-run part of the reconstruction as it may influence\r\n  # the choice of rec-hits used in the alignment\r\n  process.ctppsRawToDigi * process.recoCTPPS * process.ppsStraightTrackAligner\r\n)\r\n```\r\n", "branch": "master", "changed_files": 1, "comments": 11, "commits": 1, "created_at": "1661932287", "deletions": 2, "labels": ["geometry-approved", "fully-signed", "tests-approved", "orp-pending", "code-checks-approved"], "milestone": "CMSSW_12_6_X", "number": 39264, "release-notes": [], "review_comments": 0, "state": "open", "title": "Fix the mismatch in transition ID for idealGeo", "updated_at": "1662038745", "user": "michael-pitt"}