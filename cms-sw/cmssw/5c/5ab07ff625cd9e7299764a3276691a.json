{"additions": 1848, "auther_ref": "ecalrechitproducer-alpaka-migration", "auther_sha": "5e09bb48b9766b04f49d9787ab46af3ee8bcb201", "author": "thomreis", "body": "#### PR description:\r\n\r\nMigration of the ECAL RecHit producer from CUDA to Alpaka, including the required portable data and conditions formats and an extension of the DQM module to compare RecHits produced on the CPU or GPU.\r\nWhile being a direct replacement of the existing CUDA RecHit producer for the most part, the migrated Alpaka version adds the RecHit time variable, which the CUDA version did not calculate. In addition the Alpaka version adds support for Phase 2, where no inputs from the endcaps will be existing anymore.\r\n\r\nIn comparison with the legacy CPU producer the Alpaka algorithm still lacks the recovery of dead channels and can therefore not yet be used to replace the legacy producer in production.\r\n\r\n#### PR validation:\r\n\r\nA comparison of the legacy CPU code vs. CUDA comparison (12834.513) with the legacy CPU code vs. Alpaka (on GPU) comparison (13834.413) with 9k TTbar events shows almost identical results between CUDA and Alpaka (with the exception of the time variables as mentioned above) and very good agreement with the legacy CPU version for both implementations.\r\nIn addition, a comparison of the Alpaka module running on CPU gives almost identical results to the module running on GPU (nvidia).", "branch": "master", "changed_files": 47, "comments": 41, "commits": 7, "created_at": "1729372636", "deletions": 26, "labels": ["dqm-pending", "alca-pending", "db-pending", "operations-approved", "reconstruction-approved", "pending-signatures", "tests-approved", "orp-pending", "pdmv-pending", "upgrade-pending", "code-checks-approved", "heterogeneous-approved", "ecal", "changes-dataformats"], "milestone": "CMSSW_15_0_X", "number": 46453, "release-notes": [], "review_comments": 48, "state": "open", "title": "ECAL RecHit producer Alpaka migration", "updated_at": "1734366481", "user": "thomreis"}