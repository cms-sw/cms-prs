{"additions": 21, "auther_ref": "potentialDataRaceESProductResolver", "auther_sha": "53d2f30951e1d6642d2eb9a6b0f0150f3e58f684", "author": "wddgit", "body": "#### PR description:\r\n\r\nFixes a potential data race in ESProductResolver. Noticed while reading code for a different development. No one has reported an issue related to this. Probably it is not an actual issue because writing the same pointer value to the same memory location concurrently is not an actual problem on the CPUs we currently use, although technically it is a data race and might someday be a problem on CPUs in use in the future (we think...). This condition should also occur extremely rarely.\r\n\r\nI removed the memory order specifications in this change because that is what we usually currently do, but if anyone thinks it worth it I will put them back. I just thought it was a remnant from when we used to use those in the early concurrency days.\r\n\r\nAlso removed an old comment about a global mutex that was removed a long time ago.\r\n\r\n#### PR validation:\r\n\r\nExisting unit tests pass. There shouldn't be any change in behavior or output.\r\n", "branch": "master", "changed_files": 2, "comments": 11, "commits": 1, "created_at": "1728504041", "deletions": 15, "labels": ["core-pending", "pending-signatures", "orp-pending", "tests-started", "code-checks-approved"], "milestone": "CMSSW_14_2_X", "number": 46330, "release-notes": [], "review_comments": 2, "state": "open", "title": "Fix potential data race in ESProductResolver", "updated_at": "1728580226", "user": "wddgit"}