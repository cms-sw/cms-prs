{"additions": 5219, "auther_ref": "alpaka_integration_branch", "auther_sha": "d96ebcb73c908e7b0468023e6cc06348ff0085c5", "author": "fwyzard", "body": "#### PR description:\r\n\r\n##### `HeterogeneousCore/AlpakaInterface`\r\nRewrite the uniform element kernel loops:\r\n  - generalise `elements_with_stride`, `blocks_with_stride` and `elements_in_block` to work on any single dimension, and rename them to `uniform_elements_along`, `uniform_groups_along` and `uniform_group_elements_along`;\r\n  - introduce `uniform_elements[_x|_y|_z]`, `uniform_groups[_x|_y|_z]` and `uniform_group_elements[_x|_y|_z]` as specialisations\r\n  - reintrouce `elements_with_stride`, `blocks_with_stride`, `elements_in_block` as legacy names for `uniform_elements`, `uniform_groups`, and `uniform_group_elements`;\r\n  - rename `elements_with_stride_nd` to `uniform_elements_nd`, and reintroduce `elements_with_stride_nd` as a legacy name for `uniform_elements_nd`.\r\nRewrite the independent element kernel loops:\r\n  - generalise `independent_groups` and `independent_group_elements` to work on any single dimension, and rename them to `independent_groups_along` and `independent_group_elements_along`;\r\n  - introduce `independent_groups[_x|_y|_z]` and `independent_group_elements[_x|_y|_z]`     as specialisations.\r\nRewrite the `zeroAndInit` kernel using alpakatools utilities, and rename `elements_with_stride` to `uniform_elements` in user code.\r\n\r\n##### `RecoLocalTracker/SiPixelClusterizer`\r\nImplement fixes that were lost during the CUDA-to-Alpaka migration.\r\n\r\nCollect the updates from #39711, #42618, #42977 and #43052, that were missing from the Alpaka implementation:\r\n  - skip invalid or corrupted ROCs: make the Alpaka implementation of the pixel unpacker skip spurious ROCs, similar to the legacy and CUDA versions of the unpacker, and store the\r\ninvalid ROC number error (`errorType=36`);\r\n  - fix the decoding of channels with timeout errors (`errorType=27`);\r\n  - synchronise the treatment of pixel `errorType=26`, `27`, `30` with the legacy code;\r\n  - disable `printf` statements at compile time.\r\n\r\n##### `RecoTracker/PixelSeeding`\r\nDo not call the fishbone for events with pixel hits only in BPIX1 (reimplement #35638).\r\n\r\n##### `RecoTracker/MeasurementDet`\r\nAdd a check on the pixel ROC range, to avoid overflows in the (unsigned) range differences.\r\n\r\n##### `DataFormats/TrackingRecHitSoA`\r\nExtend `TrackingRecHits` collections for testing and their unit tests.\r\n\r\n##### `CondFormats/SiPixelObjects`\r\nClean up includes and dependencies, and avoid including framework headers in the device compilation.\r\n\r\n##### `Geometry/CommonTopologies`\r\nUpdate comments to pixel topologies.\r\n\r\n##### Other changes\r\nFix include guards after files were moved to different packages.\r\nClean up include files.\r\nSimplify nested namespace declarations.\r\n\r\n#### PR validation:\r\n\r\nUnit tests pass.\r\n\r\nValidated running a recent HLT menu over 20k events without issues, both on GPU and on CPU, on data and MC: the alpaka implementation running on CPU or GPU gives the same results as the CUDA implementation, within the same non-reproducibility margins (1 event or up to 1% for high-rate triggers).\r\n", "branch": "master", "changed_files": 74, "comments": 67, "commits": 25, "created_at": "1706916555", "deletions": 4823, "labels": ["reconstruction-pending", "alca-pending", "db-pending", "geometry-approved", "pending-signatures", "orp-pending", "pdmv-pending", "tests-started", "bug-fix", "urgent", "upgrade-pending", "code-checks-approved", "heterogeneous-approved", "tracking", "trk"], "milestone": "CMSSW_14_1_X", "number": 43853, "release-notes": [], "review_comments": 11, "state": "open", "title": "Follow up to the Alpaka integration in CMSSW", "updated_at": "1707671500", "user": "fwyzard"}