{"additions": 157, "auther_ref": "dqm-migrate-dqmprovinfo", "auther_sha": "09e28ab499e3979dd6a0bad7c073974bfdc7b0be", "author": "schneiml", "body": "#### PR description:\r\nAs pointed out in #25090 , `DQMProvInfo` is still a `DQMOneLumiEDAnalyzer`.\r\n\r\nRather than giving it the 1:1 port to lumi caches, I restructured it in a way that it does not need lumi transitions at all: In part, to have a nice example for how to do this; in part, because I think this is easier to understand; and in part, because it gives more correct output.\r\n\r\nThis is done by using a `TProfile` (edit: not any more) to aggregate data within a lumisection, and keeping state in local variables rather than instance variables. The code could easily run as `DQMEDAnalyzer` or `DQMGlobalEDAnalyzer` apart from one logical race condition around `setupLumiSection`, which is needed to treat \"never seen\" different from \"empty\". There would be other ways to do this, but `DQMOneEDAnalyzer` should be ok for such a small/fast analyzer.\r\n\r\nHowever, this means the semantics *have* slightly changed, and a more thorough validation is needed.\r\n\r\n~Themain difference is that now `reportSummaryMap` is a `TProfile2D`, where each bin is the _percentage (0..1)  of events where this flag was set_. This matches the old definition in the corner cases, but provides more information on the transitions. It also handles merging more correctly (though we should never merge *inside* lumis, so this is not really relevant).~ (Edit: switched back to TH2F for compatibility with the render plugin).\r\n\r\nA side effect of the design change is that _empty_ LS now show up as _not valid_, while they were _valid_ before. In case of missing information, bins will be white, instead of red. I think this is acceptable.\r\n\r\nFinally, the _valid_ flag for each lumi is set as soon as _at least one_ event of it is processed, while before it was set when _the lumisection is completely processed_. The latter semantics are hard to achieve in modern CMSSW, since we never really know if we have seen the full lumi or not. (It also does not really mean much in online, since this plot is created in a different client compared to most others, and its indistinguishable in the offline output).\r\n\r\n#### PR validation:\r\n\r\nNot much so far. PR tests should provide a good check on whether things work correctly.", "branch": "master", "changed_files": 2, "closed_at": "1590043975", "comments": 30, "commits": 3, "created_at": "1589885401", "deletions": 215, "labels": ["code-checks-approved", "comparison-available", "dqm-approved", "fully-signed", "orp-approved", "tests-approved"], "merge_commit_sha": "4bbb63b0f11ccf880dc738a7338165db26e42503", "merged_at": "1590043975", "merged_by": "cmsbuild", "milestone": "CMSSW_11_1_X", "number": 29907, "release-notes": [], "review_comments": 0, "state": "closed", "title": "DQM: Make DQMProvInfo not use lumi transitions.", "updated_at": "1590043975", "user": "schneiml"}