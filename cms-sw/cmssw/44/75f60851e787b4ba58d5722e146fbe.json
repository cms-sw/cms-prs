{"additions": 1837, "auther_ref": "jc_lhcInfo_split_PopCon_PR", "auther_sha": "74b79031a825bfd8ffd40df3066a192cb225e7a9", "author": "CTPPS", "body": "#### PR description:\r\n\r\nPopulator of Conditions for the new records, `LHCInfoPerLS` and `LHCInfoPerFill` introduced in [PR39495](https://github.com/cms-sw/cmssw/pull/39495), to be used instead of `LHCInfo`. Manages the data sources (OMS, CTPPS OnlineDB, DIP), creates objects of the new classes and writes them to the ofline database (CondDB). Heavily based on original `LHCInfo PopCon`.\r\n\r\n\r\nThe main mechanism is to take fills data from `OMS` (filtered by time and having stable beam), iterate through them and for every fill (meeting certian coditions depending on the mode and record) get data from all the sources, create payloads and write them to the offline database.\r\n\r\nThere are separate programs for `...perLS` and `...perFill` classess. Both of them have 2 modes: `duringFill` and `endFill`.\r\n\r\nThe `duringFill` mode, when ran, writes data (just 1 payload of most recent data) only for ongoing fills and only during stable beam. `PerFill` PopCon writes the payload only once per fill, and `perLS` PopCon writes a payload every time it's run during a stable beam.\r\n\r\nThe `endFill` processes a fill only once, after it's ended. `PerFill` PopCon writes payloads corresponding to all the lumisections of the fill (filtered for duplicates), and `perLS` PopCon writes 2 payloads: corresponding to the start, and the end of the stable beam of the fill.\r\n\r\nThe worklows are ment to be run by python scripts located in `CondTools/RunInfo/python`:\r\n```\r\nLHCInfoPerFillPopConAnalyzerDuringFill.py\r\nLHCInfoPerFillPopConAnalyzerEndFill.py\r\nLHCInfoPerLSPopConAnalyzerDuringFill.py\r\nLHCInfoPerLSPopConAnalyzerEndFill.py\r\n```\r\nmore info: [presentation on LHCInfo update from AlCaDBmeeting](https://indico.cern.ch/event/1200061/contributions/5046070/attachments/2524882/4342370/LHCInfo%20final%20pres%20for%20AlCa.pdf)\r\n\r\n#### PR validation:\r\n\r\nThe python scripts running the workflow were tested on several defferent periods of time (set by the `startTime` and `endTime` parameters) by analysing the logs and data in the written payloads.\r\n\r\n```\r\ncd CondTools/RunInfo/python\r\ncmsRun LHCInfoPerFillPopConAnalyzerDuringFill.py = tag=lhcInfoPerFill_during\r\ncmsRun LHCInfoPerFillPopConAnalyzerEndFill.py = tag=lhcInfoPerFill_end\r\ncmsRun LHCInfoPerLSPopConAnalyzerDuringFill.py = tag=lhcInfoPerLS_during\r\ncmsRun LHCInfoPerLSPopConAnalyzerEndFill.py = tag=lhcInfoPerLS_end\r\n```\r\n\r\nTo run the PopCon the PPS database keys are required (located in `.cms_cond` folder in path you can specify in `authenticationPath` argument in the python script).\r\n\r\nThe new PopCon was also used in further development (update of proton reconstruction, to be submitted in the next PR).", "branch": "master", "changed_files": 13, "comments": 10, "commits": 1, "created_at": "1676851902", "deletions": 0, "labels": ["db-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-approved"], "milestone": "CMSSW_13_1_X", "number": 40817, "release-notes": [], "review_comments": 14, "state": "open", "title": "PPS lhcInfo split: per fill and per LS PopCon", "updated_at": "1678726296", "user": "JanChyczynski"}