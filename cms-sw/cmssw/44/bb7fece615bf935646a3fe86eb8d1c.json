{"additions": 71, "auther_ref": "30955_master", "auther_sha": "5911bd4609ce32d3cef9014636c4e7e3488c9c58", "author": "jpata", "body": "#### PR description:\r\n\r\nTechnical optimization of `PFDisplacedVertexCandidateFinder::link` as suggested in https://github.com/cms-sw/cmssw/issues/30955. Cache pt, eta, phi values using SOA, rearrange the calculations to do the crossing-point evaluation only when needed. A further refactoring of this class could be done (fabs, revisit recursive associate algo) but was not addressed so far.\r\n\r\n#### PR validation:\r\n\r\nworkflow `23434.21` has been run with no change in output.\r\n\r\nInitial checks show about a 25% speed improvement for `PFDisplacedVertexCandidateFinder::link` and `PFDisplacedVertexCandidateProducer::produce` correspondingly.\r\n\r\nbefore:\r\n```\r\n[149]       1.5     128.48      16.64 / 111.84     PFDisplacedVertexCandidateFinder::link(edm::RefToBase<reco::Track> const&, edm::RefToBase<reco::Track> const&, double&, Point3DBase<float, GlobalTag>&, reco::PFDisplacedVertexCandidate::VertexLinkTest&)\r\n            1.0  .........      87.30 / 97.57        TwoTrackMinimumDistance::calculate(GlobalTrajectoryParameters const&, GlobalTrajectoryParameters const&) [185]\r\n            0.3  .........      21.68 / 132.91       __ieee754_log_avx [144]\r\n            0.0  .........       1.67 / 2.96         edm::refitem::GetRefPtrImpl<std::vector<reco::Track, std::allocator<reco::Track> >, reco::Track, edm::refhelper::FindUsingAdvance<std::vector<reco::Track, std::allocator<reco::Track> >, reco::Track>, unsigned int>::getRefPtr_(edm::RefCore const&, unsigned int) [2203]\r\n            0.0  .........       0.61 / 3.16         log [2161]\r\n            0.0  .........       0.20 / 0.21         edm::reftobase::Holder<reco::Track, edm::Ref<std::vector<reco::Track, std::allocator<reco::Track> >, reco::Track, edm::refhelper::FindUsingAdvance<std::vector<reco::Track, std::allocator<reco::Track> >, reco::Track> > >::getPtr() const [5773]\r\n            0.0  .........       0.10 / 0.12         TwoTrackMinimumDistance::distance() const [6931]\r\n            0.0  .........       0.09 / 97.25        __ieee754_atan2_avx [187]\r\n            0.0  .........       0.08 / 0.08         TwoTrackMinimumDistance::crossingPoint() const [7761]\r\n            0.0  .........       0.05 / 10.34        edm::reftobase::Holder<reco::Track, edm::Ref<std::vector<reco::Track, std::allocator<reco::Track> >, reco::Track, edm::refhelper::FindUsingAdvance<std::vector<reco::Track, std::allocator<reco::Track> >, reco::Track> > >::key() const [1493]\r\n            0.0  .........       0.04 / 49.53        _init [306]\r\n```\r\n\r\nafter:\r\n```\r\n[186]       1.1      96.53       3.82 / 92.71      PFDisplacedVertexCandidateFinder::link(edm::RefToBase<reco::Track> const&, edm::RefToBase<reco::Track> const&, double&, Point3DBase<float, GlobalTag>&, reco::PFDisplacedVertexCandidate::VertexLinkTest&)\r\n            1.1  .........      92.39 / 102.49       TwoTrackMinimumDistance::calculate(GlobalTrajectoryParameters const&, GlobalTrajectoryParameters const&) [178]\r\n            0.0  .........       0.17 / 0.18         TwoTrackMinimumDistance::distance() const [6143]\r\n            0.0  .........       0.07 / 10.12        edm::reftobase::Holder<reco::Track, edm::Ref<std::vector<reco::Track, std::allocator<reco::Track> >, reco::Track, edm::refhelper::FindUsingAdvance<std::vector<reco::Track, std::allocator<reco::Track> >, reco::Track> > >::key() const [1504]\r\n            0.0  .........       0.04 / 0.06         TwoTrackMinimumDistance::crossingPoint() const [8743]\r\n            0.0  .........       0.03 / 51.14        _init [296]\r\n```\r\n\r\nThe majority of time of `PFDisplacedVertexCandidateFinder::link` is now spent in `TwoTrackMinimumDistance::calculate` if I interpret the igprof output correctly. I think it could be useful to understand if there are algorithmic improvements available.\r\n\r\n#### if this PR is a backport please specify the original PR and why you need to backport that PR:\r\n\r\nA backport is not planned at this moment.", "branch": "master", "changed_files": 3, "closed_at": "1597900190", "comments": 55, "commits": 8, "created_at": "1597209155", "deletions": 73, "labels": ["analysis-approved", "code-checks-approved", "comparison-available", "fully-signed", "orp-approved", "reconstruction-approved", "tests-approved"], "merge_commit_sha": "4e8c85ebf5924197d29e59a2aa348d4fff6fd5f2", "merged_at": "1597900189", "merged_by": "qliphy", "milestone": "CMSSW_11_2_X", "number": 31121, "release-notes": [], "review_comments": 14, "state": "closed", "title": "optimize PFDisplacedVertexCandidateFinder::link", "updated_at": "1598004421", "user": "jpata"}