{"additions": 328, "auther_ref": "eventSetupLambda", "auther_sha": "4cd2a538ab8a0e5f695700351149bd1aaf702349", "author": "makortel", "body": "#### PR description:\r\n\r\nThis PR is work-in-progress to add support for lambda functions as an ESProducer produce function. Such a feature would be useful e.g. for an evolution of Alpaka ESProducer API. The user-facing API in this PR is along\r\n```cpp\r\nFooESProducer::FooESProducer(edm::ParameterSet const&) {\r\n  auto cc = setWhatProduced([&token_](FooRecord const& iRecord) {\r\n    auto const& input = iRecord.get(token_);\r\n    ...\r\n    return std::make_unique<Foo>(...);\r\n  });\r\n  token_ = cc.consumes();\r\n}\r\n```\r\nThere are several ways how the API could be improved, but those are left for future PRs (this functionality alone is sufficient for the Alpaka-related work, where this form of `setWhatProduced()` is not (necessarily) exposed to users).\r\n\r\nAs one would expect, any object with appropriate `operator()` can be used (which implies that standalone functions work too when wrapped into `std:function`).\r\n\r\nI'm opening this as a draft PR because this is my first attempt, and I'm unsure of some of the implementation details for which I need feedback.\r\n\r\n#### PR validation:\r\n\r\nFramework unit tests run.", "branch": "master", "changed_files": 4, "comments": 0, "commits": 2, "created_at": "1661277256", "deletions": 22, "labels": ["core-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-pending"], "milestone": "CMSSW_12_5_X", "number": 39156, "release-notes": [], "review_comments": 0, "state": "open", "title": "[WIP] Add support for lambda ESProducer produce functions", "updated_at": "1661277276", "user": "makortel"}