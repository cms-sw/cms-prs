{"additions": 426, "auther_ref": "eventSetupLambda", "auther_sha": "0c97ba057e9eadcdfc8df2afa006caacfbf18487", "author": "makortel", "body": "#### PR description:\r\n\r\nThis PR adds support for lambda functions as an ESProducer produce function. Such a feature would be useful e.g. for an evolution of Alpaka ESProducer API. The user-facing API in this PR is along\r\n```cpp\r\nFooESProducer::FooESProducer(edm::ParameterSet const&) {\r\n  auto cc = setWhatProduced([&token_](FooRecord const& iRecord) {\r\n    auto const& input = iRecord.get(token_);\r\n    ...\r\n    return std::make_unique<Foo>(...);\r\n  });\r\n  token_ = cc.consumes();\r\n}\r\n```\r\nThere are several ways how the API could be improved, but those are left for future PRs (this functionality alone is sufficient for the Alpaka-related work, where this form of `setWhatProduced()` is not (necessarily) exposed to users).\r\n\r\nAs one would expect, any object with appropriate `operator()` can be used (which implies that standalone functions work too when wrapped into `std:function`).\r\n\r\n~~I'm opening this as a draft PR because this is my first attempt, and I'm unsure of some of the implementation details for which I need feedback.~~\r\n\r\n#### PR validation:\r\n\r\nFramework unit tests run.", "branch": "master", "changed_files": 5, "comments": 13, "commits": 3, "created_at": "1661277256", "deletions": 23, "labels": ["core-pending", "pending-signatures", "orp-pending", "tests-started", "code-checks-approved"], "milestone": "CMSSW_12_6_X", "number": 39156, "release-notes": [], "review_comments": 17, "state": "open", "title": "Add support for lambda ESProducer produce functions", "updated_at": "1661713901", "user": "makortel"}