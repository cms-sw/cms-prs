{"additions": 55, "auther_ref": "fixPixelDigiSimLink", "auther_sha": "5c9b3f2bed8473cb8fe078e16b15d796eb31602b", "author": "makortel", "body": "I believe there is a subtle bug in how `PixelDigiSimLinks` are created. What happens is that if there are two `SimTracks` (say trackIds _a_ and _b_) from different pileup events (say _A_ and _B_) that induce signal to the same channel, the `EncodedEventId` of only one of them is saved (say _A_). It follows that the digi is linked to `SimTracks` with the ids _a_ and _b_ with the same `EncodedEventId` _A_, even though the link to `SimTrack` _b_ should have used `EncodedEventId` B. As a consequence some digis get linked to wrong `SimTracks`, and some `SimTrack`-links are missing. Also the `SimHit` index is affected in the same way as `EncodedEventId`.\n\nInterpreting the code (I'm not an expert), I believe the problem stems from\n- `SimTrack` ids are not unique within the full, mixed event (or so it seems)\n  - i.e. same id can appear in multiple pileup events (and signal event)\n- `SiPixelDigitizerAlgorithm::Amplitude` uses `SimHitInfoForLinks` ([link](https://github.com/cms-sw/cmssw/blob/CMSSW_8_1_X/SimTracker/SiPixelDigitizer/plugins/SiPixelDigitizerAlgorithm.h#L163))\n- `SimHitInfoForLinks` can store multiple `SimTrack` ids, but takes `EncodedEventId` (and `SimHit` index) only from the `SimHit` given to the constructor ([link](https://github.com/cms-sw/cmssw/blob/CMSSW_8_1_X/SimTracker/Common/interface/SimHitInfoForLinks.h))\n- when `Amplitudes` are added together, the `SimTrack` ids are appended, but the `EncodedEventId` and `SimHit` index are not changed in any way ([link](https://github.com/cms-sw/cmssw/blob/CMSSW_8_1_X/SimTracker/SiPixelDigitizer/plugins/SiPixelDigitizerAlgorithm.h#L124))\n\nIn addition, in `PixelDigiSimLink` creation ([link](https://github.com/cms-sw/cmssw/blob/CMSSW_8_1_X/SimTracker/SiPixelDigitizer/plugins/SiPixelDigitizerAlgorithm.cc#L1330)), when contributions from the same `SimTrack` are summed together, only `SimTrack` id is used (omitting `EncodedEventId`).\n\nThe main idea in my fix attempt is to, instead of storing only the ids of `SimTracks` inducing signal to a single channel, store also the `EncodedEventIds` and `SimHit` indices. I have applied the fix only to `SiPixelDigitizerAlgorithm`, but I suspect the phase2 digitizer to be also affected. I can try that too (or leave to phase2 digitizer experts if they prefer), but I'd like first to get a confirmation that my diagnosis above and the proposed fix are correct.\n\nTested in 8_1_0_pre6. The effect in tracker/tracking validation should be small though. For tracking, there should be no changes in noPU samples, while tiny changes may appear in PU samples (although I didn't observe any within runTheMatrix statistics). Pixel hit validation shows tiny changes already in noPU samples (most significantly the number of matched SimHits/RecHit increases).\n\n@rovere @VinInn @veszpv @venturia @mdhildreth \n", "branch": "CMSSW_8_1_X", "changed_files": 4, "closed_at": "1468992338", "comments": 8, "commits": 5, "created_at": "1468584543", "deletions": 56, "labels": ["comparison-available", "fully-signed", "orp-approved", "simulation-approved", "tests-approved"], "merge_commit_sha": "e2c8773bab12c5d82712d5be582c9952dcb8b94c", "merged_at": "1468992338", "merged_by": "cmsbuild", "milestone": "Next CMSSW_8_1_X", "number": 15212, "release-notes": [], "review_comments": 1, "state": "closed", "title": "Fix subtle bug in PixelDigiSimLink creation", "updated_at": "1468992339", "user": "makortel"}