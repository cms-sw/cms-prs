{"additions": 478, "auther_ref": "devel_CMSHLT3218", "auther_sha": "ba11d70596ee3860032346d910e2432846174e72", "author": "missirol", "body": "#### PR description:\r\n\r\nhttps://github.com/cms-sw/cmssw/issues/44940 was solved with a workaround, but it exposed a shortcoming of the L1T-emulation software, namely the fact that the `GlobalObjectMap` data format does not keep track of the BX values of the L1T objects firing a given L1T algorithm. At HLT, one instance of `GlobalObjectMap(Record)` is produced by running the emulation of the L1uGT (plugin: `L1TGlobalProducer`) in order to know the indices of the L1T objects that fired a given L1T algorithm. The main consumers of this information at HLT are the many instances of the `HLTL1TSeed` plugin, which add these L1T objects to the Event via `trigger::TriggerFilterObjectWithRefs`. Since `GlobalObjectMap` does not provide BX info, `HLTL1TSeed` currently assumes that all these indices refer to L1T objects in BX=0. This assumption is most often correct, because almost all L1T algorithms use only L1T objects assigned to BX=0. On the other hand, L1T algorithms using objects from different BXs do exist (e.g. Cosmics-During-Collisions triggers), and in that case said assumption fails (for more context, see https://github.com/cms-sw/cmssw/issues/44940#issuecomment-2132094439, [CMSHLT-3216](https://its.cern.ch/jira/browse/CMSHLT-3216) and [CMSHLT-3218](https://its.cern.ch/jira/browse/CMSHLT-3218)).\r\n\r\nThis PR aims to add BX info to the `GlobalObjectMap`, as a way to fully address the problem described above. The risk/reward ratio of this PR is arguably high: the problem in question has fairly minor consequences in the current HLT menu (only 1 seed is affected), while this PR touches heavily the L1uGT-emulation software, incl. a data format used in RAW data, requiring careful review and validation.\r\n\r\nShort description of the changes in this PR.\r\n - One data member of the `GlobalObjectMap` data format (nested vector of `int`s holding the indices of L1T objects) is replaced with a nested vector of `bx:index` pairs; backward compatibility with older version of this class is maintained via an `iorule` in `classes_def.xml`. The unit test introduced in #41565 is updated accordingly (if this PR is merged, there will have to be a follow-up PR to add to `cms-data` a new version of the unit-test input files).\r\n - Other classes used in the L1-uGT emulation (e.g. `ConditionEvaluation`) are updated in order to propagate downstream the BX values of the relevant L1T objects. This is done by changing the current vector of indices to a vector of `bx:index` pairs (these classes do not correspond to persistent data formats).\r\n - `HLTL1TSeed` is updated to make use of the BX value of the L1T objects, without assuming said BX to be zero. There is one exception to the latter point: in the case where the `GlobalObjectMap` used by `HLTL1TSeed` does not contain BX info (which can happen if one reads a `GlobalObjectMap` object directly from a file written before this PR), `HLTL1TSeed` will assumes that the BX is 0 (as it does now, in the absence of any alternatives). I do not know of any production workflows that rely on reading a `GlobalObjectMap` object from older files, so this exception should apply only in very rare cases (if at all).\r\n - https://github.com/cms-sw/cmssw/pull/46026 is reverted. While validating this PR, I came to the conclusion that #46026 should be reverted, see item b) in the validation section below.\r\n\r\n#### PR validation:\r\n\r\n`addOnTests.py`, `runTheMatrix.py -l 12834.0` and the unit tests of the affected packages passed.\r\n\r\na) Expected output for the problematic event in #44940. Using [1] with this PR, I see that the module `hltL1sCDC` adds the expected 2 muons to the Event (one from BX=-1, and one from BX=0); see the printout below, to be compared to the one in https://github.com/cms-sw/cmssw/issues/44940#issuecomment-2132094439.\r\n```text\r\n--------------------------------------------------\r\nRun             = 381147\r\nLuminosityBlock = 202\r\nEvent           = 351398133\r\n--------------------------------------------------\r\n\r\nTriggerResults = \"TriggerResults\" [2 Paths]\r\n\r\n   [0] | 0 | HLT_CDC_L2cosmic_10_er1p0_v10\r\n   [1] | 0 | HLTriggerFinalPath\r\n\r\n--------------------\r\n\r\nTriggerEvent = \"hltTriggerSummaryAOD::HLTX\" [3 Filters, 188 TriggerObjects]\r\n\r\n\r\n    [0] hltL1fL1sCDCL1Filtered0::HLTX (2 TriggerObjects)\r\n         [3] FilterId = -81 : pt =    4.000, eta =  0.370, phi =  2.880, id =   0\r\n         [4] FilterId = -81 : pt =    4.000, eta =  0.816, phi = -0.633, id =   0\r\n\r\n    [1] hltL1sCDC::HLTX (2 TriggerObjects)\r\n         [3] FilterId = -81 : pt =    4.000, eta =  0.370, phi =  2.880, id =   0\r\n         [4] FilterId = -81 : pt =    4.000, eta =  0.816, phi = -0.633, id =   0\r\n\r\n    [2] hltL2fL1sCDCL2CosmicMuL2Filtered3er2stations10er1p0::HLTX (0 TriggerObjects)\r\n```\r\n\r\nb) Revert of #46026: running [1] in `CMSSW_15_0_0_pre1`, I see that the emulated decision of the CDC seed `L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142` from the object-map used at HLT is `false` and disagrees with the 'firmware' decision in data (which is `true`). Reverting #46026 fixes this disagreement.\r\n\r\nc) Using the test in [2], one can verify that the TriggerObjects in `trigger::TriggerEvent` are exactly the same before and after this PR, except for the expected difference related to the CDC seed. It's worth noting that this test is limited to the pp menu and 200 input events.\r\n\r\n[1] Updated version of the test in https://github.com/cms-sw/cmssw/issues/44940#issuecomment-2131391510 on 1 event where the CDC seed fired during data-taking.\r\n```bash\r\n#!/bin/bash\r\n\r\n[ $# -ge 1 ] || exit 1\r\nhltLabel=\"${1}\"\r\n\r\nhltGetConfiguration /dev/CMSSW_14_2_0/GRun/V11 \\\r\n  --globaltag 141X_dataRun3_HLT_v2 \\\r\n  --no-prescale \\\r\n  --output minimal \\\r\n  --max-events 1 \\\r\n  --paths HLT_CDC_L2cosmic_10_er1p0_v*,HLTriggerFinalPath,HLTAnalyzerEndpath \\\r\n  --input root://eoscms.cern.ch//eos/cms/store/group/tsg/FOG/error_stream_root/run381147/run381147_ls0202_index000187_fu-c2b05-29-01_pid2159904.root \\\r\n  > \"${hltLabel}\".py\r\n\r\ncat <<@EOF >> \"${hltLabel}\".py\r\nprocess.options.numberOfThreads = 1\r\nprocess.options.numberOfStreams = 0\r\n\r\nprocess.source.skipEvents = cms.untracked.uint32( 56 )\r\n\r\ndel process.MessageLogger\r\nprocess.load(\"FWCore.MessageLogger.MessageLogger_cfi\")\r\nprocess.MessageLogger.L1TGlobalSummary = cms.untracked.PSet()\r\n\r\n# print the (unprescaled) emulated L1T decisions\r\nprocess.hltL1TGlobalSummaryEmul = process.hltL1TGlobalSummary.clone(\r\n    AlgInputTag = 'hltGtStage2ObjectMap',\r\n    ExtInputTag = 'hltGtStage2ObjectMap',\r\n)\r\nprocess.HLTAnalyzerEndpath += process.hltL1TGlobalSummaryEmul\r\n@EOF\r\n\r\ncmsRun \"${hltLabel}\".py &> \"${hltLabel}\".log\r\nmv output.root \"${hltLabel}\".root\r\n\r\n# script to print the TriggerObjects in an EDM file\r\nwget https://raw.githubusercontent.com/missirol/hltScripts/33d04bc85c5cb1581442ff5465904706ccb9b969/hltTests/hltFWLite_exa01.py -O printTriggerObjects.py\r\nchmod u+x printTriggerObjects.py\r\n./printTriggerObjects.py -n 1 -v 10 -i \"${hltLabel}\".root > \"${hltLabel}\"_triggerObjects.txt\r\nrm -f printTriggerObjects.py\r\n```\r\n\r\n[2] Test running the latest HLT pp menu on 200 events of 2024 HLTPhysics data.\r\n```bash\r\n#!/bin/bash\r\n\r\n[ $# -ge 1 ] || exit 1\r\nhltLabel=\"${1}\"\r\n\r\nhltGetConfiguration /dev/CMSSW_14_2_0/GRun/V11 \\\r\n  --globaltag 141X_dataRun3_HLT_v2 \\\r\n  --no-prescale \\\r\n  --output minimal \\\r\n  --max-events 200 \\\r\n  --input root://eoscms.cern.ch//eos/cms/store/user/cmsbuild/store/data/Run2024I/EphemeralHLTPhysics0/RAW/v1/000/386/593/00000/91a08676-199e-404c-9957-f72772ef1354.root \\\r\n  > \"${hltLabel}\".py\r\n\r\ncat <<@EOF >> \"${hltLabel}\".py\r\nprocess.options.numberOfThreads = 1\r\nprocess.options.numberOfStreams = 0\r\n@EOF\r\n\r\ncmsRun \"${hltLabel}\".py &> \"${hltLabel}\".log\r\nmv output.root \"${hltLabel}\".root\r\n\r\n# script to print the TriggerObjects in an EDM file\r\nwget https://raw.githubusercontent.com/missirol/hltScripts/33d04bc85c5cb1581442ff5465904706ccb9b969/hltTests/hltFWLite_exa01.py -O printTriggerObjects.py\r\nchmod u+x printTriggerObjects.py\r\n./printTriggerObjects.py -n -1 -v 10 -i \"${hltLabel}\".root > \"${hltLabel}\"_triggerObjects.txt\r\nrm -f printTriggerObjects.py\r\n```\r\n\r\n#### If this PR is a backport, please specify the original PR and why you need to backport that PR. If this PR will be backported, please specify to which release cycle the backport is meant for:\r\n\r\nN/A\r\n\r\nIf there is agreement on reverting #46026, that revert should arguably be backported to `CMSSW_14_2_X`.\r\n", "branch": "master", "changed_files": 31, "comments": 13, "commits": 2, "created_at": "1735400459", "deletions": 638, "labels": ["l1-pending", "hlt-pending", "pending-signatures", "tests-approved", "orp-pending", "code-checks-approved", "changes-dataformats"], "milestone": "CMSSW_15_0_X", "number": 47030, "release-notes": [], "review_comments": 1, "state": "open", "title": "add BX info to `GlobalObjectMap` (L1uGT emulation)", "updated_at": "1735889529", "user": "missirol"}