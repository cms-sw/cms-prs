{"additions": 57, "auther_ref": "aFewOptimizationsInTrackDetectorAssociator", "auther_sha": "e8e4a053356d83e5f44fc1df1412385d9348e2a2", "author": "perrotta", "body": "#### PR description:\r\n\r\nA few rather minor code optimizations are implemented for the TrackDetectorAssociator\r\nIn principle this should allow some little speed in computation, but I have to admit that it is barely visible in the performance tests I made\r\n\r\nNo changes in output are expected. However, there are a few local variables which were copied from a `float` into a local `double`, and then saved again as a `float`, and now they are consistently treated always as a `float`: I don't expect a possible regression also because of them, although it could show up in some remote case.\r\n\r\n#### PR validation:\r\n\r\nIt builds and runs succesfully in a few relevant workflows\r\n", "branch": "master", "changed_files": 3, "closed_at": "1603729802", "comments": 30, "commits": 3, "created_at": "1603432196", "deletions": 92, "labels": ["alca-approved", "code-checks-approved", "comparison-available", "fully-signed", "orp-approved", "reconstruction-approved", "tests-approved"], "merge_commit_sha": "f2ff02b2e845f096325f77f15717577adacbb763", "merged_at": "1603729802", "merged_by": "cmsbuild", "milestone": "CMSSW_11_2_X", "number": 31917, "release-notes": [], "review_comments": 7, "state": "closed", "title": "Add a few code optimizations in the TrackDetectorAssociator", "updated_at": "1603729803", "user": "perrotta"}