{"additions": 28, "auther_ref": "dqm-fix-merge-with-catch", "auther_sha": "76cb81dd962faa9980cc43e7858424a8567ef17c", "author": "schneiml", "body": "We saw failing merge jobs [1] due to Add() throwing on incompatible axis. Specifically, if bins have 0 width the axis checks can never succeed, while our tests accepted them. Instead of trying to replicate the ROOT behaviour 1:1, we resort to catching.\r\n\r\nCloser inspection shows this is a cascade of four potential bugs.\r\n- The check for axis compatibility in `DQMRootSource.cc` is not identical to the check done by ROOT. This allows `Add` to fail when we expect it to succeed.\r\n- The `CheckAxisLimits()` [2] check in ROOT _always_ fails if there is a zero-width bin, because it then uses a 0 epsilon in `AreEqualAbs` [3], which uses a less-than comparison. One or even both of these things can be considered bugs.\r\n- While `CheckConsistency()` should catch the exceptions thrown by `CheckAxisLimits()`, it seems a `FatalRootError` still makes it up to CMSSW. I don't see how that happens, but I have not checked the details.\r\n- The histogram `N_HE` from HCAL [4] uses some math to compute the axis range, which can lead to a 0-0 range (probably only in Phase2). This is most likely also a bug, and it is what triggers the chain of events.\r\n\r\nTo resolve this issue, I resorted to catching exceptions. This is not what we usually do, but the alternatives seem not much better:\r\n- We could copy-paste the checks from ROOT to make sure an exception never happens. But this is prone to diverge over time (maybe this is what happend here, I did not check ROOT version history). \r\n- We could simply fix `HcalRecHitsAnalyzer`, but that does not resolve the underlying problem.\r\n- We could wait for the ROOT team to resolve the issue, but that might take its time, while these failures are catastrophic to the DQMIO merge step (any merge job touching the problematic `N_HE` (and probably others) histogram will produce an ~empty result).\r\n\r\nI am open for better suggestions. Also cross-posting to the ROOT forum for help [5].\r\n\r\n[1] https://cms-unified.web.cern.ch/cms-unified//joblogs/ssawant_RVCMSSW_10_6_0_pre4ElectronGunPt2To100__2023D41noPU_190424_005155_567/8022/RecoFullGlobal_2023D41MergeDQMoutput/a97935fb-c204-4a88-b18c-8984a68cca65-0-4-logArchive/job/WMTaskSpace/cmsRun1/\r\n[2] https://root.cern.ch/doc/master/TH1_8cxx_source.html#l01532\r\n[3] https://root.cern.ch/doc/master/TMath_8h_source.html#l00412\r\n[4] https://cmssdt.cern.ch/dxr/CMSSW/source/DQMOffline/Hcal/src/HcalRecHitsAnalyzer.cc#140-143\r\n[5] https://root-forum.cern.ch/t/exceptions-on-th1-add/33973\r\n#### PR Vaildation:\r\n\r\nFixes the problem in question, using the affected input files. No further validation so far.", "branch": "master", "changed_files": 1, "closed_at": "1557472864", "comments": 21, "commits": 2, "created_at": "1557388127", "deletions": 15, "labels": ["code-checks-approved", "comparison-pending", "dqm-pending", "orp-pending", "pending-signatures", "tests-pending"], "milestone": "CMSSW_10_6_X", "number": 26722, "release-notes": [], "review_comments": 4, "state": "closed", "title": "Protect TH1::Add() with a catch", "updated_at": "1557472865", "user": "schneiml"}