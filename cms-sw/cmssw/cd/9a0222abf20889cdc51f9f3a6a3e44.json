{"additions": 6, "auther_ref": "EGRegHOverEFix_1410pre5", "auther_sha": "fd2862a2d00d0558488b7384bdc463e67a1770f7", "author": "Sam-Harper", "body": "#### PR description:\r\n\r\nThis is a bug fix PR which we also want to back port to 14_0_X\r\n\r\nThe electron energy regressions are erroneously using the energy regression corrected H/E and this PR fixes this. \r\n\r\nThere are two types of H/E in E/gamma,  cone based (hcalOverEcal) and single tower behind cluster (hcalOverEcalBc). Historically the hcalOverEcal is also adjusted when the corrected energy of the electron is adjusted, ie the E is the best estimate of the electron ecal only energy. \r\n\r\nWhen the H/E was being overhauled, hcalOverEcalBc was harmonised with this behaviour, it also got the energy correction\r\n\r\ncurrent:\r\nhttps://github.com/cms-sw/cmssw/blob/CMSSW_14_0_11/DataFormats/EgammaCandidates/src/GsfElectron.cc#L176-L190\r\nbefore:\r\nhttps://github.com/cms-sw/cmssw/blob/CMSSW_11_0_0/DataFormats/EgammaCandidates/src/GsfElectron.cc#L174-L184\r\n\r\nI can see why this was seen as reasonable at the time but it has a nasty consequence which is that the hcalOverEcalBc variable is used in the energy regression.  So when you go to apply the regression, you see the H/E value adjusted with the currently applied regression.  \r\n\r\nThis is bad as now its very difficult to reapply the regression. Because the H/E value includes the last regression. Also it makes the training bad because it has the wrong variable. \r\n\r\nin the training the H/E is after the current releases regression. But when you apply it in the release its based on the intermediate [ecal regression](https://github.com/cms-sw/cmssw/blob/CMSSW_14_0_0/RecoEgamma/EgammaElectronAlgos/src/GsfElectronAlgo.cc#L1125-L1128) which is completely unmaintained and as far as I'm aware has little to no effect (although possibly has some weak PF implications) as it very quickly gets overriden by the \"main\" energy regression.  So the variable the energy regression is trained on and the variable it is applied on is different.  And then you reapply it, you get a different answer again as the H/E already has the regression applied to it. \r\n\r\nThe UL Run2 regressions were trained on the uncorrected H/E variable and thus they are also getting wrong input variable. The 2022 Run3 regression was trained with the corrected H/E but a different correction to the one its seeing when its applied. The 2024 which are being developed should hopefully be with the uncorrected value. \r\n\r\nWe have the uncorrected H/E variable in the form of the full5x5_hcalOverEcal and full5x5_hcalOverEcalBc variables which are identical (due to how the showershape block works) but do not get the the correction. This PR moves it to that. \r\n\r\nWhile this is not the variable the 2022 regression was trained with, neither is the variable currently being applied. While it will fix the Run2 ones to their correct value.  I hope this can be back ported to 14_0_X as it is a bug fix. \r\n\r\nNote I left the ability to emulate the bug in if people really want but I dont think thats so necessary in my opinon. \r\n\r\n\r\n#### PR validation:\r\n\r\nTested locally and it gives the expected results. On going for the physics impact. For electrons it should mostly be the same and should have little change. Jets/badly measured electrons will have likely larger changes but expect it to  more or less changes from one randomish value to another so again limited physics impact just the values will change. \r\n\r\nRun the matrix i was getting a lot of DAS errors locally so easier just to test here. \r\n\r\n", "branch": "master", "changed_files": 2, "comments": 4, "commits": 1, "created_at": "1721127106", "deletions": 1, "labels": ["reconstruction-pending", "pending-signatures", "orp-pending", "tests-started", "code-checks-approved"], "milestone": "CMSSW_14_1_X", "number": 45470, "release-notes": [], "review_comments": 0, "state": "open", "title": "Use uncorrected H/E for electron energy regressions", "updated_at": "1721128338", "user": "Sam-Harper"}