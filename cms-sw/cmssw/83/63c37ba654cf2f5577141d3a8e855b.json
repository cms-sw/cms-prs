{"additions": 1, "auther_ref": "from-CMSSW_15_1_0_pre5", "auther_sha": "fe083ffa8c3983ba3dae8e03195546c6f290786e", "author": "dgaytanv", "body": "#### PR description:\r\n\r\nAdded check for fineCalo in setBoundaryCrossing to avoid double counting simTrack energy when fineCalo is on. Currently in CaloTrkProcessing we make a difference for calling setBoundaryCrossing by checking wether fineCalo is on or not, but this is not accounted for in Phase2SteppingAction, which causes setBoundaryCrossing to be called twice, once in Phase2SteppingAction and once in CaloTrkProcessing, which causes energy double counting behaviour. By adding a check to see if doFineCalo_ is set to false, we avoid this double calling.\r\n\r\n#### PR validation:\r\n\r\nAfter adding this check, I plotted the total simTrack energy per event and verified that the double counting behaviour was no longer happening.\r\n\r\n\r\n", "branch": "master", "changed_files": 1, "comments": 2, "commits": 1, "created_at": "1755597088", "deletions": 1, "labels": ["simulation-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-rejected"], "milestone": "CMSSW_15_1_X", "number": 48764, "release-notes": [], "review_comments": 0, "state": "open", "title": "fix simTrack energy double counting in Phase2SteppingAction.cc", "updated_at": "1755597304", "user": "dgaytanv"}