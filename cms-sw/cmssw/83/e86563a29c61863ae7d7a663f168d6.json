{"additions": 5, "auther_ref": "fixMuonTaggerMemory", "auther_sha": "81e239cd532dda25c4e9501f4080c3b85022b93e", "author": "mark-grimes", "body": "This pull request was originally to fix a memory leak seen in the JetTagProducer softPFMuonBJetTags when running at 200 pileup, the smallest line seen here (light green):\n\n![potentiallyleakingmodules200pu](https://cloud.githubusercontent.com/assets/6480160/6211110/f0c923be-b5d6-11e4-89d7-19afea21633a.png)\n\nOn inspection it looks like the random number generator wasn't behaving as expected though, since it was created new each time with the same seed.  Hence (presumably) that section of code will always give the same random number.  I changed to have it as a member so that the full sequence of numbers would be used.\n\nI've had to add it as a mutable member because the method where it's used is const.  6_2_X_SLHC has no multithreading so this shouldn't be an issue.  In 7_4_X this class appears to have had an overhaul (where incidentally the generator is a member too), so this fix will never go into a multithreaded branch.\n", "branch": "CMSSW_6_2_X_SLHC", "changed_files": 2, "closed_at": "1424190326", "comments": 5, "commits": 1, "created_at": "1424091574", "deletions": 4, "labels": ["comparison-pending", "orp-pending", "pending-signatures", "reconstruction-pending", "tests-approved"], "merge_commit_sha": "1d7f08e95fb622501a1f7be4de3228cc9551cb2a", "merged_at": "1424190326", "merged_by": "cmsbuild", "milestone": "Next CMSSW_6_2_X_SLHC", "number": 7755, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Fix memory leak in MuonTagger", "updated_at": "1426006031", "user": "mark-grimes"}