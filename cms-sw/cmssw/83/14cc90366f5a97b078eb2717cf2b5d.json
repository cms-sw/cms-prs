{"additions": 183, "auther_ref": "prop-fail-and-nans", "auther_sha": "6b042c763bf3a23e9bd290574e1db070ec766fb0", "author": "trackreco", "body": "### Changes\r\n\r\nAdded  MPlexQI MkBase::m_FailFlag (parent class of MkFinder). One has to\r\nmanually clear it when desired (before propagation).\r\n* Now only 0 and 1 are used ... could have differnt error codes, eg.\r\n  failed to reach, step too large, etc.\r\n\r\nThe fail-flag mplex is passed into all propagation and propaget+kalman_op\r\nfunctions (barrel and endcap - there was limited handling with forced restore\r\nfor barrel propagation before, state was not visible outside).\r\n* Are there some error states in KalmanOp? We could pass that in as well.\r\n\r\nAdded WSR_Failed as member of enum WithinSensitiveRegion_e\r\n* Handled in selectHitIndices() and findTracksCloneEngine() -> stop the candidate.\r\n\r\nWith this we can now stop also endcap tracks when they are about to reach\r\napex. Until now endcap tracks went on looping. Another check done is how large\r\nthe helix angle along the step was attempted (pi/2 forces error).\r\n* Other propToR/Z checks can be added / tried. fail codes, kamlnaOp fail\r\n\r\nIn backward fit the endcap fails are somewhat accidental -- trying to fix them\r\ndoes not really help as hits are already chosen. So we only do rollback in barrel.\r\n\r\n### Other things to check, maybe\r\n\r\nWe can probably remove \"can-reach-radius\" check in MkBuilder::fund_track_unroll_candidates()\r\n\r\nConfig::useTrigApprox = true now -- should we do false?\r\n* Was causing FPE in helixAtRFromIterativeCCS_impl()\r\n* Make iteration specific?\r\n* Test alpha of all tracks in vector unit?\r\n\r\nRetry backward-search with non-swapped first/second layers in the plan?\r\n  b-tagging efficiency / resolution / number of hits\r\n", "branch": "master", "changed_files": 14, "comments": 0, "commits": 1, "created_at": "1669995987", "deletions": 85, "labels": ["reconstruction-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-pending"], "milestone": "CMSSW_13_0_X", "number": 40226, "release-notes": [], "review_comments": 0, "state": "open", "title": "Make propagation failure state available in steering code", "updated_at": "1669996007", "user": "osschar"}