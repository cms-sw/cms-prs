{"additions": 72, "auther_ref": "properSignalForPathsAndConsumes", "auther_sha": "c5a164e61f4707e62ced6d327aa3667658822d55", "author": "wddgit", "body": "#### PR description:\r\n\r\nUse the new LookupInitializationComplete signal to get access to the PathsAndConsumesOfModules object that is available to Services. Previously the PreBeginJob signal was used for this purpose, but since PR #46929 was merged, the object is only partially filled at preBeginJob. When the new signal is emitted it is fully filled. PathsAndConsumesOfModules now includes information related to EventSetup modules that previously did not exist. That is the part that is not filled at preBeginJob.\r\n\r\nThis shouldn't affect the output of anything (except DependencyGraph service used with SubProcesses, see below).\r\n\r\nThis PR removes the argument from the preBeginJob signal interface. For several of the services modified in this PR, that argument is not used and the PR just deletes it from the argument list. These changes are trivial and the fact that those services compile should be a sufficient test.\r\n\r\nThis PR modifies other affected services to use the new signal.\r\n\r\n- A few services are used in Framework unit tests and those test pass with the changes in this PR.\r\n- DependencyGraph runs and produces a graph successfully. If one modifies it to run without SubProcesses, the output .gv file is identical before and after this PR. (Note that with SubProcesses the version of DependencyGraph before this PR has a bug that is fixed with the changes in this PR. The old version assumes the PostBeginRun signal is a \"local\" signal\" in ActivityRegistry but it is \"global\" so none of the SubProcess info is included in the .gv file that is output in the old version.)\r\n- FastTimerService is moved to the new signal and it looks like nothing should change in the output. There are many references to FastTimerService in CMSSW, but I don't see any unit test devoted to testing it. Is there an existing test of FastTimerService somewhere that I could run? Or is there an expert willing to test this? It is probably just a matter of running and checking the output is reasonable. Nothing should change.\r\n\r\nThere is one Service where the changes are more complex. That is the NVProfilerService. The PathsAndConsumesOfModules object is used to size some vectors at PreBeginJob. Not only is this case more complicated but the current implementation appears to be incorrect. There is a bug that could cause out of bounds vector access. The size of the ProcessCallGraph was being used to size the vectors, but that size could be incorrect if modules are deleted. The framework will delete unused modules. The ID from the ModuleDescription is incremented for every module constructed, including ones that are later deleted. This ID is not modified when a module is deleted. The index used to access the vector is the ID from the ModuleDescription, but in the old version the size is a count of undeleted modules from PathsAndConsumesOfModules and that does have deleted modules removed. This is fixed in the new version where the size is derived from the number of modules constructed and it counts the ones that later get deleted.\r\n\r\nNote that there are no tests in the CMSSW repository of NVProfilerService. In fact there are no references to it at all in CMSSW. Is there a test of NVProfilerService somewhere that I could run? Or is there an expert willing to test this?\r\n\r\nShould I develop tests for these two services? If necessary, this could be accomplished in a separate PR...\r\n\r\nResolves https://github.com/cms-sw/framework-team/issues/1194\r\n\r\n#### PR validation:\r\n\r\nRelied on existing unit tests which all pass.\r\n", "branch": "master", "changed_files": 33, "comments": 26, "commits": 1, "created_at": "1740589671", "deletions": 96, "labels": ["hlt-pending", "core-pending", "daq-pending", "pending-signatures", "tests-approved", "orp-pending", "hold", "code-checks-approved", "heterogeneous-pending"], "milestone": "CMSSW_15_1_X", "number": 47467, "release-notes": [], "review_comments": 0, "state": "open", "title": "Access PathsAndConsumesOfModules from new signal", "updated_at": "1740779888", "user": "wddgit"}