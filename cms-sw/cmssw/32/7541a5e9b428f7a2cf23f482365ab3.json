{"additions": 468, "auther_ref": "Navigation2", "auther_sha": "f86f3991e02cce2bf81cbc8c4dbc5e93b1f153d0", "author": "VinInn", "body": "replaces #3547 \n\nOn Friday Chris reported that\nTrackings use of DetLayer is inherently thread unsafe. The NavigationSchool is in the EventSetup but it gives non-const access to its internal DetLayers:\nhttps://cmssdt.cern.ch/SDT/lxr/source/TrackingTools/DetLayers/interface/NavigationSchool.h?v=CMSSW_7_1_X_2014-04-25-0200#028\nand those DetLayers are constantly being modified by other code:\nhttps://cmssdt.cern.ch/SDT/lxr/source/TrackingTools/DetLayers/src/NavigationSetter.cc?v=CMSSW_7_1_X_2014-04-25-0200#059\nIn addition, the DetLayers have internally a NavigableLayer\\* which they give non-const access to and call non-const methods on in its own const functions:\nhttps://cmssdt.cern.ch/SDT/lxr/source/TrackingTools/DetLayers/interface/DetLayer.h?v=CMSSW_7_1_X_2014-04-25-0200#050\nand to top it off, some types inheriting from NavigableLayer use mutables\nhttps://cmssdt.cern.ch/SDT/lxr/source/RecoTracker/TkNavigation/interface/SimpleNavigableLayer.h?v=CMSSW_7_1_X_2014-04-25-0200#042\nThe only way to deal with this now is to mark all modules which interact with DetLayers as thread-unsafe.\n\nAfter a week-end long of code analysis I come to the conclusion that the best solution will be:\nto create a vector of NavigableLayer const \\* in the NavigationSchool (or equivalent)\nusing DetLayer::seqNum as index.\nOne should them to manage to get the NavigationSchool everywhere \nnextLayers and compatibleLayers are invoked a trivial indirection will do the trick\n\nThis is \na) easy to find all calls to nextLayers and compatibleLayers.\nLabour intensive to percolate the navigation school. NOT error-prone\nb) quite logical, it will reassign the responsibility of navigation to the Navigation!\nc) No changes to configation (unless percolation fails)\n\nPlan there're is\n1) The infrastructure for both tracker and muon is trivial to build.\nI wil do it togehter with a couple of use case.\n\n2) at that point the Labour intensive part can be split in many pieces: it it just to find the way to percolate navigation scool and modify the calling sequence to \nnextLayers and compatibleLayers by few characters (litterally!)\n\n3) remove all mutable including the Navigation Setter.\nadd const here and there (maybe a couple of cost_cast in the NavigationSchool itself)\n\nDONE\n\nstatus : this PR\n\n1)\ndone for Base class, Simple, Cosmic and Muon and BeamHalo\ntested with properly modified already existing unit tests (now obsolete by deleted code)\n\n2)\ndone in CkfTrajectoryBuilder and Maker (+ partial in Conversion f/w/c TrBuilder)\none NavigationSetter gone!\n\nAt this point we can go in Parallel.\n\nMatti and Vincenzo shared work and finished\nall references to NavigationSetter are gone!\n\n3) Done, to be verified by core team\n\nNo regression expected\nNo regression observed\n", "branch": "CMSSW_7_1_X", "changed_files": 69, "closed_at": "1398964027", "comments": 11, "commits": 28, "created_at": "1398841744", "deletions": 711, "labels": ["comparison-available", "dqm-approved", "fully-signed", "reconstruction-approved", "tests-approved"], "merge_commit_sha": "55cfe2eecd16917cbdf1239e2933c907d57902e6", "merged_at": "1398964027", "merged_by": "ktf", "milestone": "CMSSW_7_1_0_pre8", "number": 3590, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Navigation2", "updated_at": "1492768317", "user": "VinInn"}