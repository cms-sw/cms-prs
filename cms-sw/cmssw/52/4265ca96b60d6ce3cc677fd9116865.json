{"additions": 156, "auther_ref": "CMSSW_8_0_0_pre4/sign651/memoryReduction-noM3", "auther_sha": "dcbb69976c0dac2a708a51d5ea6b46643faf05e2", "author": "slava77", "body": "candidate isolation, tau, puppi, and track-det associator.\n\nmost changes targeted the memory churn (MEM_TOTAL).\n\npuppi change ended up mostly CPU.\n\nOriginally developed in pre3 on top of  #12766based on production-like run of ttbar PU35@25ns (25202 without validation/dqm), there is a reduction of about 6% in event processing related  (::doEvent calls) MEM_TOTAL. There is also about 0.5% reduction in total reco+miniaod CPU as well (roughly split between tau and puppi).\nGains are smaller on 2015-like pileup, since most reduction in on algorithms with high combinatorial component (~PU^2 or worse).\n\ntested in CMSSW_8_0_0_pre4 : \n- no differences are observed in DQM or fwlite reco comparisons\n- time reduction consistent with tests in pre3 is present as well\n", "branch": "CMSSW_8_0_X", "changed_files": 14, "closed_at": "1450758784", "comments": 9, "commits": 9, "created_at": "1450545722", "deletions": 104, "labels": ["analysis-pending", "comparison-available", "orp-pending", "pending-signatures", "reconstruction-approved", "tests-approved"], "merge_commit_sha": "c0c043e87792763cee85f592535aeac5a18a0a11", "merged_at": "1450758784", "merged_by": "davidlange6", "milestone": "CMSSW_8_0_X", "number": 12833, "release-notes": [], "review_comments": 0, "state": "closed", "title": "memory churn reduction and some technical CPU minimization in reco", "updated_at": "1450758784", "user": "slava77"}