{"additions": 478, "auther_ref": "devel_hltFiltersDQMonitor", "auther_sha": "d984d97948e168dcef05059bd07bc41631cab82c", "author": "missirol", "body": "#### PR description:\r\n\r\nThis PR is meant as an improvement of the DQM plugin used to monitor the efficiencies of all HLT paths in a given HLT-Menu, as well as the efficiencies of the individual filters making up a given (HLT) path.\r\n\r\nCurrently, this monitoring is done by the plugin `GeneralHLTOffline`, which builds a set of histograms (`TH1F`s) counting how many times a given trigger fired, and how many times a given filter was executed.\r\n\r\nThe PR replaces `GeneralHLTOffline` with a new plugin named `HLTFiltersDQMonitor`, which serves the same purpose, but produces DQM outputs in a slightly different format.\r\nIn `HLTFiltersDQMonitor`, `TProfile`s are used to obtain efficiencies, of either a trigger path or an individual filter; this (i.e. using efficiencies via `TProfile`s instead of counts via `TH1F`s) allows to make comparisons straightforward between runs/samples with different number of events; using `TProfile`s also allows to have the efficiency estimates directly, i.e. without any dedicated harvesting of these DQM outputs (thanks to @schneiml for the suggestion to use `TProfile`s). More specifically, the new DQM outputs (under `HLT/Filters/`) include\r\n* one plot with the efficiencies of every path in the HLT menu\r\n* for every primary dataset (PD) associated to physics-related streams, a directory which contains (1) a plot with the efficiencies of the paths associated to that PD, and (2) a plot for every path, showing the efficiency of each individual filter making up the path.\r\n\r\nSince the PR changes the format of these DQM outputs (from counts to efficiencies), the comparisons will not be very meaningful; we will instead have to check the new outputs and verify that they are in agreement with expectations (an apples-to-apples comparison to the outputs of `GeneralHLTOffline` would not be possible anyway, because of a couple of fixes\r\nincluded in the new plugin, with respect to the old one).\r\n\r\nThe new plugin was validated with a number of local tests with MC, but it will be useful to check what happens when testing it on a larger scale during the PR review.\r\n\r\nThe changes in `test/` are mostly just renaming, for consistency, to accommodate for the new plugin (most of the configs in `test/` seem fairly old anyway).\r\n\r\nFYI @Sam-Harper @gennai\r\n\r\n#### PR validation:\r\n\r\nSuccessfully ran a few standard workflows, e.g. `runTheMatrix.py -l 11634.0`.", "branch": "master", "changed_files": 18, "closed_at": "1583764758", "comments": 21, "commits": 7, "created_at": "1583323172", "deletions": 780, "labels": ["code-checks-approved", "comparison-available", "dqm-approved", "fully-signed", "orp-approved", "tests-approved"], "merge_commit_sha": "7c4303c472726244e525280ef9f713879697f64b", "merged_at": "1583764758", "merged_by": "cmsbuild", "milestone": "CMSSW_11_1_X", "number": 29095, "release-notes": [], "review_comments": 0, "state": "closed", "title": "[DQMOffline/Trigger] improved DQM plugin for monitoring of HLT path/filter efficiencies", "updated_at": "1583764758", "user": "missirol"}