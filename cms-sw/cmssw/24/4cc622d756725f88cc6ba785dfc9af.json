{"additions": 29, "auther_ref": "SkipEmptyClusters", "auther_sha": "57e374599fa8b662848c56da0d1d67f81f64e530", "author": "kpedro88", "body": "During relval production for CMSSW_9_3_0_pre5, a crash was observed in `PFECALSuperClusterAlgo`. An [example config+log](http://cms-unified.web.cern.ch/cms-unified/joblogs/sandhya_RVCMSSW_9_3_0_pre5TTbar_14TeV_Timing__2023D17noPUTiming_170906_152309_28/139/RecoFullGlobal_Timing_2023D17/1a3ab292-9416-11e7-a633-02163e00d7b3-0-3-logArchive/cmsRun1/) was provided, which let me get a better stacktrace:\r\n```\r\n#0  0x00007fffad5b4675 in reco::CaloCluster::setCorrectedEnergy (this=0x7fff940785f0, cenergy=0)\r\n    at /cvmfs/cms.cern.ch/slc6_amd64_gcc630/cms/cmssw/CMSSW_9_3_0_pre5/src/DataFormats/CaloRecHit/interface/CaloCluster.h:112\r\n#1  PFECALSuperClusterAlgo::buildSuperCluster (this=this@entry=0x7fffa1082568, seed=..., clusters=std::vector of length 153, capacity 256 = {...})\r\n    at /uscms_data/d3/pedrok/phase2/hgcal/CMSSW_9_3_0_pre5/src/RecoEcal/EgammaClusterAlgos/src/PFECALSuperClusterAlgo.cc:494\r\n#2  0x00007fffad5b6628 in PFECALSuperClusterAlgo::buildAllSuperClusters (this=this@entry=0x7fffa1082568,\r\n    clusters=std::vector of length 153, capacity 256 = {...}, seedthresh=<optimized out>)\r\n    at /uscms_data/d3/pedrok/phase2/hgcal/CMSSW_9_3_0_pre5/src/RecoEcal/EgammaClusterAlgos/src/PFECALSuperClusterAlgo.cc:328\r\n#3  0x00007fffad5b704a in PFECALSuperClusterAlgo::run (this=this@entry=0x7fffa1082568)\r\n    at /uscms_data/d3/pedrok/phase2/hgcal/CMSSW_9_3_0_pre5/src/RecoEcal/EgammaClusterAlgos/src/PFECALSuperClusterAlgo.cc:314\r\n#4  0x00007fffa679b8f8 in PFECALSuperClusterProducer::produce (this=0x7fffa1082400, iEvent=..., iSetup=...)\r\n    at /uscms_data/d3/pedrok/phase2/hgcal/CMSSW_9_3_0_pre5/src/RecoEcal/EgammaClusterProducers/src/PFECALSuperClusterProducer.cc:187\r\n```\r\n\r\nUsing gdb, I found an apparent problem in frame 1:\r\n```\r\n(gdb) frame 1\r\n#1  PFECALSuperClusterAlgo::buildSuperCluster (this=this@entry=0x7fffa1082568, seed=..., clusters=std::vector of length 153, capacity 256 = {...})\r\n    at /uscms_data/d3/pedrok/phase2/hgcal/CMSSW_9_3_0_pre5/src/RecoEcal/EgammaClusterAlgos/src/PFECALSuperClusterAlgo.cc:494\r\n494       new_sc.setCorrectedEnergy(corrSCEnergy);\r\n(gdb) print new_sc\r\n$1 = {<reco::CaloCluster> = {_vptr.CaloCluster = 0x7ffff3f37580 <vtable for reco::SuperCluster+16>, energy_ = 0, correctedEnergy_ = -1,\r\n    correctedEnergyUncertainty_ = -1, position_ = {fCoordinates = {fX = -nan(0x8000000000000), fY = -nan(0x8000000000000), fZ = -nan(0x8000000000000)}},\r\n    caloID_ = {_vptr.CaloID = 0x7ffff3f374a8 <vtable for reco::CaloID+16>, detectors_ = 0}, hitsAndFractions_ = std::vector of length 0, capacity 0,\r\n    algoID_ = reco::CaloCluster::undefined, seedId_ = {static kDetOffset = 28, static kSubdetOffset = 25, id_ = 0}, flags_ = 0,\r\n    static flagsMask_ = 268435455, static flagsOffset_ = 28}, seed_ = {core_ = {cachePtr_ = {_M_b = {_M_p = 0x0}}, processIndex_ = 0, productIndex_ = 0},\r\n    key_ = 18446744073709551615}, clusters_ = {<edm::PtrVectorBase> = {<No data fields>}, <No data fields>},\r\n  preshowerClusters_ = {<edm::PtrVectorBase> = {<No data fields>}, <No data fields>}, preshowerEnergy_ = 0, rawEnergy_ = 0, phiWidth_ = 0, etaWidth_ = 0,\r\n  preshowerEnergy1_ = 0, preshowerEnergy2_ = 0}\r\n(gdb) print clustered\r\n$6 = std::vector of length 0, capacity 0\r\n```\r\n\r\nThis leads to divide by 0 problems, so the cluster has nan coordinates and no energy. I also turned on the verbose output and saw this:\r\n```\r\nDumping cluster detail  Passed seed: e = 5.18964 eta = -2.24025 phi = 2.99611\r\n        Clustered cluster: e = 5.18964 eta = -2.24025 phi = 2.99611\r\n    Non-Clustered cluster: e = 0.0662978 eta = -1.71095 phi = -1.38067\r\n...\r\nDumping cluster detail  Passed seed: e = 0.0662978 eta = -1.71095 phi = -1.38067\r\n    Non-Clustered cluster: e = 0.0662978 eta = -1.71095 phi = -1.38067\r\n```\r\n\r\nSomehow the algorithm ends up in a state where everything is a \"non-clustered cluster\", so the assumption that there's a \"clustered cluster\" to start the new supercluster is violated. Further description from @rovere:\r\n>Ok, I have some more details about the crash.\r\nWe have an HGCAL cluster whose energy/uncalib_energy are: E: 3.21491\r\nUE: 0.0662978, respectively.\r\nNow, the logic of SC is that all clusters are first ordered by Et (in\r\nthis case Et uses the Energy to order the clusters), and this little\r\ncluster sits quite high in the final vector since it has a ptfast of\r\n1.1251, thanks to its relatively high energy.\r\nAfter that, the clusters are stable_partitioned so that all clusters\r\nabove a threshold are promoted to be seeds for a possible SC. The\r\nthreshold is 1 GeV and is applied on Et (of ptfast, if you prefer) so\r\nthis little guy passes the selection and happily becomes a seed\r\ncandidate.\r\nAfter that, the clusters are again stable_partitioned so that all\r\nclusters within the dyn window of the mustache algorithm for the\r\nspecific seed under consideration appear first. The problem is that in\r\ndoing this partitioning, this little guy is rejected, i.e. it is not\r\npart of the SC it is seeding! And that's because in the mustache\r\nalgorithm there is this nice line[1] that is using the\r\n**uncalibrated** energy as input. In this, maybe extremely unlucky\r\ncase, its value is 0.066XXX which is below the allowed (and **not\r\nprotected**) value of 0.07943XX that makes the sqrt negative, hence\r\nquite a bit of nan, and the following logic simply does not hold any\r\nlonger, since the seed itself is not part of the SC.\r\n[1]\r\nhttps://github.com/cms-sw/cmssw/blob/master/RecoEcal/EgammaCoreTools/src/Mustache.cc#L38\r\n\r\nFor now, we just discard such clusters to let the algorithm progress. Eventually, for HGCal we should set uncalibrated energy equal to calibrated energy, and consider the consistency of the clustering algorithms in terms of which quantity they use.\r\n\r\nThis PR is critical for HGCal TDR production, so will be backported to 93X.\r\n\r\nattn: @cseez, @bendavid, @felicepantaleo ", "branch": "master", "changed_files": 6, "closed_at": "1505323954", "comments": 45, "commits": 5, "created_at": "1505133958", "deletions": 6, "labels": ["code-checks-approved", "comparison-available", "fully-signed", "orp-approved", "reconstruction-approved", "tests-approved", "upgrade-approved"], "merge_commit_sha": "9aca40443a0423db70e6bc07a0240b27cec1f6da", "merged_at": "1505323954", "merged_by": "cmsbuild", "milestone": "CMSSW_9_4_X", "number": 20458, "release-notes": [], "review_comments": 6, "state": "closed", "title": "reject seed candidates not part of superclusters", "updated_at": "1505323955", "user": "kpedro88"}