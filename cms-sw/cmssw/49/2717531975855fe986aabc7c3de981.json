{"additions": 49, "auther_ref": "SpeedupStripPremix", "auther_sha": "3152ed71fd0bab666c3e7a2f86efa075191f3338", "author": "VinInn", "body": "PreMixingSiStripWorker is a major contribution to the time spent in the Premixing Module.\r\nsee http://innocent.web.cern.ch/innocent/perfResults/igprof-navigator/digiDebug1T_ori_CMSSW_13_0_X_2023-01-21-1100_slc7_amd64_gcc11/26\r\n\r\nthese trivial changes reduce the time spent in  ```SiStripFedZeroSuppression::suppress```\r\nby almost a factor 3. \r\nSome minor additional speed up could be obtained with some restructuring of the class content.\r\nI also took the opportunity to make some math consistent in single precision float (and remove a division)\r\nsee http://innocent.web.cern.ch/innocent/perfResults/igprof-navigator/digiDebug1T_speedStrip2_CMSSW_13_0_X_2023-01-24-1100_slc7_amd64_gcc11/26\r\n\r\npurely technical, no regression expected.\r\n\r\nI'm under the impression that using a single-precision random number generator may speed up all those gaussian noise generators by a large amount.\r\nI think that this would require a dedicated \"project\".\r\n\r\n", "branch": "master", "changed_files": 4, "comments": 4, "commits": 4, "created_at": "1674637040", "deletions": 50, "labels": ["reconstruction-pending", "simulation-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-pending", "trk"], "milestone": "CMSSW_13_0_X", "number": 40609, "release-notes": [], "review_comments": 0, "state": "open", "title": "Speedup strip premix", "updated_at": "1674652183", "user": "VinInn"}