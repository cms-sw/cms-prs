{"additions": 69, "auther_ref": "devel_CMSHLT3366", "auther_sha": "faa32128584c39ad096215a0e47d4b9ebc96703b", "author": "missirol", "body": "#### PR description:\r\n\r\n[CMSHLT-3366](https://its.cern.ch/jira/browse/CMSHLT-3366) discusses one event with long processing time at HLT (~9 minutes online). It looks like most of this time is spent in the method `RedundantSeedCleaner::clean` (which is called from `RedundantSeedCleaner::define`, which in turn is called from `TrackerSeedCleaner::clean`).\r\n\r\nThis PR includes small technical changes to make the method in question faster (`RedundantSeedCleaner` is removed, and the relevant function is integrated in `TrackerSeedCleaner` itself). In the simplified example in [1] based on [CMSHLT-3366](https://its.cern.ch/jira/browse/CMSHLT-3366), the instance in question of `TSGFromL2Muon` takes ~700 seconds pre-PR, and ~300 seconds post-PR.\r\n\r\nMerely technical. No changes to physics outputs expected.\r\n\r\n#### PR validation:\r\n\r\nUsing [2] to print properties of the seeds post-cleaning using the test in [1], one gets exactly the same printout before and after this PR. \r\n\r\n[1]\r\n```bash\r\n#!/bin/bash\r\n\r\nhltLabel=hlt\r\n[ $# -lt 1 ] || hltLabel=\"${1}\"\r\n\r\nhltGetConfiguration /dev/CMSSW_14_2_0/GRun/V11 \\\r\n  --input root://eoscms.cern.ch//eos/cms/store/group/tsg/FOG/debug/241014_run386917/hlt-slow-event/run386917_ls0306_index000115.root \\\r\n  --data \\\r\n  --globaltag 141X_dataRun3_HLT_v2 \\\r\n  --output minimal \\\r\n  --no-prescale \\\r\n  --max-events 1 \\\r\n  --timing \\\r\n  --path HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_v* \\\r\n  > \"${hltLabel}\".py\r\n\r\ncat <<@EOF >> \"${hltLabel}\".py\r\ndel process.MessageLogger\r\nprocess.load(\"FWCore.MessageLogger.MessageLogger_cfi\")\r\n\r\nprocess.source.skipEvents = cms.untracked.uint32( 91 )\r\n\r\nprocess.options.numberOfThreads = 1\r\nprocess.options.numberOfStreams = 0\r\n@EOF\r\n\r\ncmsRun \"${hltLabel}\".py &> \"${hltLabel}\".log\r\nmv output.root \"${hltLabel}\".root\r\n```\r\n\r\n[2]\r\n```diff\r\ndiff --git a/RecoMuon/TrackerSeedGenerator/src/TrackerSeedCleaner.cc b/RecoMuon/TrackerSeedGenerator/src/TrackerSeedCleaner.cc\r\nindex 029e8b47ad7..4b09c7bffd8 100644\r\n--- a/RecoMuon/TrackerSeedGenerator/src/TrackerSeedCleaner.cc\r\n+++ b/RecoMuon/TrackerSeedGenerator/src/TrackerSeedCleaner.cc\r\n@@ -54,6 +54,10 @@ void TrackerSeedCleaner::clean(const reco::TrackRef& muR,\r\n   if (cleanBySharedHits)\r\n     removeRedundantSeeds(seeds);\r\n \r\n+  for (auto const& seed : seeds) {\r\n+     edm::LogPrint(\"TSC\") << \"TSC \" << seed.nHits() << \" \" << seed.startingState().detId() << \" \" << seed.startingState().pt() << \" \" << seed.direction();\r\n+  }\r\n+\r\n   theTTRHBuilder = theProxyService->eventSetup().getHandle(theTTRHBuilderToken);\r\n \r\n   LogDebug(\"TrackerSeedCleaner\") << seeds.size() << \" trajectory seeds to the events before cleaning\" << endl;\r\n```\r\n\r\n#### If this PR is a backport, please specify the original PR and why you need to backport that PR. If this PR will be backported, please specify to which release cycle the backport is meant for:\r\n\r\nN/A\r\n", "branch": "master", "changed_files": 4, "comments": 4, "commits": 1, "created_at": "1734887905", "deletions": 140, "labels": ["reconstruction-pending", "pending-signatures", "orp-pending", "tests-started", "code-checks-approved"], "milestone": "CMSSW_15_0_X", "number": 47023, "release-notes": [], "review_comments": 0, "state": "open", "title": "speed up shared-hits cleaning in `TrackerSeedCleaner`", "updated_at": "1734947282", "user": "missirol"}