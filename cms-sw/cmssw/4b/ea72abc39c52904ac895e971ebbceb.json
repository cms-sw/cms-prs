{"additions": 4, "auther_ref": "EcalDigi-sign-correctness", "auther_sha": "108569151b4367aae6ee96666623dd6e7b70150a", "author": "dan131riley", "body": "#### PR description:\r\n\r\nWe are getting compilation warnings from nvcc on aarch64:\r\n\r\n```\r\n  src/DataFormats/EcalDigi/interface/EcalMatacqDigi.h(279): warning #68-D: integer conversion resulted in a change of sign\r\n       triggerType_ = -1;\r\n                     ^\r\n  src/DataFormats/EcalDigi/interface/EcalMatacqDigi.h(287): warning #68-D: integer conversion resulted in a change of sign\r\n       attenuation_dB_ = -1;\r\n```\r\nThese are being produced because those data members are declared as type `char`, which does not have a defined signedness, and nvcc on aarch64 defaults to unsigned char.  This PR changes those values to an explicitly signed type `int8_t`.  I'd consider this a real bug, as making assumptions about whether `char` is signed or not can lead to genuine logic errors.\r\n\r\nThis change does require incrementing the ClassVersion.\r\n\r\nAs an aside: since the other member data in this DataFormat use ROOT types, I considered using a signed char ROOT type--but they don't have one!  `Char_t` claims to be signed, but it is a typedef for bare `char`, so the ROOT type has exactly the same bug of assuming that `char` has a well-defined signedness.  Issue opened at https://github.com/root-project/root/issues/15927 (which I expect will be ignored, as it will open a can of worms).\r\n\r\n#### PR validation:\r\n\r\nCompiles, trivial technical change except that it does bump the ClassVersion.", "branch": "master", "changed_files": 2, "comments": 10, "commits": 1, "created_at": "1719313009", "deletions": 3, "labels": ["simulation-approved", "fully-signed", "tests-approved", "orp-pending", "code-checks-approved", "ecal"], "milestone": "CMSSW_14_1_X", "number": 45303, "release-notes": [], "review_comments": 0, "state": "open", "title": "DataFormats/EcalDigi: change triggerType_ and attenuation_dB_ to explicitly signed types", "updated_at": "1719375592", "user": "dan131riley"}