{"additions": 6, "auther_ref": "revertModulesUsingTGraphFitToLegacy", "auther_sha": "e6ea129327b4c2f8063040b882fbfe2820f84c78", "author": "Dr15Jones", "body": "ROOT's underlying implementation of TGraph::Fit is not thread safe\nso we must avoid having more than one module calling it at one time.\nThe static analyzer determined the following code paths linking modules\nto TGraph::Fit\nESRecHitProducer::produce();  ESRecHitWorkerBaseClass::run();  ESRecHitWorker::run();  ESRecHitFitAlgo::reconstruct() const;  ESRecHitFitAlgo::EvalAmplitude() const;  TGraph::Fit();\nEcalUncalibRecHitProducer::produce();  EcalUncalibRecHitWorkerBaseClass::run();  EcalUncalibRecHitWorkerAnalFit::run();  EcalUncalibRecHitRecAnalFitAlgo<EBDataFrame>::makeRecHit();  TGraph::Fit();\nin both cases, the module is linked to TGraph::Fit via a class which inherits\nfrom a base class which the module uses. To fix this problem we either\n1) wait till ROOT makes TGraph::Fit thread safe\n2) drop the use of the inheriting class using TGraph::Fit.\n", "branch": "CMSSW_7_1_X", "changed_files": 2, "closed_at": "1398951195", "comments": 6, "commits": 1, "created_at": "1398883744", "deletions": 6, "labels": ["comparison-available", "fully-signed", "reconstruction-approved", "tests-approved"], "merge_commit_sha": "576452a6981fcc1ab1c00f50a40b0a1f23a4f6f9", "merged_at": "1398951195", "merged_by": "ktf", "milestone": "CMSSW_7_1_0_pre8", "number": 3623, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Reverted modules using TGraph::Fit back to legacy edm::Producer", "updated_at": "1399391486", "user": "Dr15Jones"}