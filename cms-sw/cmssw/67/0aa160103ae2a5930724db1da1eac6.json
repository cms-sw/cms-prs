{"additions": 423, "auther_ref": "mm_devel_130X_modernizeCalibTrackerSiStripHitEfficiency", "auther_sha": "8307e38118ad0e2f37e352fb3bb32ea5e40324ee", "author": "mmusich", "body": "backport of #41065\r\nbackport of #41050\r\nbackport of #40963\r\n\r\n#### PR description:\r\n\r\nThe goal of this PR is to  backport for 2023 data-taking several fixes and improvements proposed in the master branch for the `CalibTracker/SiStripHitEfficiency` package.\r\n\r\n   * 76c3ff3ded5f8e6220ed8180f2610bd57fd9e9f1: resolved the SIGSEV issues observed in the master ASAN_X IBs: [here](https://cmssdt.cern.ch/SDT/cgi-bin/logreader/el8_amd64_gcc11/CMSSW_13_1_ASAN_X_2023-03-03-2300/unitTestLogs/CalibTracker/SiStripHitEfficiency#/11472-11472) for `CalibTracker/SiStripHitEfficiency`\r\n   * 13a7f1b5fd20d9407be710db57851326b8b4e11f: apply CMS code rules in `SiStripHitEffFromCalibTree`\r\n   * 4ad02441cff5752b684d9a0b28e873fd9cb59e0f : remove unused methods\r\n   * b40891c216bc65b8f0e64bdd87218b8b28cdfba9 : range based loops in `StripHitEffFromCalibTree`\r\n   * ec62881a1d1d18cff5b956e495cab8ec66e94839 : implements in `SiStripHitEfficiencyHarvester` a generic function for summary plots of efficiency trends per layer vs variable (PU, inst. lumi, bx number) This will show up directly in the GUI efficiency plots vs event quantities.\r\n   * 70466342ae1b803c852c21f9d752d0590cfd0980 : introduces a more refined error treatment in trend of efficiency vs lumi, PU and BX in `SiStripHitEfficiencyHarvester`, using Clopper-Pearson confidence interval instead of naive binomial errors.\r\n   * 70466342ae1b803c852c21f9d752d0590cfd0980 : use uniform convention for data-members in `SiStripHitEffFromCalibTree`\r\n   * 8307e38118ad0e2f37e352fb3bb32ea5e40324ee : direct initialization of `subdetfound` and `subdettotal`\r\n\r\n#### PR validation:\r\n\r\n`cmssw compiles`\r\n\r\nThe following command:\r\n\r\n```\r\ncmsDriver.py stepHarvest -s ALCAHARVEST:SiStripHitEff --conditions 124X_dataRun3_Express_v9 --scenario pp --data --era Run3 --dasquery='file dataset=/StreamExpress/Run2022G-PromptCalibProdSiStripHitEff-Express-v1/ALCAPROMPT run=362437' -n -1 --customise_commands='process.alcasiStripHitEfficiencyHarvester.isAtPCL = cms.bool (False)'\r\n```\r\n\r\nruns fine.\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nCombined backport of #41065, #41050, #40963: needed for 2023 data-taking. ", "branch": "CMSSW_13_0_X", "changed_files": 6, "comments": 1, "commits": 9, "created_at": "1679472978", "deletions": 283, "labels": ["alca-pending", "pending-signatures", "tests-pending", "orp-pending", "backport-ok", "trk"], "milestone": "CMSSW_13_0_X", "number": 41126, "release-notes": [], "review_comments": 0, "state": "open", "title": "[13_0_X] Combined backport of developments in `CalibTracker/SiStripHitEfficiency`", "updated_at": "1679473021", "user": "mmusich"}