{"additions": 43, "auther_ref": "mm_dev_migrate_calotowers_EcalPFRecHitThresholds", "auther_sha": "beb3a90b5c0261f184f27b4111f7df0a2d0a16ab", "author": "mmusich", "body": "#### PR description:\r\n\r\nThis PR the ECAL equivalent of https://github.com/cms-sw/cmssw/pull/43329. \r\nWhile our final aim is to fully deprecate calotowers, there is no clear ETA for that. Several POGs still use calotowers, specially at HLT. So, to ensure that correct HCAL thresholds are used in making calotowers, the safest way is to use the thresholds from GT.\r\nThat is what is done in this PR. \r\nThis PR was sparked by the observation that at the HLT we are using the following configuration:\r\n\r\n```python\r\nEBThreshold = cms.double( 0.07 )\r\nEEThreshold = cms.double( 0.3 )\r\n```\r\n\r\nwhich looks exceedingly low given that 0.3 GeV threshold in EE for all crystals is too small threshold to mitigate the noise in EE.\r\nThere are crystals in EE where the threshold is order of 10 GeV (reaching up to ~50 GeV or maybe even higher these days).\r\nIndeed inspecting the last IOV of the `EcalPFRecHitThresholdsRcd` associated tag at HLT,\r\n\r\n```\r\n$ conddb list 140X_dataRun3_HLT_v3 | grep EcalPFRecHitThresholdsRcd\r\n[2024-08-26 10:47:34,394] INFO: Connecting to pro [frontier://PromptProd/cms_conditions]\r\nEcalPFRecHitThresholdsRcd                               -                                                 EcalPFRecHitThresholds_2018_v1_hlt                               \r\n\r\n$ conddb list EcalPFRecHitThresholds_2018_v1_hlt\r\n[2024-08-26 10:47:48,292] INFO: Connecting to pro [frontier://PromptProd/cms_conditions]\r\n[2024-08-26 10:47:48,471] INFO: Listing with a limit of 500 IOVs, starting from the highest since. If you need to see more, please increase the limit of returned results.\r\nSince: Run   Insertion Time       Payload                                   Object Type                      \r\n-----------  -------------------  ----------------------------------------  ------------------------------   \r\n1            2018-03-28 14:25:39  9f22e391bcdcabe1f9f13608961bbed938c8a05c  EcalCondObjectContainer<float>   \r\n337349       2020-09-24 08:42:44  f965e090d8749785f3d9c290bb08f247b90bd9fe  EcalCondObjectContainer<float>   \r\n347532       2022-02-10 10:03:50  6bf33ca11214dec349a05af31b1f4af8526ffb30  EcalCondObjectContainer<float>   \r\n \r\n$ conddb dump 6bf33ca11214dec349a05af31b1f4af8526ffb30 > dump.xml \r\n```\r\n\r\nI see rather large thresholds especially in EE:\r\n\r\n![Screenshot from 2024-08-26 10-46-58](https://github.com/user-attachments/assets/78be4105-e178-4c66-9fc4-082bae68656a)\r\n\r\nThis PR allows to change the logic of the code to use the `EcalPFRecHitThresholds` from GT instead of the fixed values.\r\n\r\n#### PR validation:\r\n\r\nValidation was purely technical: `runTheMatrix.py - l limited --ibeos`.\r\nPhysics implications should be checked by the relevant POGs, thus I am opening the PR as draft.\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nN/A\r\n", "branch": "master", "changed_files": 4, "comments": 7, "commits": 1, "created_at": "1724681999", "deletions": 11, "labels": ["reconstruction-pending", "pending-signatures", "tests-approved", "orp-pending", "code-checks-approved"], "milestone": "CMSSW_14_2_X", "number": 45803, "release-notes": [], "review_comments": 2, "state": "open", "title": "migrate calotowers creation code  to use `EcalPFRecHitThresholds`", "updated_at": "1724908385", "user": "mmusich"}