{"additions": 117, "auther_ref": "test_user_defined_ROOT_streamer", "auther_sha": "ceab451440eb27ae2539e8cf745529416118f7e6", "author": "fwyzard", "body": "#### PR description:\r\n\r\nImplement ROOT read rules for `PortableHostCollection` instantiations.\r\n\r\nThese replace the user-defined read rules in the XML file\r\n```xml\r\n  <read\r\n    sourceClass=\"portabletest::TestHostCollection\"\r\n    targetClass=\"portabletest::TestHostCollection\"\r\n    version=\"[1-]\"\r\n    source=\"portabletest::TestSoA layout_;\"\r\n    target=\"buffer_,layout_,view_\"\r\n    embed=\"false\">\r\n  <![CDATA[\r\n    portabletest::TestHostCollection::ROOTReadStreamer(newObj, onfile.layout_);\r\n  ]]>\r\n  </read>\r\n```\r\nwith a macro-based C++ implementation in `DataFormats/PortableTestObjects/src/classes.cc`:\r\n```c++\r\n#include \"DataFormats/Portable/interface/PortableHostCollectionReadRules.h\"\r\n#include \"DataFormats/PortableTestObjects/interface/TestHostCollection.h\"\r\n\r\nSET_PORTABLEHOSTCOLLECTION_READ_RULES(portabletest::TestHostCollection);\r\n```\r\n\r\n#### PR validation:\r\n\r\nThe `HeterogeneousCore/AlpakaTest/test/testHeterogeneousCoreAlpakaTestWriteRead.sh` unit test pass:\r\n  - the `portabletest::TestHostCollection` is written to a ROOT file;\r\n  - it is read back from the ROOT file using the user-defined streamer function;\r\n  - the validation checks pass.\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR.\r\n\r\nBackport of #43219 to CMSSW_13_3_X.", "branch": "CMSSW_13_3_X", "changed_files": 6, "comments": 7, "commits": 4, "created_at": "1699547922", "deletions": 15, "labels": ["fully-signed", "tests-approved", "orp-pending", "backport", "heterogeneous-approved"], "milestone": "CMSSW_13_3_X", "number": 43241, "release-notes": [], "review_comments": 0, "state": "open", "title": "Implement ROOT read rules for PortableHostCollection [13.3.x]", "updated_at": "1699561757", "user": "fwyzard"}