{"additions": 6466, "auther_ref": "patatrack_integration_9_N_pixel_local_reco", "auther_sha": "2e8e5fd76b0dbfb8abf86ba42de0615ef1e70918", "author": "cms-patatrack", "body": "#### PR description:\r\n\r\nData formats and algorithms for the Pixel local reconstruction running on GPU.\r\nIncludes the Pixel unpacking, clustering, up to the rechits.\r\nIncludes the relevant changes to the Pixel validation sequences.\r\n\r\nSome documentation about the pixel local reconstruction implementation in Patatrack can be found in these presentations:\r\n  - 3 September 2019: Patatrack Meeting, [A fully Heterogeneous Pixel Reconstruction](https://indico.cern.ch/event/845239/contributions/3549769/)\r\n  - 12 December 2020: Patatrack Tracker/Tracking Knowledge Transfer, [Patatrack Local Reconstruction](https://indico.cern.ch/event/863657/#4-patatrack-local-reconstructi)\r\n  - 7 May 2020, Tracker DPG Workshop, [A fully Heterogeneous Pixel Reconstruction](https://indico.cern.ch/event/914013/contributions/3845243/)\r\n\r\n#32483 lists open issues to be followed up after the integration of this PR.\r\n\r\n#### PR validation:\r\n\r\nChanges in use in the Patatrack releases.\r\n\r\n#### if this PR is a backport please specify the original PR and why you need to backport that PR:\r\n\r\nIncludes changes from:\r\n  - cms-patatrack#14 R2D: use GPU::SimpleVector for the error unpacking\r\n  - cms-patatrack#18 GPU2CPU for clusters and RecHIts\r\n  - cms-patatrack#20 Add workflows for Riemann fit and GPU\r\n  - cms-patatrack#21 Remove debug messages\r\n  - cms-patatrack#29 Remove -O2/-O3 from CUDA flags\r\n  - cms-patatrack#31 Use the `gpu` modifier to read the pixel clusters from the unpacker\r\n  - cms-patatrack#47 Remove the use of #pragma once\r\n  - cms-patatrack#49 Clean up some GPU- and non-GPU-related pixel tracking code\r\n  - cms-patatrack#62 Implement a Heterogeneous version of Raw2Cluster and RecHit\r\n  - cms-patatrack#68 Faster clustering, now does not requires to know number of modules\r\n  - cms-patatrack#77 Prototype for EventSetup data on GPUs\r\n  - cms-patatrack#81 Migrated PixelRecHit to Heterogeneous producer\r\n  - cms-patatrack#87 Various fixes and cleanup\r\n  - cms-patatrack#100 Next prototype of the framework integration\r\n  - cms-patatrack#101 Various fixes and cleanup\r\n  - cms-patatrack#102 Fix synchronisation problems in the clusterizer\r\n  - cms-patatrack#105 Heterogeneous ClusterTPAssociation\r\n  - cms-patatrack#109 Remove all remaining calls to cudaStreamSynchronize()\r\n  - cms-patatrack#112 Make all device->host cudaMemcpyAsync transfers use pinned memory\r\n  - cms-patatrack#114 Fix memory initialisation problems in the clusterizer (again)\r\n  - cms-patatrack#132 Add optional flags to disable SOA->legacy conversion and GPU->CPU transfer\r\n  - cms-patatrack#134 Cleanup after merging with CMSSW 10.2.2\r\n  - cms-patatrack#158 Tune and speed up doublet algo\r\n  - cms-patatrack#171 Introduce Cluster Charge Cut, optimize Histogram (bucket sorting)\r\n  - cms-patatrack#172 Add infrastructure around cub CachingDeviceAllocator, and use it in SiPixelRawToCluster\r\n  - cms-patatrack#180 Work around atomicAdd synchronisation problem on Volta\r\n  - cms-patatrack#186 Suppress asserts in the GPU code, unless GPU_DEBUG is defined\r\n  - cms-patatrack#202 Migrate tracker local reconstruction and pixel tracking to Tasks (backport #25163)\r\n  - cms-patatrack#203 Address code style and quality issues\r\n  - cms-patatrack#204 Require allocated type to have only a trivial constructor for make_device_unique and make_host_unique\r\n  - cms-patatrack#206 Fix access to uninitialised memory in RawToDigi_kernel\r\n  - cms-patatrack#216 Full workflow from raw data to pixel tracks and vertices on GPUs\r\n  - cms-patatrack#236 Set the data pointer of error's SimpleVector\r\n  - cms-patatrack#241 Limit the pixel clusteriser to nearest neighbours\r\n  - cms-patatrack#250 Fix invalid narrowing conversion from \"unsigned int\" to \"unsigned char\"\r\n  - cms-patatrack#252 Skip CUDA-related tests if no GPU is present\r\n  - cms-patatrack#253 Fix or disable failing unit tests\r\n  - cms-patatrack#255 Fix warnings reported by clang\r\n  - cms-patatrack#285 Various updates to pixel track/vertex DQM and MTV\r\n  - cms-patatrack#294 Make GPU-CPU cluster matching deterministic\r\n  - cms-patatrack#315 Apply code checks\r\n  - cms-patatrack#318 Move BeamSpot transfer to GPU to its own producer\r\n  - cms-patatrack#338 Clean up by clang-format\r\n  - cms-patatrack#338 Improve pixel doublets and CA, and extend debugging functionality\r\n  - cms-patatrack#338 Make SiPixelGainCalibrationForHLTGPU available on the CPU\r\n  - cms-patatrack#338 Migrate the pixel rechits producer and CA to the new heterogeneous framework\r\n  - cms-patatrack#338 Rework the GPU pixel track clusterizer and vertex finder\r\n  - cms-patatrack#346 Migrate ClusterTPAssociationHeterogeneous to the new framework\r\n  - cms-patatrack#354 Migrate gpuPixelRecHits::getHits() kernel to use a View instead of multiple pointers\r\n  - cms-patatrack#355 Reorganize CUDAScopedContext\r\n  - cms-patatrack#364 Move event and stream caches, and caching allocators out from CUDAService\r\n  - cms-patatrack#382 Implement triplets in the pixel ntuplet producer\r\n  - cms-patatrack#384 Port the whole pixel workflow to new heterogeneous framework\r\n  - cms-patatrack#385 Implement full Pixel SoA workflow on CPU\r\n  - cms-patatrack#387 Fix clang warnings\r\n  - cms-patatrack#389 Replace use of API wrapper stream and event with plain CUDA, part 1\r\n  - cms-patatrack#390 Implement library-only wrappers for launching CUDA kernels\r\n  - cms-patatrack#395 Replace CUDA API wrapper memory operations with native CUDA calls\r\n  - cms-patatrack#396 Replace use of CUDA API wrapper unique_ptrs with CUDAUtilities unique_ptrs\r\n  - cms-patatrack#405 Use non-blocking CUDA streams\r\n  - cms-patatrack#408 Replace cuda::device operations with native CUDA calls\r\n  - cms-patatrack#416 Drop obsolete heterogenous framework\r\n  - cms-patatrack#417 Remove last references to CUDA API Wrappers\r\n  - cms-patatrack#422 Move LogWarning into the EDProducer\r\n  - cms-patatrack#423 Rename exitSansCUDADevices to requireCUDADevices\r\n  - cms-patatrack#429 Implement changes from the CUDA framework review\r\n  - cms-patatrack#436 Protect against too many pixels\r\n  - cms-patatrack#437 Update lumi ALCARECO configurations for heterogeneous pixel digi and cluster configuration\r\n  - cms-patatrack#438 Work around: avoid assert in Phase 2 workflows\r\n  - cms-patatrack#442 Integrate the comments from the upstream PRs\r\n  - cms-patatrack#445 Apply code formatting fixes from upstream integration\r\n  - cms-patatrack#447 Replace cub prefix scan with home-brewed one\r\n  - cms-patatrack#449 Remove dependency on cub\r\n  - cms-patatrack#464 Rename CUDAHostAllocator to cms::cuda::HostAllocator\r\n  - cms-patatrack#467 Use siPixelDigis.cpu instead of siPixelDigis\r\n  - cms-patatrack#492 Update Pixel gain calibration scheme (for Run3)\r\n  - cms-patatrack#501 Add truncation to pixel charge on GPU\r\n  - cms-patatrack#519 Remove \"cuda_cxx17.h\"\r\n  - cms-patatrack#525 Remove duplicate definition of globalValidationHCALOnly\r\n  - cms-patatrack#527 Remove use of boost::mpl::vector for dependent records\r\n  - cms-patatrack#546 Remove misleading calls to std::move\r\n  - cms-patatrack#548 Update the validation sequence for pixel-only tracking workflows\r\n  - cms-patatrack#551 Fix BS naming in siPixelRecHitsCUDAPreSplitting\r\n  - cms-patatrack#555 Update ESProducers following cms-sw#31556\r\n  - cms-patatrack#559 Define CUDA-specific attributes for compatility with GCC\r\n  - cms-patatrack#570 Bugfix: add missing GPU memory free to PixelCPEFast\r\n  - cms-patatrack#575 Address pixel local reco PR review comments\r\n  - cms-patatrack#577 Migrate GPU pixel modules to ESConsumes\r\n  - cms-patatrack#578 Move SiPixelFedCablingMapGPU to CondFormats and CalibTracker\r\n  - cms-patatrack#581 Remove partial handling of the Pilot Blade from GPU code\r\n  - cms-patatrack#582 Rename SiPixelFedCablingMapGPU to SiPixelROCsStatusAndMapping\r\n  - cms-patatrack#583 Move hit indexes to 32 bits\r\n  - cms-patatrack#584 Update DQM clients for PixelVertexProducer pixel vertices\r\n  - cms-patatrack#586 Simplify cudacompat layer to use a 1-dimensional grid\r\n  - cms-patatrack#588 Make clusterizer kernels independent of the grid size\r\n  - cms-patatrack#593 Clean up the pixel local reconstruction code\r\n  - cms-patatrack#599 Clean up the pixel local reconstruction code\r\n  - cms-patatrack#601 Clean up the pixel local reconstruction code\r\n  - cms-patatrack#602 Clean up the pixel local reconstruction code", "branch": "master", "changed_files": 115, "closed_at": "1610367418", "comments": 156, "commits": 149, "created_at": "1602186935", "deletions": 148, "labels": ["alca-approved", "code-checks-approved", "db-approved", "dqm-approved", "fully-signed", "geometry-approved", "heterogeneous-approved", "operations-approved", "orp-approved", "reconstruction-approved", "simulation-approved", "tests-approved"], "merge_commit_sha": "dd931b1a61f3948a7c528b815bc15959d56151fa", "merged_at": "1610367417", "merged_by": "cmsbuild", "milestone": "CMSSW_11_3_X", "number": 31721, "release-notes": [], "review_comments": 497, "state": "closed", "title": "Patatrack integration - Pixel local reconstruction (9/N)", "updated_at": "1610367419", "user": "fwyzard"}