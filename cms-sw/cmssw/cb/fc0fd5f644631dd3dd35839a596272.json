{"additions": 1608, "auther_ref": "CMSSW_13_1_0_pre4_hcalnano", "auther_sha": "7b13a6632e8d02076537e495d1b098e333e1e217", "author": "DryRun", "body": "#### PR description:\r\n\r\nThis PR is a continuation of https://github.com/cms-sw/cmssw/pull/40489, which was mistakenly closed after a rebase. \r\n\r\nThis PR implements a NanoAOD format for HCAL digis and RecHits. This data format is intended to replace the old [HcalTupleMaker](https://gitlab.cern.ch/cmshcal/hcalpfg/HcalTupleMaker) used by most HCAL workflows. \r\n\r\nExample:\r\n```\r\ncmsDriver.py NANO \\\r\n    -s RAW2DIGI,RECO,USER:DPGAnalysis/HcalNanoAOD/hcalNano_cff.hcalNanoTask \\\r\n    --datatier NANOAOD \\\r\n    --eventcontent NANOAOD \\\r\n    --filein root://eoscms.cern.ch//store/group/dpg_hcal/comm_hcal/RAW/ZeroBias/361579/be9a0a12-548c-4aa0-837a-2d5654f8e63b.root \\\r\n    --fileout hcalnano_testcmsdriver.root \\\r\n    -n 100 \\\r\n    --nThreads 4 \\\r\n    --conditions auto:run3_data_prompt \\\r\n    --era Run3 \\\r\n    --python_filename testcmsdriver_cfg.py \\\r\n    --no_exec\r\ncmsRun testcmsdriver_cfg.py\r\n```\r\n\r\nRecHits are implemented following @kdlong's PFNano branch, https://github.com/kdlong/cmssw/tree/pfNano_HCALOnly_12_6_0_pre4. The specific modules, however, are defined in `DPGAnalysis/HcalNanoAOD` (e.g. `HBHERecHitFlatTableProducer`), rather than `DPGAnalysis/CaloNanoAOD` (e.g. `SimpleCaloRecHitFlatTableProducer`). Hence, this package is independent of `DPGAnalysis/CaloNanoAOD`. \r\n\r\nDigis are handled by dedicated modules in `DPGAnalysis/HcalNanoAOD` that output dense arrays, sorted by DetId. A list of the DetIds (i.e. the column labels) is placed in `Run`. For the moment, DetIds are also saved in `Event`, for development purposes although we might decide to keep them for ease of analysis. \r\n\r\nMetadata from the uHTRs (calib event type) and the uMNio (the labeling of calibration events (pedestal/LED/laser) and which type of laser event), are also handled by dedicated modules. \r\n\r\nTwo customization functions are provided for special datasets:\r\n1.  `hcalNano_cff.customiseHcalCalib`: for calibration sequence events in the TestEnablesEcalHcal dataset (i.e. events in the abort gap of type pedestal, LED, or laser). Specifies the correct label for the raw data; adds uMNio metadata; adds an important HLT filter to all Paths and Endpaths, which selects events triggered by HLT_HcalCalibration. This filter essential to avoid a crash, because ECAL-triggered events are missing the HCAL raw data collection (aside: HCAL needs to revisit the definition of this dataset; the trigger is based on a majority-wins vote of calibration flags from the HCAL uHTRs. A single uHTR flagging the event as calibration should be enough to consider the event calibration and not real physics!). \r\n2. `hcalNano_cff.customiseHcalLocal`: for HCAL local runs. Loads the raw data using `HcalTBSource`; adjusts the number of time slices per digi; adds uMNio metadata.\r\n\r\nTBD: trigger primitives. \r\n\r\n#### PR validation:\r\n\r\nProduces useful HCAL NanoAOD ntuples. Data validated event-by-event against HcalTupleMaker. Calibration and local run customization functions work on recent MWGR 2023 data. \r\n\r\n#### Other\r\nThe contents of this PR are ready for use by HCAL DPG right away. An eventual merge should take into account @kdlong's PFNanoAOD branch, but this package is independent of `DPGAnalysis/CaloNanoAOD`. \r\n\r\n@vlimant @swertz this should be assigned to XPOG again.\r\n\r\n@mariadalfonso @wang-hui @jhakala \r\n", "branch": "master", "changed_files": 31, "comments": 14, "commits": 7, "created_at": "1683688340", "deletions": 0, "labels": ["simulation-pending", "pending-signatures", "tests-approved", "orp-pending", "pdmv-pending", "upgrade-pending", "code-checks-approved", "xpog-pending"], "milestone": "CMSSW_13_2_X", "number": 41607, "release-notes": [], "review_comments": 2, "state": "open", "title": "Add prototype HcalNanoAOD", "updated_at": "1685090579", "user": "DryRun"}