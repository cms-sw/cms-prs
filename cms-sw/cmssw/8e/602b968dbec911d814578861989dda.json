{"additions": 42, "auther_ref": "MakePyBind11ParameterSetsIncludingCommandLineArguments", "auther_sha": "7f4db66a82363d51d1c23e86efc89f5c8f7c4956", "author": "patrickbryant", "body": " for c++ process\r\n\r\n#### PR description:\r\n\r\nIt is now possible to modify a python parameterSet in a python config file based on command line arguments for a c++ analysis. \r\n\r\nPreviously one would load a PSet from a python config file **fileName** with:\r\n`const edm::ParameterSet& process    = edm::cmspybind11::readPSetsFrom(argv[1])->getParameter<edm::ParameterSet>(\"process\"); `\r\n\r\nbut this is very inflexible, not allowing a single python config to be modified by command line arguments and forcing the user to do all the manipulation in the bin/analysis.cc. \r\n\r\nNow one can load a PSet from a python config file and let the python config file have access to the command line arguments:\r\n`const edm::ParameterSet& process    = edm::cmspybind11::readPSetsFrom(argv[1], argc, argv)->getParameter<edm::ParameterSet>(\"process\");`\r\n\r\nThis is a trivial improvement that simply requires the line\r\n`PySys_SetArgv(argc, argv);`\r\nprior to the pybind11::exec calls in makePSetsFromFile.\r\n\r\n#### PR validation:\r\n\r\nI have checked that my analysis code operates as expected.\r\n", "branch": "master", "changed_files": 2, "closed_at": "1589780445", "comments": 6, "commits": 1, "created_at": "1588077511", "deletions": 0, "labels": ["code-checks-rejected", "comparison-pending", "core-pending", "orp-pending", "pending-signatures", "tests-pending"], "milestone": "CMSSW_11_1_X", "number": 29575, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Make it possible to pass command line arguments to python config file", "updated_at": "1589780445", "user": "patrickbryant"}