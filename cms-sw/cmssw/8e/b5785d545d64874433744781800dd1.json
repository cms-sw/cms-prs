{"additions": 196, "auther_ref": "from-CMSSW_10_1_X_2018-02-14-2300-ALCT-CLCT-matching", "auther_sha": "d64894977015c02355d2cb335fbc434949376d06", "author": "dildick", "body": "The default CLCT-ALCT matching algorithm in the CSC trigger simulation is CLCT-centric, i.e. a matching ALCT is searched in a BX window around the BX of a valid CLCT. It was always assumed that this was also the case in the firmware.  However, a recent investigation of the TMB verilog firmware code showed that in fact it is the other way around (and has been since the start of data taking), namely that the matching is ALCT-centric. \r\n\r\nThis pull request enables the ALCT-centric option in the TMB. The default option is still CLCT-centric for now. I plan to make the switch soon. This option was not enabled for the test run function that relies both on half-strips and distrips.\r\n\r\nAlso in this PR:\r\n* `vector<T>` was made `const vector<T>&` when an object was instantiated by function's `vector<T>` return value\r\n* Two extra types of LCT in the CSCCorrelatedLCTDigi were defined\r\n*  Certain functions were made `const`\r\n\r\nThere should be no changes in the performance of the CSC local trigger. \r\n\r\n@tahuang1991 ", "branch": "master", "changed_files": 4, "comments": 12, "commits": 4, "created_at": "1518705532", "deletions": 86, "labels": ["code-checks-approved", "comparison-pending", "l1-pending", "orp-pending", "pending-signatures", "simulation-pending", "tests-approved"], "milestone": "CMSSW_10_1_X", "number": 22235, "release-notes": [], "review_comments": 0, "state": "open", "title": "Enable option for ALCT-centric matching", "updated_at": "1518884580", "user": "dildick"}