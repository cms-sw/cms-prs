{"additions": 6, "auther_ref": "UseTypedefNames", "auther_sha": "7c3e03038540474c05d9f3662e1f0ee29f44ed2c", "author": "wmtan", "body": "Many unit tests in the conditions packages (CondCore/*) fail because of a problem with names of typedefs.  The conditions code uses the typedefs Container::value_type, Container::key_type,\nand Container::mapped_type for a container \"Container\".  The conditions code expects to use the strings \"key_type\", \"value_type\" and \"mapped_type\" in its internal structures.  The code uses introspection to get the strings from the type.  There are two problems here.  One is that the strings will always have the same value, so it is wasteful to use introspection to obtain a string that is known in advance.  Second, is that in ROOT6, if the underlying type of the typedef is a built-in (e.g. int), the typedef name is removed in the introspection, so, for vector<int>, for example, the introspection returns \"int\" instead of \"value_type\".  The obvious solution is to hard code the names, which are always the same.  It would be possible to modify our TypeWithDict class so that the typedefs of built-ins would not be resolved to the underlying type, but this complicates the code for no good reason.\nPlease merge this as soon as convenient.\nNote: Many of the affected conditions unit tests now fail later for a different reason, but this failure was revealed by this pull request, not caused by it.\n", "branch": "CMSSW_7_3_ROOT6_X", "changed_files": 1, "closed_at": "1415744576", "comments": 1, "commits": 1, "created_at": "1415731147", "deletions": 4, "labels": ["comparison-pending", "db-pending", "pending-signatures", "tests-pending"], "merge_commit_sha": "faf5cff34230339f647586c104a7bf666c01c263", "merged_at": "1415744576", "merged_by": "davidlt", "number": 6344, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Use typedef names", "updated_at": "1415744873", "user": "wmtan"}