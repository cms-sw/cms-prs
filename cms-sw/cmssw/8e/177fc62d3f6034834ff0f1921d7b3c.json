{"additions": 496, "auther_ref": "Phase1-HE9", "auther_sha": "b41c70be3bb5a49a4f6d8ccc8106482e88610f98", "author": "kpedro88", "body": "This PR supersedes #16070 (which should be closed). One of the issues under discussion for that PR, HO SiPM parameters in the database, has already been resolved. To recap: in #15058, when the new features were added to the SiPM simulation for HE, we propagated the same parameter values to HO (but only for Run 1). There was then a bit of confusion when transferring those parameters to the database. Upon reflection, we decided these new features should be avoided for HO entirely, since they have not been tuned for it. This resets the Run 1 HO sim back to how it was before 810pre9, and the Run 2 HO sim should be unchanged now that the database conditions are fixed.\n\nAfter several weeks of internal discussions, a few decisions were made about the nonlinearity implementation. The SiPM simulation already includes nonlinearity using a saturation/recovery model for pixels with recovery time constant tau. Therefore, it would be redundant to include the saturation/recovery model _and_ apply the inverted nonlinearity correction (derived from bench data) in the simulation. For now, we have decided to stick with the saturation/recovery model. However, the code to invert the nonlinearity correction is left in place, in case of future studies.\n\nThis implies a few things:\n1) The nonlinearity correction from MC needs to be derived from the SiPM simulation. A tool has been added for this: `SimCalorimetry/HcalSimAlgos/test/sipmnonlinearityanalyzer_cfg.py`.\n2) The value for tau has been updated to 10 ns, based on a recommendation from experts. This significantly improves the agreement of the simulated nonlinearity with the bench data: [slides](https://indico.cern.ch/event/578882/contributions/2345268/attachments/1358769/2056434/sipm_simulation_nonlinearity.pdf)\n3) Tau is now a configurable python parameter, and left as 5ns for HO to avoid unnecessary changes to that simulation (since the HO signals tend to be small, the nonlinear effect is also small and generally neglected).\n4) The new nonlinearity parameters have been updated in the hardcode conditions. This PR now activates the reco application of the nonlinearity correction (since #16197 from @igv4321 is already merged), so the corrections in the database need to be updated to give the most appropriate results. @abdoulline is working on this. In the meantime, to pick up the hardcode condition values:\n\n```\nfrom SLHCUpgradeSimulations.Configuration.HCalCustoms import load_HcalHardcode\nprocess = load_HcalHardcode(process)\nprocess.es_hardcode.toGet = cms.untracked.vstring(\"GainWidths\",\"SiPMCharacteristics\")\n```\n\n@mariadalfonso is checking the effect of the nonlinearity correction on M2 performance (hopefully it should provide some improvement at high energy).\n\nIn addition, I checked off a few other items on my todo list for the SiPM code:\n5) remove `iConfig.exists()` from `HcalSimParameters` (recall this contributed to the bug/digression fixed in #15834).\n6) Restore the use of `doSiPMSmearing` for HO (only for 2017 and beyond, leaving the old versions as they were) with the old pulse shape (suitable for HO SiPMs). This required adding `HcalMCParams` to `HcalDbService` to get access to the pulse shape number on a per-channel basis.\n7) Remove some unused fragments in the SiPM code that had been lying around.\n\nNote: there may be a separate PR in the near future updating some SiPM parameters, as we have been notified that the TB data used to measure the parameters was taken at V-VB = 4.4 V, while the SiPMs installed in HE will be operated at V-VB = 3 V. However, some data still needs to be analyzed for this, and it should be totally orthogonal to this PR.\n\nThe other item still coming is ZS thresholds for HE (from @lihux25), but these of course depend on any parameter changes.\n\n@civanch, @slava77: I would appreciate a rapid review of this PR if possible. I know it has a long description, but most of the new changes are rather minor. (Also, the majority of added lines are in the new standalone tool to measure the simulated nonlinearity.)\n", "branch": "CMSSW_8_1_X", "changed_files": 28, "closed_at": "1477924037", "comments": 114, "commits": 21, "created_at": "1477105591", "deletions": 236, "labels": ["alca-approved", "comparison-available", "db-pending", "orp-pending", "pending-signatures", "reconstruction-approved", "simulation-approved", "tests-approved"], "merge_commit_sha": "4019c3f4a525a43618b5d0295e7c538b12157f29", "merged_at": "1477924037", "merged_by": "davidlange6", "milestone": "Next CMSSW_8_1_X", "number": 16315, "release-notes": [], "review_comments": 10, "state": "closed", "title": "SiPM nonlinearity, parameters from CondDB, update tau, cleanup", "updated_at": "1477924375", "user": "kpedro88"}