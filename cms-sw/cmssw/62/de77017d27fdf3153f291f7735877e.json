{"additions": 658, "auther_ref": "DD4hep_Tracker_sim_temp", "auther_sha": "93d3111fe76210adb41aa84279de502236442043", "author": "ghugo83", "body": "- There was no proper navigation when building Tracker geometry with DD4hep: non-matching volumes were treated in CmsTrackerLayerBuilder and CmsTrackerSubStrctBuilder, and the **Forward Tracker geometry builders were never reached**.\r\nHence, **no proper Tracker GeometricDet tree was actually created with DD4hep**.\r\n- There was also no DetId construction. Once activated, there were **numerous regressions in DetIds**.\r\n\r\n**This PR fixes these issues, which are absolute show-stoppers, located at the beginning of the sim step, for any workflow containing a Tracker.\r\nThis PR allows 1:1 results between old DD and DD4hep (for DetIds, geo placement, and sensor topology values).**\r\nThis PR is fully validated with the cmsExtended2021 scenario only.\r\n\r\nNB: Ideally, I am not fully finished with this PR.\r\nSince these issues were complete show-stoppers, I push it now, so that people can pull the commits.\r\n\r\n### Issues solved\r\n- _Problem:_ **Navigation, in Geometry/TrackerNumberingBuilder, does not work in DD4hep case.**\r\nNone of the attempts of using `while (fv.firstChild())` and `while ( fv.next(0))` in `CmsTrackerLevelBuilder::build` seem to work.\r\nFurthermore, `fv.parent()` and` fv.nextSibling` have a different logic in the DD4hep case than old DD (because DD4hep itself has different logic), and hence cannot be used like with old DD (@ianna).\r\n\r\n_Solution:_ **The key idea is to never use `while (fv.firstChild())` in `CmsTrackerLevelBuilder::build`, and instead take advantage of the calls stack.**\r\nEach time` fv.firstChild() `would be evaluated, within a while loop in `CmsTrackerLevelBuilder::build`, the navigation would go to the next volume. **This would not be fine, because the CmsTrackerLevelBuilder::build calls are intricated (barrel::build calls layer::build, which in turn calls ladder::build, etc). \r\nHence, the navigation would go too fast ahead, hence the present issues.**\r\nInstead, **one should call for the next volume within CmsDetConstruction**. To go back up, make use of the **stack calls**.\r\n\r\n- _Problem:_  **Once navigation is fixed, a segfault appears in CmsTrackerPhase1DiskBuilder.** \r\n(It was not appearing before, because navigation was not ok, hence the Forward Builder was never called.)\r\n\r\n_Solution:_  Units are in cm with DD4hep, and there was a hardcoded value in \r\nhttps://github.com/cms-sw/cmssw/blob/master/Geometry/TrackerNumberingBuilder/plugins/CmsTrackerPhase1DiskBuilder.cc#L44 \r\n`double radius_split = 100.;`\r\nThis resulted in one radius-split group being empty (values in cm were much smaller), hence the std::rotate call being not appropriate, hence the segfault.\r\n-> **Keep consistent units in DetGeomDesc for all geo values + Protect the use of std::rotate.**\r\n\r\n- _Problem:_  **DetIds in TEC (old DD versus DD4hep) were completely different.**\r\n\r\n_Solution:_  **Remove non-desired custom navigation** in https://github.com/cms-sw/cmssw/blob/master/Geometry/TrackerNumberingBuilder/plugins/CmsTrackerRingBuilder.cc#L23 \r\n**Just use a data member to access child name.** \r\nNB: Cannot be done within sortNS, as in there, the filtered view has already 'nexted'.\r\n\r\n- _Problem:_  **DetIds in all Barrels (old DD versus DD4hep) were different.**\r\n\r\n_Solution:_   Issue was at `float layerRadius = (det->params()[2] + det->params()[1]) / 2.;`\r\nhttps://github.com/cms-sw/cmssw/blob/master/Geometry/TrackerNumberingBuilder/plugins/CmsTrackerLayerBuilder.cc#L53\r\n**Order of shape parameters with DD4hep is different, leading to layerRadius not making sense in the DD4hep case.**\r\nThis, in turn, leads to sorting by layerRadius (hence DetIds) being inappropriate.\r\n-> Keep same order of shape parameters for the few shapes of interest (box, trap, tubs).\r\n\r\n- _Problem:_  **~half of sensors DetIds were wrong with a shift of 1.**\r\n\r\n_Solution:_ The DD4hep filtered view is already filtered with `TkDDDStructure` in\r\nhttps://github.com/cms-sw/cmssw/blob/master/Geometry/TrackerNumberingBuilder/plugins/DDDCmsTrackerContruction.cc#L57\r\nHence, `ExtractStringFromDDD<FilteredView>::getString(stereo, &fv) == \"true\"`, which filters through another attribute, was not properly evaluated.\r\nhttps://github.com/cms-sw/cmssw/blob/master/Geometry/TrackerNumberingBuilder/plugins/CmsDetConstruction.cc#L16\r\nHence the shift in 1 in DetIds.\r\n-> **Use GeometricDet getters instead. Of course, this is also true for Phase 2 sensors.**\r\n\r\n\r\n### Remaining on the TO DO list, in view of an operational Tracker workflow\r\n**- PRIORITY: Should allow namespace (+copy number?) in SpecPar sections** :\r\nNo namespace (and copy number?) is tolerated by DD4hep CMS FilteredView interface.\r\nHence, in the DD4hep case, the topology XML files need to be modified, to be able to be processed properly.\r\nI think this is not desirable, and should be fixed in the DDCMS FilteredView.\r\n_Motivations:_\r\n- **Duplication of XML files** does not sound good.\r\n- It is actually **not possible to have a working topology with no namespace for any Phase 2 Tracker**, because the module names (without namespace) are the same for OT and IT.\r\n- This also leads, in the DD4hep case, to **null RadLength and Xi data members values**. More generally, **the paths in trackerRecoMaterial.xml are not properly recognized.**\r\n\r\n**- Test all other geometries**\r\nOnce the point above is addressed, should compare the Tracker GeometricDets for ALL scenarios.\r\nOnly cmsExtended2021 comparison was done here.\r\nShould also test the writer to DB.\r\n\r\n**- Speed**\r\nThere seems to be a **major performance issue with DD4hep FilteredView::firstChild()** (?). This should be studied.\r\nGeo is only constructed once, so not a dramatic issue. Though, there might hopefully be a way to improve this?\r\nNB: This has nothing to do with the fixes in this PR. Performance issues were already present, and were not addressed here.\r\n\r\n**- GeometricDetExtra**\r\nIn the DD4hepo case, there is no GeometricDetExtra handling. GeometricDetExtra  should be adapted or removed.\r\n\r\n@ianna @vargasa @cvuosalo @civanch @dpiparo @mmusich \r\n\r\n\r\n", "branch": "master", "changed_files": 32, "closed_at": "1601965035", "comments": 73, "commits": 46, "created_at": "1600966953", "deletions": 383, "labels": ["code-checks-approved", "comparison-available", "db-approved", "fully-signed", "geometry-approved", "orp-approved", "reconstruction-approved", "simulation-approved", "tests-approved", "upgrade-approved"], "merge_commit_sha": "f57bdcbf66b1a4ae038047c0a47af5b7728a5c10", "merged_at": "1601965035", "merged_by": "cmsbuild", "milestone": "CMSSW_11_2_X", "number": 31573, "release-notes": [], "review_comments": 11, "state": "closed", "title": "DD4hep: Introduces functional Tracker navigation + DetIds building", "updated_at": "1601965036", "user": "ghugo83"}