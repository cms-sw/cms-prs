{"additions": 1872, "auther_ref": "l1tZDCEmulator_CMSSW13_3_X", "auther_sha": "3ffbfda6ac69b17e89346401e54ac2a031b46f46", "author": "cfmcginn", "body": "#### PR description:\r\n\r\nPR for L1Trigger ZDC emulation, for upcoming heavy ions datataking. L1Trigger/L1TZDC pkg added containing L1TZDCProducer which puts ZDC based EtSum into the event, which can be picked up in trigger emulation and cut on as with any other EtSum object. New EtSum IDs are added for ZDCP and ZDCM (plus and minus). Additional PR from @elfontan interfacing this PR w/ the Global trigger has since been incorporate here (PR https://github.com/cms-sw/cmssw/pull/42635 , now closed; some of the detail in that PR is now incorporated here as of 2023.08.29). This includes an update of the uGT emulator for new ZDC triggers included in the Heavy Ion menu for the 2023 data-taking. The implementation relies on new developments included in the [utm libraries v0_11_0](https://globaltrigger.web.cern.ch/globaltrigger/release/utm/latest_doc/html/releaseNotes/v0_11_0.html).\r\n\r\nThe main changes are the following:\r\n\r\n- The L1Trigger/L1TZDC area containing plugins L1TZDCProducer and L1TZDCAnalyzer, former for producing etSums and the latter primarily used in validation of Produce in comparisons w/ etSums checked offline\r\n- The TriggerMenuParser is adapted to parse the new ZDCPlus and ZDCMinus conditionTypes from the xml menu. A dedicated parsing function parseZdcEnergySum is included to relate these objects to the new ZdcEnergySumTemplate.\r\n- The GlobalBoard is updated to receive a new category of objects similar to the EtSum from the CaloLayer2 coming from the new ZDC Producer included in\r\n- https://github.com/cms-sw/cmssw/pull/42634.\r\n- A dedicated ZdcEnergySumTemplate and a ZdcEnergySumCondition class are developed for checking the EtSum threshold on the ZDC objects.\r\n- Addition of condZdcEnergySum to avoid conflicts with existing condEnergySum\r\n- The ste of input tags to the L1TGlobalProducer is updated in simGtStage2Digis_cfi.py.\r\n\r\nThe following L1Ntuples workflows are also updated to include the new input tags for ZDC objects:\r\n- L1NtupleEMU_cff.py\r\n- L1NtupleRAW_cff.py\r\n- l1UpgradeTree_cfi.py\r\n\r\n\r\n#### PR validation:\r\n\r\nEmulator output validated against offline ZDC Et Sum calculations ( @hjbossi ) :\r\n[ZDCEmulationValidation.pdf](https://github.com/cms-sw/cmssw/files/12413042/ZDCEmulationValidation.pdf)\r\n\r\nThe following suite of tests were done after successful build\r\n```\r\nscram b runtests\r\nscram build code-checks\r\nscram build code-format\r\n```\r\nNote two tests failed - see output of attached file: \r\n[scramBRunTests_Attempt2.txt](https://github.com/cms-sw/cmssw/files/12413098/scramBRunTests_Attempt2.txt)\r\n\r\nNote that on inspecting full test log, this is because file could not be accessed (do not believe this is an issue w/ voms or certificate, Attempt2 in file name is after rerunning voms). If an appropriate file can be provided, happy to recheck these tests. The full test log is attached here: \r\n[testing.log](https://github.com/cms-sw/cmssw/files/12413111/testing.log)\r\n\r\nOther than scram b run tests, other commands completed seemingly correctly - output can be provided if necessary\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nWe intend to backport to CMSSW_13_2_X as that is the release designated for heavy ions datataking\r\n\r\nTagging a few additional users to watch this PR: @ginnocen @icali ", "branch": "master", "changed_files": 39, "comments": 71, "commits": 1, "created_at": "1692732086", "deletions": 38, "labels": ["l1-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-pending"], "milestone": "CMSSW_13_3_X", "number": 42634, "release-notes": [], "review_comments": 105, "state": "open", "title": "L1t zdc emulator cmssw13 3 x", "updated_at": "1693494931", "user": "cfmcginn"}