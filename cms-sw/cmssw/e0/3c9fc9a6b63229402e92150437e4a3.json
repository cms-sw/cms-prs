{"additions": 12, "auther_ref": "optimize_sistirpcalsmallbiasscan", "auther_sha": "ec4ede94082351e9496cbdcb7c3c1a1ee2e4fd81", "author": "mmusich", "body": "Greetings,\r\nin the review of #24626, it has been hinted in https://github.com/cms-sw/cmssw/pull/24626#discussion_r219674569 that in `CalibrationTrackSelectorFromDetIdList` it might be more efficient not to clone all hits for all the tracks and then let the unused hits to be deleted (by going out of scope), but instead to store them in a `std::vector<const TrackingRecHit*>`  and clone them later in\r\n`CalibrationTrackSelectorFromDetIdList::makeCandidate` only when a track candidate is built.\r\nThis is what is proposed here. \r\nI checked that there is no memory penalty by re-ALCARECOeing 1000  `ExpressStream` \r\nevents as I don't observe substantial deviations from the baseline. \r\n\r\n![memory2](https://user-images.githubusercontent.com/5082376/46221728-8883bb00-c34e-11e8-9340-c50425a4afc5.png)\r\n\r\n", "branch": "master", "changed_files": 1, "comments": 16, "commits": 1, "created_at": "1538147043", "deletions": 11, "labels": ["alca-approved", "code-checks-approved", "comparison-available", "fully-signed", "orp-pending", "tests-rejected"], "milestone": "CMSSW_10_3_X", "number": 24759, "release-notes": [], "review_comments": 0, "state": "open", "title": "[10.3.X] CalibrationTrackSelectorFromDetIdList: clone hits only when building track", "updated_at": "1538406339", "user": "mmusich"}