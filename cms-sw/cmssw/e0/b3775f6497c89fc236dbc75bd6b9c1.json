{"additions": 129, "auther_ref": "earlyInitNanoAODDQM", "auther_sha": "ab99828bfd8e45cb735365fc2e854fbd0590402c", "author": "Dr15Jones", "body": "#### PR description:\r\n\r\nIB RelVals have been failing because the cut parser in NanoAODDQM sometimes fails to find methods of nanoaod::FlatTable. This has been seen before and is believe to be a threading issue in ROOT related to asking for the list of methods while other ROOT calls are happening. Moving the initialization to the constructor of the module should avoid this threading problem.\r\n\r\nThe code was changed so that instead of needing the FlatTable in order to ask it what are the available columns, now the code assumes any name not related to either a function call or a known method of FlatTable::RowView is a column name. This allows the cut parser to be fully initialized in the module constructor.\r\n\r\nAdditionally, using an invalid column name in a call to FlatTable::RowView::getAnyValue now throws an exception which contains the name of the invalid column.\r\n\r\n#### PR validation:\r\n\r\nNew unit test passes.", "branch": "master", "changed_files": 6, "comments": 7, "commits": 2, "created_at": "1711649649", "deletions": 7, "labels": ["pending-signatures", "orp-pending", "tests-started", "code-checks-approved", "xpog-pending"], "milestone": "CMSSW_14_1_X", "number": 44573, "release-notes": [], "review_comments": 0, "state": "open", "title": "Initialize cut parser earlier in NanoAODDQM module", "updated_at": "1711694786", "user": "Dr15Jones"}