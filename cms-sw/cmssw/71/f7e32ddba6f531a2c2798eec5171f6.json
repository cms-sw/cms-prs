{"additions": 479, "auther_ref": "Implement_StdArray_wrapper", "auther_sha": "9e2724c20239cc98545fabad294bd0e5ea6a8bfb", "author": "fwyzard", "body": "#### PR description:\r\n\r\nDue to a ROOT limitation an std::array cannot be serialised to a ROOT file.\r\nSee https://github.com/root-project/root/issues/12007 for a discussion on the issue.\r\n\r\nThis class reimplements the full std::array<T,N> interface, using a regular Reflex dictionary for the ROOT serialisation.\r\nTo be more GPU-friendly, all methods are constexpr, and out-of-bound data access aborts instead of throwing an exception.\r\n\r\nNote: dictionaries for edm::StdArray<T,N> where T is a standard C/C++ type should be declared in DataFormats/Common/src/classed_def.xml.\r\n\r\n#### PR validation:\r\n\r\nThe new unit tests pass.\r\n\r\nThe updated tests using an StdArray in a SoA collection work on CPU and GPU, and the collection can be serialised to a ROOT filed and read back.", "branch": "master", "changed_files": 10, "comments": 3, "commits": 3, "created_at": "1697811866", "deletions": 41, "labels": ["core-pending", "pending-signatures", "orp-pending", "tests-started", "code-checks-rejected", "heterogeneous-pending"], "milestone": "CMSSW_13_3_X", "number": 43076, "release-notes": [], "review_comments": 0, "state": "open", "title": "Implement std::array-like wrapper", "updated_at": "1697812257", "user": "fwyzard"}