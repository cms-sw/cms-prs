{"additions": 84, "auther_ref": "pixel_dqm_client_changes_for_CMSHLT-3147", "auther_sha": "1a6f4ee22690e6760c8255546a02fc3e4775d4be", "author": "mmusich", "body": "#### PR description:\r\n\r\nThis PR is opened in preparation of the integration of the ticket [CMSHLT-3147](https://its.cern.ch/jira/browse/CMSHLT-3147).\r\nIn a nutshell that ticket suggests that the DQM plugins which are currently in the Path `DQM_PixelReconstruction_v` (Sequence: `HLTDQMPixelReconstruction`) and in the Path `DQM_PixelReconstruction_v` (Sequece `HLTDQMPixelReconstruction`) can be removed from the HLT combined table, as long as the Tracker-DPG and/or Tracking-POG experts move the corresponding monitoring sequence into the appropriate online-DQM client (which reads the `DQMGPUvsCPU` streamer files).\r\nThis latter point is proposed in this PR, in which we change the client `DQM/Integration/python/clients/pixelgpu_dqm_sourceclient-live_cfg.py` to include directly the modules responsible of monitoring of the GPU vs CPU comparisons, as the input data to feed them will be sent by the input `DQMGPUvsCPU`  stream.\r\n\r\n#### PR validation:\r\n\r\nI created a suitable set of streamer files using the following script:\r\n\r\n```bash\r\n#!/bin/bash -ex\r\nRUNNUMBER=397813\r\nLUMISECTION=131\r\n\r\n# cmsrel CMSSW_15_1_X_2025-10-22-2300\r\n# cd CMSSW_15_1_X_2025-10-22-2300/src/\r\n# cmsenv\r\n# git cms-addpkg DataFormats/TrackSoA DataFormats/TrackingRecHitSoA DQM/Integration\r\n# git remote add AdrianoDee git@github.com:AdrianoDee/cmssw.git; git fetch AdrianoDee\r\n# git cherry-pick 1eb24e6536182945d6f7ac55fedc023a9f0d4410\r\n# git cherry-pick 9a3ef9ae14f452aa15d3f868b97c63f6b996b1dc\r\n# cmsenv\r\n# scram b\r\n\r\nINPUTFILE=root://eoscms.cern.ch//eos/cms/store/express/Run2025F/ExpressPhysics/FEVT/Express-v2/000/397/813/00000/f95a79f9-18ef-48f1-951a-2ae78c1a107f.root\r\nrm -rf run${RUNNUMBER}*\r\n\r\n# run on 100 events of LS 131, with 100 events per input file\r\nconvertToRaw -f 100 -l 100 -r ${RUNNUMBER}:${LUMISECTION} -o . -- \"${INPUTFILE}\"\r\n\r\ntmpfile=$(mktemp)\r\nhltConfigFromDB --configName /users/musich/tests/dev/CMSSW_15_1_0/CMSHLT-3147/GRun > \"${tmpfile}\"\r\ncat <<@EOF >> \"${tmpfile}\"\r\nprocess.load(\"run${RUNNUMBER}_cff\")\r\n\r\n# to run without any HLT prescales\r\ndel process.PrescaleService\r\ndel process.MessageLogger\r\nprocess.load('FWCore.MessageLogger.MessageLogger_cfi')\r\n\r\nprocess.options.numberOfThreads = 32\r\nprocess.options.numberOfStreams = 32\r\n\r\nprocess.options.wantSummary = True\r\nprocess.GlobalTag.globaltag = cms.string( \"150X_dataRun3_HLT_v1\" )\r\n# # to run using the same HLT prescales as used online in LS 1000\r\n# process.PrescaleService.forceDefault = True\r\n\r\nfrom HLTrigger.Configuration.common import *\r\ndef customizeHLTFor49149(process):\r\n    ca_producers_pp = ['CAHitNtupletAlpakaPhase1@alpaka','alpaka_serial_sync::CAHitNtupletAlpakaPhase1']\r\n    for ca_producer in ca_producers_pp:\r\n        for prod in producers_by_type(process, ca_producer):\r\n            if hasattr(prod, 'geometry'):\r\n                g = getattr(prod, 'geometry')\r\n                g.startingPairs = cms.vuint32( [i for i in range(8)] + [i for i in range(13,19)])\r\n                setattr(prod, 'geometry', g)\r\n    return process\r\n\r\nprocess = customizeHLTFor49149(process)\r\n@EOF\r\nedmConfigDump \"${tmpfile}\" > hlt.py\r\n\r\ncmsRun hlt.py &> hlt.log\r\n\r\nbash -c 'echo $$ > cmsrun.pid; exec cmsRun hlt.py &> hlt.log'\r\njob_pid=$(cat cmsrun.pid)\r\necho \"cmsRun is running with PID: $job_pid\"\r\n\r\n# remove input files to save space\r\nrm -f run397813/run397813_ls0*_index*.*\r\n\r\n# prepare the files by concatenating the .ini and .dat files\r\nmkdir -p prepared\r\ncat run397813/run397813_ls0000_streamDQMGPUvsCPU_pid${job_pid}.ini run397813/run397813_ls0131_streamDQMGPUvsCPU_pid${job_pid}.dat > prepared/run397813_ls0131_streamDQMGPUvsCPU_pid${job_pid}.dat\r\ncp run397813/run397813_ls0131_streamDQMGPUvsCPU_pid${job_pid}.jsn prepared/run397813_ls0131_streamDQMGPUvsCPU_pid${job_pid}.jsn\r\n# manually edit to remove the extra 0 in the json file.\r\n```\r\n\r\nand then placed the resulting files under the path `$CMSSW_BASE/src/DQM/Integration/data/run397813`.\r\nThe resulting streamers files have been committed to the `cms-data` `DQM-Integration` repository via PR https://github.com/cms-data/DQM-Integration/pull/14 (that needs to be tested together with this one).\r\nI then run the unit test of the package via:\r\n\r\n```bash\r\n scram b runtests_TestDQMOnlineClient-pixelgpu_dqm_sourceclient\r\n scram b runtests_TestDQMOnlineClient-hcalgpu_dqm_sourceclient\r\n scram b runtests_TestDQMOnlineClient-ecalgpu_dqm_sourceclient\r\n scram b runtests_TestDQMOnlineClient-pfgpu_dqm_sourceclient\r\n```\r\n\r\nand I did not observe any issues.\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nNot a backport, but it will be backported to CMSSW_15_1_X for 2025 datat-taking operations.", "branch": "master", "changed_files": 2, "comments": 1, "commits": 3, "created_at": "1761678538", "deletions": 16, "labels": ["dqm-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-pending"], "milestone": "CMSSW_16_0_X", "number": 49237, "release-notes": [], "review_comments": 0, "state": "open", "title": "Pixel GPU Online DQM Client changes for CMSHLT-3147", "updated_at": "1761678559", "user": "mmusich"}