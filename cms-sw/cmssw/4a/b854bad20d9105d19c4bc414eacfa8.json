{"additions": 485, "auther_ref": "RawPrimeV2", "auther_sha": "cb97fa038efd8f503d1075db717e6a4c385121ea", "author": "silviodonato", "body": "#### PR description:\r\n\r\nThis PR adds an improved version of RawPrime (SiStripApproximateCluster). \r\nThe new version has been developed by @saswatinandan , the results are described in [CMS DP-2025/031](http://cds-lb.cern.ch/record/2936314?ln=el),  [EPS talk](https://indico.in2p3.fr/event/33627/contributions/155253/), [NGT presentation](https://indico.cern.ch/event/1517122/#1-round-table-discussion) (see [previous PR](https://github.com/cms-sw/cmssw/compare/CMSSW_15_0_X...saswatinandan:HI_test)).\r\nOn top of this, I applied some changes to allow CMSSW to run both versions of RawPrime using the same code (at the cost of adding a `version_` flag in the `SiStripApproximateCluster` dataformat) + some other minor improvements, mainly about code readability.\r\n\r\nIn summary:\r\n- by default `version=1` is used and it is expect to give no changes at all\r\n- in `version=2`:\r\n  - `avgCharge` is stored using 6 bits instead of 8 (ie. with a precision of 255/64 = 4 ADC)\r\n    - the remaining two bits are used to encode `filter_` and `peakFilter_` flags\r\n  - `barycenter_` will save the distance between the cluster barycenter instead of the cluster barycenter position\r\n     - `isSaturated_` flag is encoded in the first `barycenter_` bit\r\n   - the other 15 bits are used to store the distance between clusters with a precision of 1/21 strips ((2*768)/2^15 ) instead of 1/10th of strip\r\n  - new function `getBarycenter(...)` and `getAvgCharge(...)` have been added to return `float` instead of `int`\r\n  - the code of creating the `amplitudes_` of a `SiStripCluster` have been improved to give exactly the same value as `SiStripCluster::charge()`.\r\n  - SiStripApproximateClusterCollection:\r\n    - deletion of beginIndices_\r\n    - save the distance between `detId_` instead of their value.\r\n\r\nNote: The datamember `isSaturated_`, `peakFilter_` and `filter_` are not used anymore in V2 and should be removed when V1 will not be used anymore.\r\n\r\n#### PR validation:\r\n\r\nI prepared a ConfDb area for testing `/users/sdonato/2025Sept/RawSecond/HLT/V11` which creates two SiStripApproxClusters collections `hltSiStripClusters2ApproxClusters` and `hltSiStripClusters2ApproxClustersV2`.\r\nIt also decompresses these collections to standard si strip clusters `hltSiStripClustersFromRawPrime` and `hltSiStripClustersFromRawPrimeV2`.\r\n\r\nYou can download the configuration from `hltGetConfiguration /users/sdonato/2025Sept/RawSecond/HLT/V11 --globaltag auto:run3_hlt_HIon --input file:...aRAWfile.root --max-events 100 --eras Run3_2025 --prescale none --l1-emulator uGT --l1 L1Menu_Collisions2025_v1_3_0_xml`\r\nand then edit the configuration with\r\n```\r\nprocess.hltSiStripClusters2ApproxClusters.version = cms.uint32( 1 )\r\nprocess.hltSiStripClusters2ApproxClustersV2.version = cms.uint32( 2 )\r\nprocess.hltSiStripClusters2ApproxClusters.collectionVersion = cms.uint32( 1 )\r\nprocess.hltSiStripClusters2ApproxClustersV2.collectionVersion = cms.uint32( 2 )\r\nprocess.hltSiStripClustersFromRawPrime.collectionVersion = cms.uint32( 1 )\r\nprocess.hltSiStripClustersFromRawPrimeV2.collectionVersion = cms.uint32( 2 )\r\n\r\nprocess.hltOutputPhysicsHIPhysicsRawSecond.outputCommands.append(\"keep SiStripClusteredmNewDetSetVector_*_*_*\")\r\nprocess.hltOutputPhysicsHIPhysicsRawSecond.outputCommands.append(\"keep *_hltSiStripClusters2ApproxClusters_*_*\")\r\n```\r\nto enable the new versions and save the decompressed clusters.\r\n\r\nUsing [this script](https://sdonato.web.cern.ch/RawPrime/) I made comparisons between clusters collections:\r\n- original clusters vs compressed-decompressed v1 clusters [red]\r\n- original clusters vs compressed-decompressed v2 clusters [blue]\r\n\r\nin terms of diff of \r\n\r\n- barycenter\r\n- average charge\r\n<img width=\"796\" height=\"572\" alt=\"rawPrime_avgCharge_diff\" src=\"https://github.com/user-attachments/assets/d3f2a453-53a4-417d-b7e4-17fc958ead45\" />\r\n<img width=\"796\" height=\"572\" alt=\"rawPrime_barycenter_diff\" src=\"https://github.com/user-attachments/assets/99f3e260-cdd2-4936-8ef0-fbcab8ec4ef1\" />\r\n\r\nUsing another customization I computed the data reduction obtained running over 4000 events. It is 8.2% for the full event size (18% considering only  siStripApproximateCluster). A further 3.3% of reduction can be achieved applying a cluster charge cut, as shown in the presentation (no PR needed for this, only HLT configuration change).\r\nTest done using LZMA4, run=388350 lumi=11\r\n\r\n```\r\nprocess.hltOutputPhysicsHIPhysicsRawPrime.compressionAlgorithm = \"LZMA\"\r\nprocess.hltOutputPhysicsHIPhysicsRawPrime.compressionLevel = 4\r\nprocess.hltOutputPhysicsHIPhysicsRawSecond.compressionAlgorithm = \"LZMA\"\r\nprocess.hltOutputPhysicsHIPhysicsRawSecond.compressionLevel = 4\r\n```\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nThis PR is urgent, as we would like to have a backport to `CMSSW_15_1_X` for the upcoming HIon collisions. As discussed with TSG (@cms-sw/hlt-l2 ) and HIon (@icali @mandrenguyen) we would like to have a stream online using this new dataformat in the upcoming HIon run for testing (with the idea to use it in 2026 if the test is successful). \r\n\r\n", "branch": "master", "changed_files": 10, "comments": 25, "commits": 4, "created_at": "1759070292", "deletions": 31, "labels": ["reconstruction-pending", "pending-signatures", "tests-approved", "orp-pending", "requires-external", "code-checks-approved", "trk", "changes-dataformats"], "milestone": "CMSSW_16_0_X", "number": 49013, "release-notes": [], "review_comments": 3, "state": "open", "title": "New version of RawPrime (SiStripApproximateCluster)", "updated_at": "1759230310", "user": "silviodonato"}