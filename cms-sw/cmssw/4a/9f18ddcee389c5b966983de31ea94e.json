{"additions": 39, "auther_ref": "waitingTaskWithArenaHolder", "auther_sha": "16a69d8559d302b30315ac2dc2a902fbee4530e1", "author": "makortel", "body": "#### PR description:\r\n\r\nIn the framework the `doneWaiting()` is always called from within the main arena in the TBB thread pool, and therefore using\r\nWaitingTaskHolder is safe (`WaitingTaskWithArenaHolder` is needed only when `doneWaiting()` is called outside of the TBB arena).\r\n\r\nAvoiding `WaitingTaskWithArenaHolder` allows to avoid enqueue() operation when the `doneWaiting()` calls in the framework are the ones that decrease the task reference count to 0.\r\n\r\nResolves https://github.com/cms-sw/framework-team/issues/1125\r\n\r\n#### PR validation:\r\n\r\nChecked with gdb that a single-threaded test configuration with a module that uses `ExternalWork` (Alpaka-based module on the CPU serial backend, to be exact) where the `acquire()` does not leave any `WaitingTaskWithArenaHolder` alive (i.e. the `acquire()` does not really launch any asynchronous work) does not lead anymore to two TBB threads as a consequence of the `task_arena::enqueue()`.", "branch": "master", "changed_files": 6, "comments": 12, "commits": 1, "created_at": "1735332236", "deletions": 40, "labels": ["core-pending", "pending-signatures", "orp-pending", "tests-started", "code-checks-approved"], "milestone": "CMSSW_15_0_X", "number": 47029, "release-notes": [], "review_comments": 2, "state": "open", "title": "Use `WaitingTaskHolder` to signal `doneWaiting()` instead of `WaitingTaskWithArenaHolder` in framework", "updated_at": "1735567585", "user": "makortel"}