{"additions": 1, "auther_ref": "mm_dev_return_HLTRegionalEcalResonanceFilter_14_2_X", "auther_sha": "363424d448f8205ee66e3febe5ca35a2219aa3f1", "author": "mmusich", "body": "#### PR description:\r\n\r\nIn the JIRA ticket [CMSHLT-3397](https://its.cern.ch/jira/browse/CMSHLT-3379?focusedId=6588727&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-6588727) it was discussed that when running a script (akin to this one) [1] one gets the following crash:\r\n\r\n```\r\n----- Begin Fatal Exception 04-Nov-2024 15:28:03 CET-----------------------\r\nAn exception of category 'ProductNotFound' occurred while\r\n   [0] Processing  Event run: 375703 lumi: 746 event: 821822396 stream: 1\r\n   [1] Running path 'AlCa_EcalPi0EEonlyForHI_v13'\r\n   [2] Calling method for module EcalRecalibRecHitProducer/'hltAlCaPi0EEUncalibrator'\r\nException Message:\r\nPrincipal::getByToken: Found zero products matching all criteria\r\nLooking for type: edm::SortedCollection<EcalRecHit,edm::StrictWeakOrdering<EcalRecHit> >\r\nLooking for module label: hltAlCaPi0RecHitsFilterEEonlyRegional\r\nLooking for productInstanceName: pi0EcalRecHitsEE\r\n\r\n   Additional Info:\r\n      [a] If you wish to continue processing events after a ProductNotFound exception,\r\nadd \"TryToContinue = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\r\n\r\n----- End Fatal Exception -------------------------------------------------\r\n```\r\n\r\nThe reason has been traced to the fact that when running in \"open\"  mode if there aren't hits  and one of the upstream filters fails the output collections will not be created, but the processing will continue because the filter decision got ignored.\r\nFor instance [here](https://github.com/cms-sw/cmssw/blob/master/HLTrigger/special/plugins/HLTRegionalEcalResonanceFilter.cc#L559) the filter `HLTRegionalEcalResonanceFilter` returns false without putting the products in the event, but the filter decision being ignored, the processing will continue regardless leading to the missing products downstream. This could be fixed in the cmssw code, but it's not a showstopper for production. \r\nThe solution proposed here, for instance, entails putting the collections in the event before the return false statement in case there are not enough rechits in the collection.\r\n\r\n#### PR validation:\r\n\r\nRe-run the script in description and didn't get any crash.\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nN/A\r\n\r\n---\r\n[1]\r\n\r\n<details>\r\n  <summary>Click me</summary>\r\n  \r\n```bash\r\n#!/bin/bash -ex\r\n\r\nvoms-proxy-init -voms cms\r\n\r\nhltGetConfiguration /dev/CMSSW_14_1_0/HIon/V42 \\\r\n\t\t    --max-events 10 \\\r\n\t\t    --no-prescale \\\r\n\t\t    --no-output \\\r\n\t\t    --data \\\r\n\t\t    --input /store/hidata/HIRun2023A/HIZeroBias0/RAW/v1/000/375/703/00000/03000cf7-c12e-467f-9388-8d106e0ec320.root \\\r\n\t\t    --globaltag 141X_dataRun3_HLT_v1 \\\r\n\t\t    --eras Run3 \\\r\n\t\t    --l1-emulator uGT --l1 L1Menu_CollisionsHeavyIons2024_v1_0_5_xml \\\r\n\t\t    --customise HLTrigger/Configuration/CustomConfigs.customiseL1THLTforHIonRepackedRAW --open > hlt.py\r\n\r\ncmsRun hlt.py >& hlt.log\r\n```\r\n</details>", "branch": "master", "changed_files": 1, "comments": 1, "commits": 1, "created_at": "1730729439", "deletions": 4, "labels": ["hlt-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-pending"], "milestone": "CMSSW_14_2_X", "number": 46599, "release-notes": [], "review_comments": 0, "state": "open", "title": "`HLTRegionalEcalResonanceFilter`: put output collections in the event also if the filter fails", "updated_at": "1730729466", "user": "mmusich"}