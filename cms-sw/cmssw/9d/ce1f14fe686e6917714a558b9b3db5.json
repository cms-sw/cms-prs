{"additions": 165, "auther_ref": "PFProducer_cleanup_2", "auther_sha": "9a30bc0619a686dbaffd2b583eda55c035c0f926", "author": "guitargeek", "body": "#### PR description:\r\n\r\nThe particle flow code uses the k-d-tree data structure, which is also used in __RecoPixelVertexing/PixelTriplets__. It seems the pixel version was copy-pasted from PFProducer initially, but then significantly improved by @makortel in https://github.com/cms-sw/cmssw/pull/772. Nice work!\r\n\r\nI'm curious what would happen if we use this improved version in PFProducer, actually. If I understand https://github.com/cms-sw/cmssw/pull/772 correctly, there should be no change in physics output, but 40 % faster searches. Maybe we can test it once to see if this is really the case and if yes do an igprof to see if we also benefit from the speedup? The obvious benefit would be to avoid double implementation, even if no speedup.\r\n\r\nAs the templated KDTreeLinkerAlgo and  -Tools class is now used by two different reco packages, it was moved to __CommonTools/RecoAlgos__\r\n\r\nAdditional info: there seems to be another clone of the code in:\r\nhttps://github.com/cms-sw/cmssw/blob/master/RecoLocalCalo/HGCalRecAlgos/interface/KDTreeLinkerAlgoT.h\r\nhttps://github.com/cms-sw/cmssw/blob/master/RecoLocalCalo/HGCalRecAlgos/interface/KDTreeLinkerToolsT.h\r\n\r\nThat one is even more general, because it also has the dimension as a template. Maybe that development could also get incorporated in the new version in __CommonTools/RecoAlgos__, which is then used by PF, Pixel and HGCal. Note that there is also a more optimized version of a KDTree here, which got reimplemented from scratch:\r\n\r\nhttps://github.com/cms-sw/cmssw/blob/master/CommonTools/RecoAlgos/interface/FKDTree.h\r\n\r\n#### PR validation:\r\n\r\nCMSSW compiles and matrix tests run.", "branch": "master", "changed_files": 18, "closed_at": "1557254142", "comments": 29, "commits": 2, "created_at": "1556196703", "deletions": 581, "labels": ["code-checks-approved", "comparison-available", "fully-signed", "orp-approved", "reconstruction-approved", "tests-approved"], "merge_commit_sha": "aec25f3371ee30f8af01e4dc5aec2921674a0a78", "merged_at": "1557254142", "merged_by": "cmsbuild", "milestone": "CMSSW_10_6_X", "number": 26534, "release-notes": [], "review_comments": 2, "state": "closed", "title": "Bring performance improvement in KDTreeLinkerAlgo as in #772 to RecoParticleFlow", "updated_at": "1557254143", "user": "guitargeek"}