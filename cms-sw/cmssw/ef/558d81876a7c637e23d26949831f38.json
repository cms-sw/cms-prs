{"additions": 131, "auther_ref": "alca-move_LHCInfoDuringFill_to_lumiid_14_0_X", "auther_sha": "4326883e403d4dfed4f2467c549850a0d0e0535d", "author": "francescobrivio", "body": "#### PR description:\r\nSince, when used in the `duringFill` mode, both the `LHCInfoPerLS`and `LHCInfoPeFill` PopCons will have to populate tags in the HLT GT (with an _ad hoc_ customization in the HLT menu to get updated conditions via the `refreshTime` parameter), the `time-type` of the produced payloads/IOVs must be lumi based (see [`cond::TimeType::lumiid`](https://github.com/cms-sw/cmssw/blob/695ed7856207edf9efdcd61781836d2d1ba8140d/CondFormats/Common/interface/Time.h#L19C58-L19C64)).\r\n\r\nThis PR introduces a differentiation in how the payload/IOVs are produced depending on the \"mode\" (passed as external paramenter to the cmsRun command) used to run the O2O:\r\n - `endFill` mode: produce `timestamp`-type payloads\r\n - `duringFill` mode: produce `lumiid`-type payloads\r\n\r\n#### Further considerations\r\nCurrently the IOVs are produced directly from the LSs analyzed to get the payload data: if the appends of such IOVs to an `hlt`-sync'ed tag were to be performed via the `uploadConditions.py` script, they would be all rejected due to the synchronization policy.\r\nBut, after discussion with @mmusich, we realized that the PopCon upload mechanism does not exploits the uploader script, but rather uses the [`PoolDBOutputService::writeMany`](https://github.com/cms-sw/cmssw/blob/695ed7856207edf9efdcd61781836d2d1ba8140d/CondCore/DBOutputService/interface/PoolDBOutputService.h#L107) method, so the appends should be possible.\r\nGiven the values of the parameters of the payloads (mainly `beta*` and `crossinging angle`) do not change very frequently, I suppose it is fine to upload the IOVs even though the HLT has moved on to processing a next LS: the next time the `refreshParameter` mechanism kicks in, the conditions consumed by HLT should be updated with the updated values.\r\n\r\nAlternatively one could use the [`OnlineDBOutputService::writeIOVForNextLumisection`](https://github.com/cms-sw/cmssw/blob/695ed7856207edf9efdcd61781836d2d1ba8140d/CondCore/DBOutputService/interface/OnlineDBOutputService.h#L37) method (which is used for the OnlineBeamSpot workflow), which reads the LS currently being processed in HLT and writes the payload to `currentLS+latency`, to guarantee an upload \"in the future\" wrt what HLT is processing.\r\nThe drawback is that this would require **significant** changes in the code (probably the whole module would have to be moved outside the PopCon infrastructure).\r\n\r\n@JanChyczynski @mmusich @vavati @fwyzard  Any suggestion is **more than welcome**, especially on this last point! \r\n\r\nI'm opening this as draft PR since there are still a few points to be addressed:\r\n- [x] Make sure that all the IOVs insertions are performed with the correct time-type, especially when the `addEmptyPayload()` method is used\r\n- [x] Make sure the tests already implemented cover all possible modes of running\r\n- [ ]  Decide if the IOVs used for appending new payloads is fine or not (see description above)\r\n\r\n-----\r\n#### PR validation:\r\nSome preliminary private tests, forcing the time-type of the tags to be produced as `lumiid` even in `endFill` mode, show that the IOVs are correctly created as LS based and the intervals match the LSs from OMS.\r\nCommand examples:\r\n```\r\ncmsRun CondTools/RunInfo/python/LHCInfoPerFillPopConAnalyzer.py mode=endFill\r\ncmsRun CondTools/RunInfo/python/LHCInfoPerLSPopConAnalyzer.py mode=endFill\r\ncmsRun CondTools/RunInfo/python/LHCInfoPerFillPopConAnalyzer.py mode=duringFill\r\ncmsRun CondTools/RunInfo/python/LHCInfoPerLSPopConAnalyzer.py mode=duringFill\r\n```\r\n\r\n#### Backport:\r\nNot a backport, eventual 133X backports will be opened depending on the 2024 data-taking schedule - to be decided.\r\n", "branch": "master", "changed_files": 4, "comments": 8, "commits": 5, "created_at": "1706799747", "deletions": 17, "labels": ["db-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-approved"], "milestone": "CMSSW_14_0_X", "number": 43837, "release-notes": [], "review_comments": 3, "state": "open", "title": "Fix LHCInfoPer* PopCons to produce lumi-type IOVs when running in duringFill mode", "updated_at": "1707210815", "user": "francescobrivio"}