{"additions": 126, "auther_ref": "devel_13_1_X_cleanUpSiStripHitEfficiency", "auther_sha": "a50bccd41f329742bbc6ec7a59ff2c160406e005", "author": "mmusich", "body": "#### PR description:\r\n\r\nThis is a quick follow-up to https://github.com/cms-sw/cmssw/pull/41050 introducing a more refined error treatment in trend of efficiency vs lumi, PU and BX in `SiStripHitEfficiencyHarvester`, using Clopper-Pearson confidence interval instead of naive binomial errors.\r\nI profit of this PR to address a couple of comments leftover in #41050:\r\n   * [use uniform convention for data-members in SiStripHitEffFromCalibTree](https://github.com/cms-sw/cmssw/commit/55ab1ab21c5c2056e176059e4d5f7261eb9440bb)\r\n   *  [direct initialization of subdetfound and subdettotal](https://github.com/cms-sw/cmssw/commit/a50bccd41f329742bbc6ec7a59ff2c160406e005)\r\n\r\n#### PR validation:\r\n\r\nRun successfully:\r\n\r\n```\r\ncmsDriver.py stepHarvest -s ALCAHARVEST:SiStripHitEff --conditions 124X_dataRun3_Express_v9 --scenario pp --data --era Run3 --dasquery='file dataset=/StreamExpress/Run2022G-PromptCalibProdSiStripHitEff-Express-v1/ALCAPROMPT run=362437' -n -1 --customise_commands='process.alcasiStripHitEfficiencyHarvester.isAtPCL = cms.bool (False)'\r\n```\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nNot a backport, but to be backported together with #41050 in 13.0.X\r\n", "branch": "master", "changed_files": 3, "comments": 0, "commits": 3, "created_at": "1678908431", "deletions": 36, "labels": ["alca-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-pending", "trk"], "milestone": "CMSSW_13_1_X", "number": 41065, "release-notes": [], "review_comments": 0, "state": "open", "title": "More refined error treatment in trend of efficiency vs lumi, PU and BX in `SiStripHitEfficiencyHarvester`", "updated_at": "1678908458", "user": "mmusich"}