{"additions": 242, "auther_ref": "acquireReturnsAValue", "auther_sha": "6cded086a87f07ecfbe6fb2e578442660d576925", "author": "wddgit", "body": "#### PR description:\r\n\r\nFor ESProducers using the ExternalWork feature, the acquire function now returns a value. The value is moved into the CallbackExernalWork object temporarily. When produce is called, the object is passed in as an argument. The object is moved not copied if that is supported by its type. The type can be anything because it is a template parameter, but we expect the most common types used will be std::unique_ptr, std::shared_ptr, and std::optional. One could just pass any type, for example an int will work. This seemed to be the simplest and most flexible design.\r\n\r\nOne weakness of the new interface is that it requires some type. Acquire cannot just return void and the produce function must have the 2nd argument. In this case, acquire can just return 0 and the argument to produce can be unused. \r\n\r\nESProducers not using ExternalWork should not be affected. Their interface does not change.\r\n\r\n#### PR validation:\r\n\r\nAn existing unit test was extended to cover this new case. There is no existing code outside that unit test that uses this new feature. We should see no behavior changes in other tests or production processes.\r\n", "branch": "master", "changed_files": 7, "comments": 14, "commits": 1, "created_at": "1681307482", "deletions": 72, "labels": ["core-pending", "pending-signatures", "orp-pending", "tests-started", "code-checks-approved"], "milestone": "CMSSW_13_1_X", "number": 41328, "release-notes": [], "review_comments": 16, "state": "open", "title": "Implement return value for ESProducer acquire function", "updated_at": "1681931341", "user": "wddgit"}