{"additions": 269, "auther_ref": "simpleMemoryCheck", "auther_sha": "6f4436e34c9beee08b9c8538ae3452be0abb767a", "author": "makortel", "body": "#### PR description:\r\n\r\nThis PR extends the `SimpleMemoryCheck` reporting with\r\n* A printout on the early termination (`SIGUSR2` signal)\r\n  * In case WM kills the job because of using too much memory, we'd get the numbers closest in time to that moment\r\n* VSIZE and RSS at the endJob (mostly to compare to other numbers added to endJob printout)\r\n* Overall allocator statistics from jemalloc (only if jemalloc is being used)\r\n  * These are collected only for the \"significant events\" (i.e. when VSIZE or RSS is among the largest 3 VSIZE or RSS measurements), and shown at the endJob summary (when enabled)\r\n  * These are also shown in the early termination message, and at endJob\r\n* Read `AnonHugePages`, and RSS and VSIZE of mmapped files from `/proc/<pid>/smaps` (if can open the file)\r\n  * The RSS/VSIZE of mmapped files should give measures how much our code size contributes to the process' RSS/VSIZE\r\n    * I decided to track separately the contribution of `.pcm` files (generated by ROOT), because I noticed the `.pcm` contribution was quite large (hundreds of MB)\r\n\r\nI hope these numbers will help to figure out if the application itself is allocating a lot of memory, if the allocator is using a lot more memory than the application asks for, or if the operating system ends up using a lot of memory e.g. because of fragmentation of transparent huge pages (see https://github.com/cms-sw/cmssw/issues/42387).\r\n\r\nThis PR was motivated by https://github.com/cms-sw/cmssw/issues/46040, especially the behavior of steep rise of RSS.\r\n\r\nResolves https://github.com/cms-sw/framework-team/issues/1082\r\n\r\n#### PR validation:\r\n\r\nTested privately with an example job in https://github.com/cms-sw/cmssw/issues/46040 that the jemalloc and smaps information gets added, also in the case the job is terminated early with `SIGUSR2` signal. Tested also the `SimpleMemoryCheck` works when run through `cmsRunGlibC` and `cmsRunTC` (with jemalloc information missing, of course).\r\n", "branch": "master", "changed_files": 1, "comments": 30, "commits": 4, "created_at": "1733263497", "deletions": 80, "labels": ["core-pending", "pending-signatures", "tests-approved", "orp-pending", "requires-external", "code-checks-approved"], "milestone": "CMSSW_15_0_X", "number": 46859, "release-notes": [], "review_comments": 0, "state": "open", "title": "Extend `SimpleMemoryCheck` service to report jemalloc and smaps information, and on early termination signal", "updated_at": "1733498029", "user": "makortel"}