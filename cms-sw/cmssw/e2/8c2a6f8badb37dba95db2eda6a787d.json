{"additions": 5, "auther_ref": "IsolateTTreeFill", "auther_sha": "5e6c0e9a1fbbcf9c6e9a8d1a963b18bd34344109", "author": "dan131riley", "body": "In a CMSSW job with many threads, a small number of output branches, and ROOT IMT enabled, the parallel IMT compression can run out of its own tasks to run.  That can lead to the PoolOutputModule thread stealing a CMSSW task, potentially a long running one (like G4 simulation),  leading to lengthy PoolOutputModule stalls.  This has been observed to cause significant performance degradation and excessive stalls for GEN-SIM jobs with 24 or more threads.  This was observed by @slava77 in scaling tests with 32 threads.\r\n\r\nThis PR wraps the primary PoolOutputModule call to TTree::Fill inside a TBB this_task_arena::isolate() context that restricts the current thread to only execute tasks created by it or its children, preventing stealing of other CMSSW tasks.", "branch": "master", "changed_files": 1, "comments": 7, "commits": 1, "created_at": "1524064259", "deletions": 1, "labels": ["code-checks-approved", "comparison-pending", "core-pending", "orp-pending", "pending-signatures", "tests-approved"], "milestone": "CMSSW_10_2_X", "number": 23002, "release-notes": [], "review_comments": 0, "state": "open", "title": "isolate TTree::Fill so IMT doesn't steal long running CMS tasks", "updated_at": "1524070483", "user": "dan131riley"}