{"additions": 5, "auther_ref": "ttree-fill-isolation", "auther_sha": "d669d845f0184a0aace953d1f445ad5b01448d67", "author": "dan131riley", "body": "#### PR description:\r\n\r\nWhen IMT is enabled (the default for multi-threaded jobs), `TTree::Fill()` parallelizes compression using a `TTaskGroup`.  If the initial task in the group finishes before the subtasks, it can steal a framework task, which can cause large delays while the group waits for the framework task to finish.  This PR adds calls to `tbb::this_task_arena::isolate()` which prevents the initial task stealing any subtasks that it did not create.  This matches what is done in [PoolOutputModule](https://github.com/cms-sw/cmssw/blob/71f33231f1fb503b1a2cf6cff13a7b78b130cc71/IOPool/Output/src/RootOutputTree.cc#L322-L324).\r\n\r\nNoticed while reviewing the RNTuple NanoAOD producer.\r\n\r\n#### PR validation:\r\n\r\nTrivial technical fix.  It compiles, and runtests passes.", "branch": "master", "changed_files": 1, "closed_at": "1623241537", "comments": 7, "commits": 1, "created_at": "1623160202", "deletions": 3, "labels": ["code-checks-approved", "fully-signed", "orp-approved", "tests-approved", "xpog-approved"], "merge_commit_sha": "460a4af84f859b8f4da6e28cee306572f9b17932", "merged_at": "1623241537", "merged_by": "cmsbuild", "milestone": "CMSSW_12_0_X", "number": 34030, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Add tbb task isolation so TTree::Fill doesn't steal framework tasks", "updated_at": "1623241537", "user": "dan131riley"}