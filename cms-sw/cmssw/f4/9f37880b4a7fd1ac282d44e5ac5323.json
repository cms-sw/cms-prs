{"additions": 849, "auther_ref": "Propagate", "auther_sha": "2ebdc261eedaa3c961af430ea43ba8b79a1dec4f", "author": "VinInn", "body": "This Pull Request encompasses few related improvements\n\n1) Clean Propagator and TrajectoryState interface\nin particular avoids accidental conversion between \"double\" and \"SurfaceSide\" and various override issues.\n2) remove old-fashion custom intrusive-reference counting in favor of std::shared_ptr\n3) make use of std::shared_ptr ability to use custom allocator in single instances to reduce memory-churn during pattern recognition (see comments inlines)\n\nnumber 3 has now a less striking effect due to the large speed-up of jemalloc itself\n\nno regression expected\nno regression observed\n\nlatest tests on top of SMatrix improvements that act also in the very same portion of code (construction of TrajectoryState in the AnalyticPropagator \"called\" from CkfTrajectoryBuilder)\n", "branch": "CMSSW_7_1_X", "changed_files": 58, "closed_at": "1399134432", "comments": 33, "commits": 18, "created_at": "1398577873", "deletions": 1650, "labels": ["alca-approved", "comparison-available", "fastsim-pending", "pending-signatures", "reconstruction-approved", "simulation-approved", "tests-approved"], "merge_commit_sha": "117a259bd9619dd8562eccb20c78f42dd020acb5", "merged_at": "1399134432", "merged_by": "ktf", "milestone": "CMSSW_7_1_0_pre8", "number": 3534, "release-notes": [], "review_comments": 10, "state": "closed", "title": "Clean Propagator and TrajectoryState interface, avoid memory churn", "updated_at": "1492768313", "user": "VinInn"}