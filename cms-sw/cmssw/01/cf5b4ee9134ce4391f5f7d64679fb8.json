{"additions": 166, "auther_ref": "CMSSW_9_4_0_pre3_exo_effstr_fix", "auther_sha": "2ceb5c5592d26d40cd8d59a21762bd468455b658", "author": "DryRun", "body": "This is the 9_4_X version of https://github.com/cms-sw/cmssw/pull/21387.\r\n\r\nFollowing up on https://github.com/cms-sw/cmssw/pull/21239, this PR reduces the large number of efficiency strings generated by the HLT harvesting configurations (Exotica, Higgs, and SMP). The large number corresponds to:\r\n[all analyses] * [all triggers] * [all object types] * [all plot types]\r\n\r\nI reduced the strings by only using the actual analysis-trigger combinations, rather than compiling all of the triggers into a single giant list. I also moved the creation of the postprocessors to functions, e.g. `make_exo_postprocessor()`.\r\n\r\nFor Exotica and SMP, the changes were relatively trivial, but hltHiggsPostProcessors_cff.py was much more involved... the lists used in the `for` loops were repeated re-initialized and appended to at random points in the code, making it very difficult to figure out what was going on. I ran some runTheMatrix tests to make sure I didn't accidentally remove any plots, but this might merit more scrutiny. Feedback would be welcome, if anyone has a suggestion for how to do this systematically. ", "branch": "CMSSW_9_4_X", "changed_files": 8, "closed_at": "1513238940", "comments": 17, "commits": 8, "created_at": "1511189155", "deletions": 436, "labels": ["comparison-available", "dqm-approved", "fully-signed", "orp-approved", "tests-approved"], "merge_commit_sha": "a7117c8423b1be90222cf70fa00063da7cc72f7b", "merged_at": "1513238940", "merged_by": "cmsbuild", "milestone": "CMSSW_9_4_X", "number": 21388, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Fix for large number of efficiency_strings in HLT harvesting (9_4_X)", "updated_at": "1513238940", "user": "DryRun"}