{"additions": 845, "auther_ref": "alca-simBS", "auther_sha": "0ad7781412bb073010c7cc1e014f20bc7d3d9dd9", "author": "francescobrivio", "body": "#### PR description:\r\nFollowing the discussion in #41894, and in view of future developments that will come from that PR (i.e. move the Gen step to consume this Record from the GT instead of the VtxSmearing), this PR updates several utilities to handle payloads of the `SimBeamSpotObjects` type, in particular:\r\n - Added a few getters and setters methods in CondFormats/BeamSpotObjects/interface/SimBeamSpotObjects.h\r\n   - **Important Note:** despite changing CondFormat, this update only modifies methods, so it does not break backward compatibility! (also, this record was never used before )\r\n - Added `SimBeamSpotObjects` to CondCore/Utilities scripts to dump, fetch and import the payloads\r\n - Moved and renamed `IOMC/EventVertexGenerators/src/BeamProfile2DB.cc` to `CondTools/BeamSpot/plugins/BeamProfile2DBWriter.cc`\r\n    - Added the corresponding cfg to write `SimBeamSpotObjects` payloads\r\n    - All the needed conversions to the correct units are removed from here and left to the `IOMC/EventVertexGenerators/src/BetafuncEvtVtxGenerator.cc`. In this way the payloads contain the same units as the VtxSmearing parameters (basically in `cm`)\r\n - Added `CondTools/BeamSpot/plugins/BeamProfile2DBReader.cc`\r\n    - and its cfg to read the payloads and dump them in a txt file and a ROOT TTRee\r\n- Added unitTests for the new writer/reader plugins\r\n- Added a payload inspector for this record\r\n\r\nFYI @mmusich @dzuolo @gennai @lguzzi\r\n\r\n#### PR validation:\r\nRunning:\r\n```\r\ncmsRun BeamProfile2DBWriter_cfg.py inputTag=simBS_Early2023_v2\r\n```\r\ngenerates the sqlite file `test_simBS_Early2023_v2.db` which contains the correct `SimBeamSpotObjects` and can be inspected with:\r\n```\r\n$ conddb --db test_simBS_Early2023_v2.db listTags\r\n> Name                TimeType  ObjectType          Synchronisation  EndOfValidity  Insertion_time              Description   \r\n> ------------------  --------  ------------------  ---------------  -------------  --------------------------  -----------   \r\n> simBS_Early2023_v2  Run       SimBeamSpotObjects  any              -1             2023-06-10 17:51:03.375867  New Tag       \r\n\r\n$ conddb --db test_simBS_Early2023_v2.db list simBS_Early2023_v2\r\n> Since: Run   Insertion Time              Payload                                   Object Type          \r\n> -----------  --------------------------  ----------------------------------------  ------------------   \r\n> 1            2023-06-10 17:51:03.375873  b30887b53955865d79ccd7e9d437d6ddda283d1d  SimBeamSpotObjects   \r\n\r\n$ conddb --db test_simBS_Early2023_v2.db dump b30887b53955865d79ccd7e9d437d6ddda283d1d\r\n> <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?>\r\n> <!DOCTYPE boost_serialization>\r\n> <boost_serialization signature=\"serialization::archive\" version=\"19\">\r\n> <cmsCondPayload class_id=\"0\" tracking_level=\"0\" version=\"0\">\r\n>\t<fX0>4.58531999999999967e-02</fX0>\r\n>\t<fY0>-1.69659999999999984e-02</fY0>\r\n>\t<fZ0>-7.49920000000000031e-02</fZ0>\r\n>\t<fSigmaZ>3.60000000000000009e+00</fSigmaZ>\r\n>\t<fbetastar>3.00000000000000000e+01</fbetastar>\r\n>\t<femittance>3.93099999999999993e-08</femittance>\r\n>\t<fPhi>0.00000000000000000e+00</fPhi>\r\n>\t<fAlpha>0.00000000000000000e+00</fAlpha>\r\n>\t<fTimeOffset>0.00000000000000000e+00</fTimeOffset>\r\n> </cmsCondPayload>\r\n> </boost_serialization>\r\n```\r\n\r\nThe Payload Inspector plots can be obtained with:\r\n```\r\ngetPayloadData.py \\\r\n\t--plugin pluginSimBeamSpot_PayloadInspector \\\r\n\t--plot plot_SimBeamSpotParameters \\\r\n\t--tag simBS_Early2023_v2 \\\r\n\t--time_type Run \\\r\n\t--iovs '{\"start_iov\": \"1\", \"end_iov\": \"1\"}' \\\r\n\t--db sqlite:test_simBS_Early2023_v2.db \\\r\n\t--test\r\n```\r\nand \r\n```\r\ngetPayloadData.py \\\r\n\t--plugin pluginSimBeamSpot_PayloadInspector \\\r\n\t--plot plot_SimBeamSpotParametersDiffTwoTags \\\r\n\t--tag simBS_Early2023_v2 \\\r\n\t--time_type Run \\\r\n\t--iovs '{\"start_iov\": \"1\", \"end_iov\": \"1\"}' \\\r\n\t--tagtwo simBS_EOY2022_v2 \\\r\n\t--iovstwo '{\"start_iov\": \"1\", \"end_iov\": \"1\"}' \\\r\n\t--db sqlite:test_simBS_EOY2022_v2.db \\\r\n\t--test\r\n```\r\nAnd result in the two following plots:\r\n<img src=\"https://github.com/cms-sw/cmssw/assets/7822641/e8335132-1817-4766-8c74-8b1f222ddb6c\" width=\"400\" height=\"400\"> <img src=\"https://github.com/cms-sw/cmssw/assets/7822641/d47d7594-7c93-4399-b040-64a207996172\" width=\"400\" height=\"400\">\r\n\r\n#### Backport:\r\nNot a backport. \r\nA backport to 13_1_X will be opened, but I think it's too late to backport this to 13_0_X.", "branch": "master", "changed_files": 21, "comments": 21, "commits": 9, "created_at": "1686423660", "deletions": 100, "labels": ["simulation-pending", "alca-approved", "pending-signatures", "tests-approved", "orp-pending", "db-approved", "code-checks-approved", "tracking"], "milestone": "CMSSW_13_2_X", "number": 41918, "release-notes": [], "review_comments": 28, "state": "open", "title": "Update utilities for SimBeamSpotObjects handling", "updated_at": "1686640222", "user": "francescobrivio"}