{"additions": 10, "auther_ref": "gpu_cluster_charge_cut_fix_2021_10_25", "auther_sha": "325467607e1cbca54709cd42fcf4a564391c896e", "author": "czangela", "body": "#### PR description:\r\n\r\nThis issue occurs running on some `TTbar` data generated with `Run3` end-of-2024 conditions.\r\nThe full dataset can be found at https://cmsweb.cern.ch/das/request?instance=prod/phys03&input=file+dataset%3D%2FTTbar%2Ftsusa-TTbar_14TeV_GSDR_2024_121X_mcRun3_2024_realistic_v8_10k-58ae893e2544746328b272cd68e5d2f1%2FUSER, there is a trimmed file in `/afs/cern.ch/work/a/aczirkos/public/gpu_charge_crash_10_25/` containing the crashing event in `step2_2.root`, running on this should be enough to reproduce the error.\r\n\r\nIn case there are too many clusters in a module, the local reconstruction fails in `gpuClusterChargeCut.h` with the following error:\r\n\r\n```\r\nWarning too many clusters in module 824 in block 369: 2932 > 1024\r\nterminate called after throwing an instance of 'std::runtime_error'\r\n  what():  \r\n/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/16fe195e1e17677c5420a19d749bdb25/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_12_1_X_2021-10-24-2300/src/HeterogeneousCore/CUDAUtilities/src/CachingHostAllocator.h, line 543:\r\ncudaCheck(error = cudaEventRecord(search_key.ready_event, search_key.associated_stream));\r\ncudaErrorIllegalAddress: an illegal memory access was encountered\r\n```\r\n\r\nThere is a full log at `/afs/cern.ch/work/a/aczirkos/public/gpu_charge_crash_10_25/log`.\r\n\r\nThis is due to an indexing bug, where we set [`clusterId[i] = invalidModuleId` first](https://cmssdt.cern.ch/dxr/CMSSW/source/RecoLocalTracker/SiPixelClusterizer/plugins/gpuClusterChargeCut.h#61), and then we use this to index the [`newClusId` array](https://cmssdt.cern.ch/dxr/CMSSW/source/RecoLocalTracker/SiPixelClusterizer/plugins/gpuClusterChargeCut.h#121) which [has size `maxNumClustersPerModules`](https://cmssdt.cern.ch/dxr/CMSSW/source/RecoLocalTracker/SiPixelClusterizer/plugins/gpuClusterChargeCut.h#29). (`invalidModuleId` >  `maxNumClustersPerModules`)\r\n\r\nThis PR fixes this error.\r\n\r\n#### PR validation:\r\n\r\nThis is a short recipe for reproducing the error, and checking that this PR fixes it.\r\nOn a GPU equipped machine:\r\n\r\n```console\r\ncmsrel CMSSW_12_1_X_2021-10-24-2300\r\ncd CMSSW_12_1_X_2021-10-24-2300/src\r\ncmsenv\r\ngit cms-addpkg RecoLocalTracker/SiPixelClusterizer\r\nmkdir ../runtests\r\ncd ../runtests\r\nrsync -avzzr aczirkos@lxplus.cern.ch:/afs/cern.ch/work/a/aczirkos/public/gpu_charge_crash_10_25/* .\r\n# run without fix\r\ncmsRun step3.py\r\n# apply fix and run with it\r\ncd -\r\ngit apply ../runtests/fix.patch\r\nscram b -j\r\ncd -\r\ncmsRun step3.py\r\n```\r\n\r\n#### if this PR is a backport please specify the original PR and why you need to backport that PR:\r\n\r\nkindly pinging @tsusa @connorpa ", "branch": "master", "changed_files": 3, "closed_at": "1635226237", "comments": 11, "commits": 2, "created_at": "1635158764", "deletions": 1, "labels": ["reconstruction-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-approved"], "milestone": "CMSSW_12_1_X", "number": 35829, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Fix for crash in gpuClusterChargeCut.h after \"warning too many clusters ...\"", "updated_at": "1635226369", "user": "czangela"}