{"additions": 4, "auther_ref": "fixME0RecHitProducerMemory", "auther_sha": "7aedbcc2d40c3a7c8624d1fa4afdc3867202e9a1", "author": "mark-grimes", "body": "Fixes a memory leak in ME0RecHitBaseAlgo, which is called by ME0RecHitProducer.  A product is `new`ed but only added to an `OwnVector` if an `if` condition is met.  If the condition is not met, the memory is leaked.  The effect for ttbar at 200 pileup is about 0.26 Mb an event (see plot).\n\nPlot attached for the memory retained by select modules at 200 pileup.  This pull request _should_ fix the leak shown by the green line \"me0RecHits\".  Note that this plot also shows a leak for ME0SegmentProducer (light purple line \"me0Segments\") but I can't find it in the code.  I'll put this pull request in and keep looking.\n\n![potentiallyleakingmodules200pu](https://cloud.githubusercontent.com/assets/6480160/6211110/f0c923be-b5d6-11e4-89d7-19afea21633a.png)\n", "branch": "CMSSW_6_2_X_SLHC", "changed_files": 1, "closed_at": "1424188020", "comments": 5, "commits": 1, "created_at": "1424082446", "deletions": 3, "labels": ["comparison-pending", "orp-pending", "pending-signatures", "reconstruction-pending", "tests-approved"], "merge_commit_sha": "6235c46caddb0c10dcfc07086dc347b44453a80c", "merged_at": "1424188020", "merged_by": "cmsbuild", "milestone": "Next CMSSW_6_2_X_SLHC", "number": 7753, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Fix memory leak in ME0RecHitProducer", "updated_at": "1426006047", "user": "mark-grimes"}