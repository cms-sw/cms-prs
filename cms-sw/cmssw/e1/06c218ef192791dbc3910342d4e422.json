{"additions": 1, "auther_ref": "eventfilter-ubsan-1", "auther_sha": "20ac4041e7fe1bd680cf6eacf9580331c1010b62", "author": "davidlt", "body": "The following change is required to solve undefined behavior detected by\nUBSan.\n\n```\n405 EventFilter/ESRawToDigi/src/ESUnpacker.cc:17:22\n405 EventFilter/ESRawToDigi/src/ESUnpacker.cc:18:22\n405 EventFilter/ESRawToDigi/src/ESUnpacker.cc:19:22\n405 EventFilter/ESRawToDigi/src/ESUnpacker.cc:20:22\n405 EventFilter/ESRawToDigi/src/ESUnpacker.cc:21:22\n405 EventFilter/ESRawToDigi/src/ESUnpacker.cc:22:22\n405 EventFilter/ESRawToDigi/src/ESUnpacker.cc:23:22\n405 EventFilter/ESRawToDigi/src/ESUnpacker.cc:24:22\n405 EventFilter/ESRawToDigi/src/ESUnpacker.cc:25:22\n```\n\n`~Word64(0)` is `-1` and left shifting a negative number is undefined\nbehavior by C++.\n\nThese produce 3645 runtime errors from UBSan on full matrix. That's ~15%\nof all detected runtime errors.\n\n`Word32` is defined as unsigned type. Keep it consistent and define\n`Word64` as `unsigned long long`, thus resolved undefined behavior.\n\nLooking at the code these 64-bit masks are not used outside this package\nand they are only used with bitwise and operators. The change should not\nhave any side effects.\n\nTest case to prove that it does not affect the masks and solves the issue:\n\n```\n$ cat -n t3.cpp\n     1  #include <iostream>\n     2\n     3  typedef long long Word64;\n     4  typedef unsigned long long UWord64;\n     5\n     6  int main(void) {\n     7    Word64 m1, m2, m4, m5, m6, m8, m12, m16, m32;\n     8    m1  = ~(~Word64(0) << 1);\n     9    m2  = ~(~Word64(0) << 2);\n    10    m4  = ~(~Word64(0) << 4);\n    11    m5  = ~(~Word64(0) << 5);\n    12    m6  = ~(~Word64(0) << 6);\n    13    m8  = ~(~Word64(0) << 8);\n    14    m12 = ~(~Word64(0) << 12);\n    15    m16 = ~(~Word64(0) << 16);\n    16    m32 = ~(~Word64(0) << 32);\n    17    std::cout << std::hex << m1 << \" \" << m2 << \" \" << m4 << \" \" << m5 << \" \" << m6 << \" \" << m8 << \" \" << m12 << \" \" << m16 << \" \" << m32 << std::endl;\n    18    UWord64 new1, new2, new4, new5, new6, new8, new12, new16, new32;\n    19    new1  = ~(~UWord64(0) << 1);\n    20    new2  = ~(~UWord64(0) << 2);\n    21    new4  = ~(~UWord64(0) << 4);\n    22    new5  = ~(~UWord64(0) << 5);\n    23    new6  = ~(~UWord64(0) << 6);\n    24    new8  = ~(~UWord64(0) << 8);\n    25    new12 = ~(~UWord64(0) << 12);\n    26    new16 = ~(~UWord64(0) << 16);\n    27    new32 = ~(~UWord64(0) << 32);\n    28    std::cout << std::hex << new1 << \" \" << new2 << \" \" << new4 << \" \" << new5 << \" \" << new6 << \" \" << new8 << \" \" << new12 << \" \" << new16 << \" \" << new32 << std::endl;\n    29\n    30    return 0;\n    31  }\n$ clang++ -g -fno-omit-frame-pointer -std=c++11 -fsanitize=undefined -std=c++11 t3.cpp\n$ ./a.out\nt3.cpp:8:22: runtime error: left shift of negative value -1\nt3.cpp:9:22: runtime error: left shift of negative value -1\nt3.cpp:10:22: runtime error: left shift of negative value -1\nt3.cpp:11:22: runtime error: left shift of negative value -1\nt3.cpp:12:22: runtime error: left shift of negative value -1\nt3.cpp:13:22: runtime error: left shift of negative value -1\nt3.cpp:14:22: runtime error: left shift of negative value -1\nt3.cpp:15:22: runtime error: left shift of negative value -1\nt3.cpp:16:22: runtime error: left shift of negative value -1\n1 3 f 1f 3f ff fff ffff ffffffff\n1 3 f 1f 3f ff fff ffff ffffffff\n```\n\nSigned-off-by: David Abdurachmanov David.Abdurachmanov@cern.ch\n", "branch": "CMSSW_7_2_X", "changed_files": 1, "closed_at": "1411485006", "comments": 5, "commits": 1, "created_at": "1411289644", "deletions": 1, "labels": ["comparison-available", "fully-signed", "orp-pending", "reconstruction-approved", "tests-approved"], "merge_commit_sha": "57ee19d2818ac6b16e9877e671f86fef60dbdbb3", "merged_at": "1411485006", "merged_by": "davidlange6", "milestone": "Next CMSSW_7_2_X", "number": 5458, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Change Word64 type from long long to unsigned long long", "updated_at": "1411485007", "user": "davidlt"}