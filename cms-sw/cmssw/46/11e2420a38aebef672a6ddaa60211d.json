{"additions": 78, "auther_ref": "AvoidUnnecessaryLocks", "auther_sha": "7b60ff66b08b2c4e7349623f85c8bbed05e3abc2", "author": "wmtan", "body": "The ROOT function GetBaseClassOffset() does locking that seriously hurts threading efficiency, especially in analysis jobs using pat::. In the vast majority of the cases (in fact in all cases so far observed), the actual offset to the base class object from the derived class object was 0.\nThis PR replaces  GetBaseClassOffset() with a call to a function of a class template  that returns 0 by default. In cases where the actual offset is non-zero, the class can be specialized to return the proper value. In cases where the true offset is non-zero, and the class has not been properly specialized, a segfault should result, which will be noticed.\n", "branch": "CMSSW_7_6_X", "changed_files": 8, "closed_at": "1443261197", "comments": 9, "commits": 3, "created_at": "1443027483", "deletions": 24, "labels": ["analysis-pending", "comparison-available", "core-approved", "orp-pending", "pending-signatures", "tests-approved"], "merge_commit_sha": "e091e876b3eaac4314b6b431897d34448698a5ae", "merged_at": "1443261197", "merged_by": "davidlange6", "milestone": "CMSSW_7_6_X", "number": 11441, "release-notes": [], "review_comments": 7, "state": "closed", "title": "Avoid unnecessary locks in ROOT function GetBaseClassOffset()", "updated_at": "1443287168", "user": "wmtan"}