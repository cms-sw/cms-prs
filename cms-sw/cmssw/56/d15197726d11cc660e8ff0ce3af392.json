{"additions": 12, "auther_ref": "dqmRootOutputModuleConsumes", "auther_sha": "0e73855154275a3024db7e6a3182bb5fcc804c93", "author": "makortel", "body": "#### PR description:\r\n\r\n#29553 implies that all data dependencies for modules in Tasks must be specified to keep those modules alive and running (in principle the proper dependencies should be declared anyway, that PR makes it necessary also in practice). It turned out that the `DQMRootOutputModule` currently does not declare dependencies on all the DQM analyzers. Easiest fix is to do `consumesMany<DQMToken, ...>` for both Lumi and Run products.\r\n\r\nActually I tried first to use the `outputCommands` (which by the for some reason is\r\nhttps://github.com/cms-sw/cmssw/blob/3f89112fddb9bd4f384fa7acacc5fb81720bee16/Configuration/EventContent/python/EventContent_cff.py#L356-L357\r\nwhich to me doesn't seem to make much sense), but that would require making `DQMToken` persistable, which would require an underscore a forbidden character for all modules producing `DQMToken`. An underscore appears to be in wide use for DQM modules, which is why I scrapped that approach (I did some amount of migration to no-underscore module labels, if DQM is interested I can make pull request(s) of what I did).\r\n\r\n#### PR validation:\r\n\r\nLimited matrix runs.", "branch": "master", "changed_files": 2, "closed_at": "1588229833", "comments": 12, "commits": 1, "created_at": "1588167758", "deletions": 1, "labels": ["code-checks-approved", "comparison-available", "dqm-approved", "fully-signed", "orp-approved", "tests-approved"], "merge_commit_sha": "bbb47cf6e9336602403b379c073aff3d77dc3c99", "merged_at": "1588229833", "merged_by": "cmsbuild", "milestone": "CMSSW_11_1_X", "number": 29586, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Make DQMRootOutputModule to depend on all DQM modules via DQMTokens", "updated_at": "1588229833", "user": "makortel"}