{"additions": 10, "auther_ref": "tblayer-displaced-crossings-112x", "auther_sha": "20461e076839cc2807c94a319f077da34aaf0e74", "author": "aminnj", "body": "When trying to compute expected barrel pixel layer hits for tracks with a displaced starting point, the logic in TBLayer::computeCrossings fails to return crossings when the starting point is between the inner and outer cylinders of a pixel layer. In the following plot of barrel pixel layers projected into the transverse plane, the current logic will return crossing points in blue for a dimuon pair originating at the red point, but fails to provide crossing points in the layer just above the red point.\r\n\r\n![image](https://user-images.githubusercontent.com/5760027/83901373-82db9c80-a70f-11ea-83e2-39a30a0807c2.png)\r\n\r\nThis PR modifies the logic to allow for such crossings to be returned by not requiring that both innerCrossing and outerCrossing have solutions.\r\n\r\nIn my tests, \"prompt\" tracks are unaffected.", "branch": "master", "changed_files": 1, "closed_at": "1593672099", "comments": 39, "commits": 2, "created_at": "1591367665", "deletions": 3, "labels": ["code-checks-approved", "comparison-available", "fully-signed", "orp-approved", "reconstruction-approved", "tests-approved"], "merge_commit_sha": "c33bab3219db4ca6732a7c851803919c4ce32f9a", "merged_at": "1593672099", "merged_by": "cmsbuild", "milestone": "CMSSW_11_2_X", "number": 30127, "release-notes": [], "review_comments": 3, "state": "closed", "title": "TBLayer computeCrossings doesn't allow for some displaced starting points", "updated_at": "1593672099", "user": "aminnj"}