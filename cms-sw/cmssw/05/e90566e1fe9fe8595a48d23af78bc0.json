{"additions": 28, "auther_ref": "NanoAODTools_dev", "auther_sha": "c975bc25b4e862fe0fe841091b7c7056e0218a9b", "author": "namapane", "body": "#### PR description:\r\n\r\nThis PR includes some improvements:\r\n- Preserve original branch type when updating an existing branch. This fixes a nasty issue that occurs when the user updates a branch but specifies a different type than the original one (eg Int instead of Short). The previous implementation did not check the existing type and replaced the internal buffer with a new one of the specified type, resulting in memory corruption within ROOT, and random crashes. \r\n- In the context of the above, the default type for len variables has be changed to \"I\" as this is currently the type of all lenVars in recent nanoAOD versions.\r\n- Properly close the json file, that was opened and never closed.\r\n- fix a ROOT vs Python ownership race for the TTreeReader, which was sometimes deleted by both at end of job, causing, in very rare cases, a crash.\r\n\r\n#### PR validation:\r\n- Tested running on existing nanos, with replaced variables of mismatched type\r\n- The ownership problem was showing up as an error in the valgrind memcheck output. With the fix, the valgrind error disappears..", "branch": "master", "changed_files": 3, "comments": 3, "commits": 2, "created_at": "1738915094", "deletions": 5, "labels": ["pending-signatures", "tests-pending", "orp-pending", "code-checks-approved", "xpog-pending"], "milestone": "CMSSW_15_1_X", "number": 47289, "release-notes": [], "review_comments": 0, "state": "open", "title": "Add protection for type change when updating branches", "updated_at": "1738915211", "user": "namapane"}