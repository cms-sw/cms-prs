{"additions": 17, "auther_ref": "LHCInfoPer_duringFill_endFillTime_fix_pr", "auther_sha": "9f25c47fa3389632e2947fdd63ea9c42770b0d9f", "author": "CTPPS", "body": "#### PR description:\r\n\r\nFixes bugs in `LHCInfoPerFill` and `LHCInfoPerLS` PopCons in `duringFill` mode causing it not to recognize a fill as ongoing. It caused the PopCons not process any fills and not write any data in this mode.\r\n\r\nDuringFill mode is supposed to only process ongoing fills and write only one - the newest available payload for each execution during stable beam. It interprets a fill as ongoing if its end_time (taken from OMS) is null which means it didn't end. It is not checking the value for being `null` directly but checking if the `end_time` converted to `cond::Time_t` is equal to 0. It was not working correctly because conversion from `end_time` value taken from OMS as `boost::posix_time::ptime` to `cond::Time_t` converts `null` to `2035-10-29 06:32:22`.\r\n\r\n#### PR validation:\r\n\r\nIt was validated by running the PopCons via `LHCInfoPerFillPopConAnalyzer.py` and `LHCInfoPerLSPopConAnalyzer.py` with `mode=duringFill` during and outside of stable beam of an ongoing fill. It was checked if the payload was written given the right circumstances (ongoing stable beam) and if the written data is correct.\r\n\r\n#### Backporting\r\n\r\nI think it should be backported to 13_2_X, but it depends on what release the Per* PopCons are going to be deployed.\r\n", "branch": "master", "changed_files": 3, "comments": 11, "commits": 1, "created_at": "1695235840", "deletions": 8, "labels": ["db-pending", "pending-signatures", "tests-approved", "orp-pending", "code-checks-approved"], "milestone": "CMSSW_13_3_X", "number": 42837, "release-notes": [], "review_comments": 0, "state": "open", "title": "fixed LHCInfoPer* PopCons not recoginizing ongoing fills in duringFill mode", "updated_at": "1695660454", "user": "JanChyczynski"}