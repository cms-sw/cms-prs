{"additions": 9, "auther_ref": "SiPixelDynamicInefficiency_PayloadInspector_fix_issue_with_PU_parametrization_plot_representation", "auther_sha": "f2c6ad93905246c0e135fa053e6b5ee28900c478", "author": "mmusich", "body": "#### PR description:\r\n\r\nAttempt to fix the issue described at https://github.com/CMSTrackerDPG/Tasks/issues/1#issuecomment-1457758909 .\r\nIt looks like that when the library is loaded from `cvmfs` instead that local installation, the very same plot that in local renders fine gets screwed up.\r\nAdded also some debug statement that were useful to address https://github.com/CMSTrackerDPG/Tasks/issues/1#issuecomment-1457826352\r\n\r\n#### PR validation:\r\n\r\nRun private tests:\r\n\r\n```bash\r\nsetenv SCRAM_ARCH el8_amd64_gcc11\r\ncmsrel CMSSW_13_1_X_2023-03-06-2300\r\ncd CMSSW_13_1_X_2023-03-06-2300/src\r\ngit cms-addpkg CondCore/SiPixelPlugins\r\nscram b -j 20\r\ngetPayloadData.py --plugin pluginSiPixelDynamicInefficiency_PayloadInspector --plot plot_SiPixelDynamicInefficiencyPUParametrization --tag SiPixelDynamicInefficiency_phase1_2023_v1_fix --time_type Run --iovs '{\"start_iov\": \"1\", \"end_iov\": \"1\"}' --db Prod --test \r\n```\r\n\r\nAlso I tested that in a local installation in `CMSSSW_13_1_0_pre1` in which the problem appeared, it went away, although I cannot be fully certain that this works fine until there is a pre-release with this included. \r\nApparently there is a standing issue in using IBs in the central Payload Inspector web-service, see https://its.cern.ch/jira/browse/CMSDBBROWS-134\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nN/A\r\n", "branch": "master", "changed_files": 1, "comments": 4, "commits": 1, "created_at": "1678179594", "deletions": 10, "labels": ["db-pending", "pending-signatures", "orp-pending", "tests-started", "bug-fix", "code-checks-approved", "trk"], "milestone": "CMSSW_13_1_X", "number": 40981, "release-notes": [], "review_comments": 0, "state": "open", "title": "`SiPixelDynamicInefficiency_PayloadInspector` fix issue with PU parametrization plot polynomial representation", "updated_at": "1678180176", "user": "mmusich"}