{"additions": 1231, "auther_ref": "nSigmaZSelection", "auther_sha": "9b6d4af70b514fc251c91cd87f252cfda7f8afe5", "author": "shchauha", "body": "- added an nSigmaZ cut in fast trajectory seed producer based on beamspot/primary vertex significance (was missing)\n- clarified fast trajectory seed producer configuration\n  - cleaner distinction between reco-level cuts (mimicking those from reco tracking) and sim-level cuts (only for performance)\n  - improved distance (dz, dxy,nSigmaZ,..) cuts based on either beamspot or primary vertex (PV was never used properly before)\n- throw exceptions if an odd trajectory seeding configuration is detected (e.g. tighter sim-level cuts than reco-level)\n- renamed iterative tracking collections & labels to the corresponding collections in reco tracking\n- utilize more reco tracking configuration in FastSim tracking by, e.g.\n  - import trajectory seed selections\n  - add track merger modules to reject duplicates\n  - ...\n- each iteration skips simtracks which let to a reco track in previous iterations passing high purity & chi2 cuts (simtrack id masking)\n", "branch": "CMSSW_7_5_X", "changed_files": 48, "closed_at": "1428916394", "comments": 10, "commits": 56, "created_at": "1425411707", "deletions": 1060, "labels": ["comparison-pending", "fastsim-pending", "hlt-pending", "orp-pending", "pending-signatures", "tests-rejected"], "milestone": "CMSSW_7_5_X", "number": 8048, "release-notes": [], "review_comments": 32, "state": "closed", "title": "Streamlining FastSim tracking (cuts & quality flags) along reco tracking, adapt to reco tracking naming scheme of collections", "updated_at": "1428916394", "user": "shchauha"}