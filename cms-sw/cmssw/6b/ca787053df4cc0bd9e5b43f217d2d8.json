{"additions": 1992, "auther_ref": "NewMemoryPoolV1", "auther_sha": "574cca4c553978aa1ea6919b2a41ac5c2f69a8bb", "author": "VinInn", "body": "This PR replaces the old \"notcub\" cache allocator with a memory pool featuring\r\n\r\nlockfree operations\r\nbackend agnostic implementation\r\nThe data interface is based on a simple Buffer that is completely backend agnostic\r\nThe allocation interface (makeBuffer) currently depends on cudaStream_t that can be easily hidden behind void * or a light opaque struct\r\nA new feature is a \"Bundle deleter\": buffers can be bundle together and then freed in just one operation: this reduces the number of cuda calls.\r\nAll previous users of the cache allocator (at least for Pixel wf) have been migrated.\r\n\r\nTests passes: it is not slower than previous implementation. Need a free machine to make definitive tests.\r\n\r\nSome cleanup is still required to remove debug statements.\r\n\r\nPurely technical no regression expected.\r\n\r\nDraft Slides for a possible presentation available @ https://cernbox.cern.ch/index.php/s/Ax4NHYGLHbG8N1C", "branch": "master", "changed_files": 49, "comments": 10, "commits": 38, "created_at": "1652615854", "deletions": 736, "labels": ["reconstruction-pending", "alca-pending", "pending-signatures", "tests-approved", "orp-pending", "code-checks-approved", "heterogeneous-pending"], "milestone": "CMSSW_12_5_X", "number": 37952, "release-notes": [], "review_comments": 6, "state": "open", "title": " New Heterogeneous Memory Pool", "updated_at": "1652861824", "user": "VinInn"}