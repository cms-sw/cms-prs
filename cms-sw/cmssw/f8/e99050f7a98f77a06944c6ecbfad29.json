{"additions": 16, "auther_ref": "clang-tidy_add_build-using-namespacce", "auther_sha": "1e06e1bee3d7a8314729f1516e944192caab15ad", "author": "iarspider", "body": "(no \"using\" in header files outside of functions)\r\n\r\n#### PR description:\r\n\r\nCurrent implementation of CMS code rule 1 will choke on [code](https://github.com/cms-sw/cmssw/blob/master/EventFilter/CSCRawToDigi/interface/CSCALCTHeader.h#L43-L58) like\r\n```cpp\r\nunsigned short int NTBins() const {\r\n#ifdef LOCAL_UNPACK\r\n    switch (firmwareVersion) {\r\n#else\r\n    switch (firmwareVersion.load()) {\r\n#endif\r\n<...>\r\n    }\r\n}\r\n```\r\nbecause of imbalance of curly braces. The rule checking code is ran on raw sources and knows nothing about preprocessor definitions. The clang-tidy rule [google-build-using-namespace](https://clang.llvm.org/extra/clang-tidy/checks/google-build-using-namespace.html) can be used to avoid the mess associated with finding function start and end and eventually removing them.\r\n\r\n#### PR validation:\r\n\r\nLocal tests", "branch": "master", "changed_files": 2, "comments": 5, "commits": 1, "created_at": "1652704817", "deletions": 14, "labels": ["core-pending", "pending-signatures", "tests-pending", "orp-pending", "code-checks-approved"], "milestone": "CMSSW_12_5_X", "number": 37962, "release-notes": [], "review_comments": 0, "state": "open", "title": "Replace CMS code rule 1 with clang-tidy check build-using-namespace", "updated_at": "1652709971", "user": "iarspider"}