{"additions": 2094, "auther_ref": "gpu-sistripclusterizer", "auther_sha": "6f70ea520b3136646b56f7b9bd980c39ab5b10d5", "author": "dan131riley", "body": "#### PR description:\r\n\r\nThis PR is targeted at 12_1_0, not 12_0_0.\r\n\r\nElements are:\r\n\r\nStructure of Arrays (SoA) version of SiStripClusters.  The number of array elements for the cluster ADCs is fixed to a maximum of SiStripClustersCUDA::kClusterMaxStrips, currently set to 16:\r\n\r\nCUDADataFormats/SiStripCluster/interface/SiStripClustersCUDA.h\r\nCUDADataFormats/SiStripCluster/src/SiStripClustersCUDA.cc\r\n\r\nSome associated typedefs:\r\n\r\nCUDADataFormats/SiStripCluster/interface/GPUtypes.h\r\n\r\nSoA version of SiStripClusterizerConditions plus an auxiliary class to map FedID & channel to DetID & APV pair:\r\n\r\nCalibFormats/SiStripObjects/interface/SiStripClusterizerConditionsGPU.h\r\nCalibFormats/SiStripObjects/src/SiStripClusterizerConditionsGPU.cc\r\n\r\nEvent setup dependency records:\r\n\r\nRecoLocalTracker/Records/interface/SiStripClusterizerConditionsGPURcd.h\r\nRecoLocalTracker/Records/src/SiStripClusterizerConditionsGPURcd.cc\r\n\r\nData structure for mapping raw data into DetID/strip ordering:\r\n\r\nRecoLocalTracker/SiStripClusterizer/plugins/ChanLocsGPU.h\r\nRecoLocalTracker/SiStripClusterizer/plugins/ChanLocsGPU.cc\r\n\r\nProducer that consumes raw data and produces SiStripClustersCUDA:\r\n\r\nRecoLocalTracker/SiStripClusterizer/plugins/ClustersFromRawProducerGPU.cc\r\n\r\nTop level algorithm implementation that sequences kernels:\r\n\r\nRecoLocalTracker/SiStripClusterizer/plugins/SiStripRawToClusterGPUKernel.h\r\nRecoLocalTracker/SiStripClusterizer/plugins/SiStripRawToClusterGPUKernel.cc\r\n\r\nCUDA implementation of the ThreeThresholdAlgorithm.  Includes kernels that identify candidate seed strips, finds the left and right boundaries of cluster candidates, and checks the cluster cuts and calculates the charge and barycenter:\r\n\r\nRecoLocalTracker/SiStripClusterizer/plugins/clusterGPU.cuh\r\nRecoLocalTracker/SiStripClusterizer/plugins/clusterGPU.cu\r\n\r\nCUDA kernel to reorganize raw data on the GPU into DetID/strip order:\r\n\r\nRecoLocalTracker/SiStripClusterizer/plugins/unpackGPU.cuh\r\nRecoLocalTracker/SiStripClusterizer/plugins/unpackGPU.cu\r\n\r\nProducer that consumes SiStripClustersCUDA and produces edmNew::DetSetVector<SiStripCluster>:\r\n\r\nRecoLocalTracker/SiStripClusterizer/plugins/ClustersFromSOAProducer.cc\r\n\r\nESProducer for SiStripClusterizerConditionsGPU:\r\n\r\nRecoLocalTracker/SiStripClusterizer/plugins/SiStripClusterizerConditionsGPUESProducer.cc\r\n\r\nCustomize function to replace the RECO siStripClusters from DIGIs producer with the siStripClusters from RawData producer.  Intended to only be used for validation:\r\n\r\nRecoLocalTracker/SiStripClusterizer/python/customizeStripClustersFromRaw.py\r\n\r\nModified:\r\n\r\nConfig for siStripClusters from RawData producer modified to use the gpu process modifier and the SwitchProducerCUDA to switch between SiStripClusterizerFromRaw and SiStripClusterizerFromRawGPU.  As far as I know this config is not used in production:\r\n\r\nRecoLocalTracker/SiStripClusterizer/python/SiStripClusterizerOnDemand_cfi.py\r\n\r\nVarious BuildFile.xml and event setup registration.\r\n\r\n#### PR validation:\r\n\r\nValidation plots comparing the standard clusterizer with the GPU versions with discarding clusters larger than the max (16 strips) or creating a faux cluster centered on the real barycenter can be found here:\r\n\r\nhttps://www.classe.cornell.edu/~dsr/mic-track/validation/PR/\r\n\r\nThe lack of a significant difference for the two GPU cases is still under investigation.\r\n\r\nRunning\r\n```\r\nrunTheMatrix.py -w gpu --command=\"--procModifier=gpu  --customise=RecoLocalTracker/SiStripClusterizer/customizeStripClustersFromRaw.customizeHLTStripClustersFromRaw \" -t 8 \r\n```\r\n4 of the wfs that run local strip reconstruction fail in step4 with the error\r\n```\r\n----- Begin Fatal Exception 23-Jul-2021 13:38:47 EDT-----------------------\r\nAn exception of category 'InvalidReference' occurred while\r\n   [0] Processing  Event run: 1 lumi: 1 event: 7 stream: 2\r\n   [1] Running path 'validation_step'\r\n   [2] Calling method for module SiPixelPhase1HitsV/'pixelOnlyHitsAnalyzerV'\r\nException Message:\r\nClusterTPAssociation has OmniClusterRefs with ProductIDs 2:712 but got OmniClusterRef/ProductID with ID 3:28. This is typically caused by a configuration error.\r\n----- End Fatal Exception -------------------------------------------------\r\n```\r\nwhich still needs to be understood.\r\n", "branch": "master", "changed_files": 32, "comments": 44, "commits": 11, "created_at": "1627240643", "deletions": 10, "labels": ["reconstruction-pending", "alca-pending", "pending-signatures", "tests-approved", "orp-pending", "code-checks-approved", "heterogeneous-pending"], "milestone": "CMSSW_12_1_X", "number": 34618, "release-notes": [], "review_comments": 53, "state": "open", "title": "CUDA implementation of RecoLocalTracker/SiStripCluster  ClustersFromRawProducer", "updated_at": "1633471832", "user": "dan131riley"}