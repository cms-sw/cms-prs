{"additions": 970, "auther_ref": "storeMuonHits", "auther_sha": "ce7956ebbf06e6a48c004c660f770ae6309031f9", "author": "bendavid", "body": "#### PR description:\r\n\r\nPrecision measurements using muons might want to be able to refit the muon tracks (and the momentum scale corrections for W mass are moving in this direction).\r\n\r\nThis PR adds thinned collections of TrackExtra and the corresponding TrackingRecHits and Strip/Pixel clusters to AOD for those tracks which are associated to muon::bestTrack() with some cuts applied to the muons.\r\n(this means that for most muons with pt<200GeV only the pixel and strip rechits are stored and not the muon chamber ones, because bestTrack points to the inner track unless the muon is purely standalone).  This behaviour could be modified if desired to store some additional trackExtra/hits for the global track.\r\n\r\nAdditionally, further slimmed collections of the above are added to MINIAOD.\r\n\r\nThe framework \"ThinnedAssociation\" functionality described in \r\nhttps://github.com/cms-sw/cmssw/pull/5515\r\nhttps://twiki.cern.ch/twiki/bin/view/CMSPublic/SWGuideThinnedCollections\r\nis used to accomplish this without having to rekey the reco::Track which is already embedded in the pat::Muon objects in MINIAOD.\r\n\r\nThe current cuts which are applied are extremely loose (pt>3 || isPFMuon) for AOD, and all slimmedMuons for MINIAOD (where slimmedMuons in MINIAOD are a strict subset of the above criteria)\r\n\r\nThe reco::TrackExtraBase interface has been modified so that the references work properly to thinned collections of RecHits.  The offset accessor is left in place for now, because the places where this is used already load the hits collections manually and bypass the RefCore entirely, so this is no less safe than before.  The access to the RefCore has been removed since it wasn't used anywhere and would expose some additional unsafe cases with these changes.\r\n\r\nThe EDProductGetter and related interfaces have been modified to allow passing an additional optional argument to getThinnedProduct(s) in order to retrieve thinned indices pointing to a specific product id.  This also necessitates protecting against ```ProductResolver::unscheduledWasNotRun()``` since now one may try to access the thinned collections in the same job where they have been produced.\r\n\r\nThis new interface is used to add some high level helper functions in RefItemGet (but open to suggestions if they should go somewhere else).  The interface is also used by a new general \"ThinningSelectorByRefBase\" class to efficiently find the indices in the thinned collection for the general use case that one loops over a separate collection and gathers references to the collection being thinned.\r\n\r\nI've also added a \"modify\" interface to the ThinningProducer to allow for operations such as the zeroing of data members to save further space during thinning. (ie combining \"thinning\" and \"slimming\" in the same producer).  This is used here to zero out the TrajectoryParameters (updated state on each layer) and TrackResiduals for the TrackExtra, as well as one of the two inner/outer states+covariance (the one which is note needed for track refitting.)\r\n(n.b. the previous numbers from the earlier version of this PR already had the TrajectoryParameters and TrackResiduals zeros, since the full copy constructor of the TrackExtra was not being used in order to allow rekeying of the references.  Now the full copy constructor is called, and these members, plus one of the two states+covariances are explicitly zerod out afterwards.)\r\n\r\nIn principle especially for inside-out tracks it should be possibly to just use the state at the beamline stored in the reco::Track, such that both the inner and outer states and covariances could be zerod in the TrackExtra, but this would need further investigation.\r\n\r\nThe ThinningProducer has also been extended to support edmNew::DetSetVector<T> which is the collection type used for the Strip/Pixel clusters.\r\n\r\nTested using 11834.0 (TTbar 2021 realistic with PU Run3_Flat55To75_PoissonOOTPU) 500 events.\r\n\r\nThis PR does not touch any existing producers and only adds additional collections.  Redundant collections have now also been removed from the reco sequence and event content for AOD since the full collections for some of the TrackExtras and TrackingRecHits are already available there.\r\n\r\nThe additional collections in AOD are:\r\n```\r\nBranch Name | Average Uncompressed Size (Bytes/Event) | Average Compressed Size (Bytes/Event) \r\nrecoTrackExtras_thinnedGeneralTrackExtras__RECO. 2404.06 1034.18\r\nTrackingRecHitsOwned_thinnedGeneralTrackHits__RECO. 8634.43 989.166\r\nSiStripClusteredmNewDetSetVector_thinnedSiStripClusters__RECO. 2310.06 793.23\r\nSiPixelClusteredmNewDetSetVector_thinnedSiPixelClusters__RECO. 1598.75 700.75\r\nedmThinnedAssociation_thinnedSiStripClusters__RECO. 479.766 191.838\r\nedmThinnedAssociation_thinnedGeneralTrackHits__RECO. 628.868 120.884\r\nedmThinnedAssociation_thinnedSiPixelClusters__RECO. 187.872 77.694\r\nTrackingRecHitsOwned_thinnedGlobalMuonHits__RECO. 150.518 77.31\r\nTrackingRecHitsOwned_thinnedTevMuonHitsPicky__RECO. 126.572 63.382\r\nTrackingRecHitsOwned_thinnedTevMuonHitsFirstHit__RECO. 67.984 38.734\r\nTrackingRecHitsOwned_thinnedTevMuonHitsDyt__RECO. 69.056 38.278\r\nedmThinnedAssociation_thinnedGeneralTrackExtras__RECO. 81.916 31.082\r\nedmThinnedAssociation_thinnedTevMuonHitsPicky__RECO. 52.78 16.194\r\nedmThinnedAssociation_thinnedGlobalMuonHits__RECO. 53.092 16.178\r\nedmThinnedAssociation_thinnedTevMuonHitsFirstHit__RECO. 52.44 16.134\r\nedmThinnedAssociation_thinnedTevMuonHitsDyt__RECO. 52.252 15.826\r\n```\r\n\r\n(and the total size per event increases from 684 to 689 kB for a 0.6% increase)\r\n\r\nThe additional collections in MINIAOD are:\r\n```\r\nBranch Name | Average Uncompressed Size (Bytes/Event) | Average Compressed Size (Bytes/Event) \r\nrecoTrackExtras_slimmedGeneralTrackExtras__RECO. 2768.86 936.264\r\nrecoTrackExtras_slimmedStandAloneMuonExtras__RECO. 125.632 34.93\r\nrecoTrackExtras_slimmedGlobalMuonExtras__RECO. 44.304 13.102\r\nrecoTrackExtras_slimmedTevMuonExtrasPicky__RECO. 33.692 10.744\r\nrecoTrackExtras_slimmedTevMuonExtrasDyt__RECO. 31.044 9.792\r\nrecoTrackExtras_slimmedTevMuonExtrasFirstHit__RECO. 29.888 9.428\r\nTrackingRecHitsOwned_slimmedGeneralTrackHits__RECO. 8201.5 1159.14\r\nTrackingRecHitsOwned_slimmedStandAloneMuonHits__RECO. 662.078 247.924\r\nTrackingRecHitsOwned_slimmedGlobalMuonHits__RECO. 147.234 63.852\r\nTrackingRecHitsOwned_slimmedTevMuonsHitsPicky__RECO. 122.512 49.056\r\nTrackingRecHitsOwned_slimmedTevMuonHitsDyt__RECO. 65.956 25.202\r\nTrackingRecHitsOwned_slimmedTevMuonHitsFirstHit__RECO. 63.636 23.35           \r\nSiStripClusteredmNewDetSetVector_slimmedSiStripClusters__RECO. 2130.35 851.382\r\nSiPixelClusteredmNewDetSetVector_slimmedSiPixelClusters__RECO. 1415.15 626.918\r\nedmThinnedAssociation_thinnedSiStripClusters__RECO. 478.052 191.252\r\nedmThinnedAssociation_thinnedGeneralTrackHits__RECO. 628.66 129.95\r\nedmThinnedAssociation_thinnedSiPixelClusters__RECO. 183.862 70.524\r\nedmThinnedAssociation_slimmedGeneralTrackHits__RECO. 593.964 43.468\r\nedmThinnedAssociation_slimmedSiStripClusters__RECO. 452.19 41.068\r\nedmThinnedAssociation_slimmedSiPixelClusters__RECO. 176.31 21.924\r\nedmThinnedAssociation_thinnedGeneralTrackExtras__RECO. 77.012 21.82\r\nedmThinnedAssociation_slimmedGeneralTrackExtras__RECO. 75.196 11.628\r\nedmThinnedAssociation_slimmedStandAloneMuonHits__RECO. 50.672 9.078\r\nedmThinnedAssociation_slimmedStandAloneMuonExtras__RECO. 47.372 8.338\r\nedmThinnedAssociation_thinnedGlobalMuonHits__RECO. 48.072 7.974\r\nedmThinnedAssociation_thinnedTevMuonHitsPicky__RECO. 47.684 7.922\r\nedmThinnedAssociation_slimmedTevMuonsHitsPicky__RECO. 47.714 7.896\r\nedmThinnedAssociation_slimmedGlobalMuonHits__RECO. 48.072 7.886\r\nedmThinnedAssociation_thinnedTevMuonHitsFirstHit__RECO. 47.23 7.82\r\nedmThinnedAssociation_slimmedTevMuonHitsFirstHit__RECO. 47.23 7.796\r\nedmThinnedAssociation_thinnedTevMuonHitsDyt__RECO. 47.232 7.686\r\nedmThinnedAssociation_thinnedTevMuonExtrasFirstHit__RECO. 46.634 7.656\r\nedmThinnedAssociation_slimmedTevMuonHitsDyt__RECO. 47.232 7.646\r\nedmThinnedAssociation_thinnedGlobalMuonExtras__RECO. 46.572 7.626\r\nedmThinnedAssociation_slimmedTevMuonExtrasFirstHit__RECO. 46.634 7.616\r\nedmThinnedAssociation_thinnedTevMuonExtrasPicky__RECO. 46.592 7.606\r\nedmThinnedAssociation_slimmedTevMuonExtrasPicky__RECO. 46.592 7.574\r\nedmThinnedAssociation_slimmedGlobalMuonExtras__RECO. 46.572 7.562\r\nedmThinnedAssociation_thinnedTevMuonExtrasDyt__RECO. 46.5 7.498\r\nedmThinnedAssociation_slimmedTevMuonExtrasDyt__RECO. 46.5 7.458\r\n```\r\n\r\nAnd the total per event increases from 102kB to 107kB (4.4% increase)\r\n\r\nThe cuts at both AOD and MINIAOD level are configurable, so the size can be made much smaller if needed.  For W mass and weak mixing angle we could just put pt>20 and it will be negligible, but if we derive corrections which others want to use, it could be motivated to go lower (4l analyses use muons with pt>5GeV for example)\r\n\r\nBecause no existing producers or collections are touched, we are also considering the possibility to backport this to CMSSW_10_6_X for the large UL W/Z MC samples.\r\n\r\nOpen issues:\r\nAre the additional helper functions in RefItemGet useful/needed/in the right place/have the desired interface?\r\n\r\nIs the modification of objects during thinning in this way acceptable from  framework standpoint?\r\n\r\nIs the size increase acceptable or do we need to thin or slim more aggressively?  (increasing pT cuts will reduce the size needed very steeply)\r\n\r\nInvestigating whether anything else is needed to refit global/standalone muon tracks (though not so interested in this case for W mass)\r\n\r\nNeed to decide on what strategy if any is acceptable for backporting this to the run 2 UL campaign.  Currently this functionality is DISABLED for run 2 UL using the run2_miniAOD_UL process modifier.  Depending on the strategy for introducing this into production and whether it would be applied to all new MC samples in the future, we may need an additional process modifier, and/or add a configuration switch so that the producers which run in the MINIAOD step can gracefully skip missing input.\r\n(This might need a bit of care to implement consistently in the ThinningProducer so as not to leave dangling ThinnedAssociations)\r\n\r\nLonger term:\r\nFollowing the discussion in Cross-POG, probably it would be useful to have an interface to ThinningProducer which allows configuring multiple selectors which act in OR (for the typical use case that there are several different reasons you might want to keep e.g a track, after looping over electrons, muons, taus, etc).\r\n\r\n", "branch": "master", "changed_files": 49, "closed_at": "1599227571", "comments": 156, "commits": 21, "created_at": "1593970950", "deletions": 100, "labels": ["analysis-pending", "code-checks-approved", "comparison-pending", "core-pending", "orp-pending", "pending-signatures", "reconstruction-pending", "tests-pending", "xpog-pending"], "milestone": "CMSSW_11_2_X", "number": 30544, "release-notes": [], "review_comments": 18, "state": "closed", "title": "[RFC] Store TrackExtra, TrackingRecHits, and SiPixel/StripClusters for muons in AOD+MINIAOD", "updated_at": "1599227571", "user": "bendavid"}