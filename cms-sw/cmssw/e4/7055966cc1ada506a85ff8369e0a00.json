{"additions": 2481, "auther_ref": "EGScaleAndSmearForReMiniAOD_101X", "auther_sha": "d42cd5da7967f9b541a7c0a85fae216e5297071a", "author": "Sam-Harper", "body": "Dear All, \r\n\r\nThis is mostly a complete re-write of the E/gamma Scale & Smearing code to bring it up to minimal acceptable standards. This code is not perfect, many things could be done better but perfect is the enemy of good.  It is functionally equivalent to https://github.com/cms-sw/cmssw/pull/22308\r\n\r\nThis is step one in an evolution of E/gamma energy correctors. You will notice significant ground work has been done in energy regression management. It is a future goal to remove the badness that is \"EGExtraInfoModifierFromDB\" and instead have the regression all calculated in simple classes which can be wrapped in producers or modifiers as we see fit. \r\n\r\nGuide to changes:\r\nReducedEGProducer has been modified to allow the energy to be changed inside it. In hindsight, it would be have been better to have a general modification framework rather than such a specific hardcoded option.  It is the easiest option here to modify the electrons rather an introduce another intermediate step. A reminder, VID re-run on the miniAOD output must give  identical results hence ReducedEGProducer needs to already have any modifiers applied to it.  Note, I am still \"abusing\" the PFClusterIsolation maps, this will be fixed by just renaming the parameters to something more neutral \r\n\r\nAll the classes in EgammaAnalysis/ElectronTools needed for scale & smearing have been put into RecoEgamma/EgammaTools. The classes have been substantially re-written, although the original design is clearly recognizable. They are as follows\r\n\r\n- EnergyScaleCorrection\r\nThe class which reads the scale & smearing corrections from a file and then returns the ones appropriate for an electron/photon. The information is now encapsulated in sub classes  ScaleCorrection and SmearCorrection which contain the information for a given e/gamma object. In general, I dislike the reading mechanism, its all kinds of awful. However it is what we have. In the future, this should be either in the database or at the very least some sort of nice json/xml format. \r\n\r\n- PhotonEnergyCalibrator \r\nUses the energy scale correction class to calculate the new corrected energies and systmatic variations. Uses a deterministic random number based on run/event/lumi/supercluster seed id/#crystals in SC for the smearing. Note the smearing does effect the data, it enters in the error of the energy. \r\n\r\n- ElectronEnergyCalibrator \r\nThe electron equivalent class of PhotonEnergyCalibrator. Diffs because electrons energy is ECAL-Trk combined and the corrections apply solely to the ECAL energy. This complicates things, and is why I had to start to overhaul the regression code as it needs to re-apply the ecal-track regression starting from the new corrected energy. Obviously having two parallel codes doing exactly the same thing is unacceptable, this is why the class EpCombinationTool which does this is designed to as a drop in replacement for the code in \"EGExtraInfoModifierFromDB\". This hasnt been swapped over yet but will be in a future PR.  Note I'm about 90% of the way to being able to fully template this with PhotonEnergyCalibrator but it wont happen for this PR. \r\n\r\n- CalibratedElectronProducerT, CalibratedPhotonProducerT\r\nThe produces which write the output of PhotonEnergyCalibrator , ElectronEnergyCalibrator  to a file. Optionally writes out a new collection of calibrated eles/phos\r\n\r\nProto Regression Changes:\r\nAs mentioned the ElectronEnergyCalibrator needs to reapply the ecal-track regression. The following classes facilitate this\r\n\r\n- EpCombinationTool\r\napplies the ECAL-Track regression. Intended to replace the code : https://github.com/cms-sw/cmssw/blob/CMSSW_9_4_0/RecoEgamma/EgammaTools/plugins/EGExtraInfoModifierFromDB.cc#L481-L542 and instead wrap it up in a nice little function\r\n\r\n- EgammaRegressionContainer\r\ne/gamma regressions are binned in et, eta and saturation. This simply contains the the 4 regressions and allows the correct value to be returned based on et/eta/saturation. Also contains the range values rather than hardcoding them in the .cc. \r\nAllows code such as this : https://github.com/cms-sw/cmssw/blob/CMSSW_9_4_0/RecoEgamma/EgammaTools/plugins/EGExtraInfoModifierFromDB.cc#L438-L462 to be replaced\r\n\r\nFuture evolution:\r\n- all actual regression functionality from EGExtraInfoModifierFromDB is removed and it will be done via classes such as EpCombinationTool\r\n- the entire EgammaAnalysis package will be deleted from the release\r\n- CalibratedElectron and CalibratedPhoton producers will ultimately be a templated instance of each other\r\n- CalibratedElectron and CalibratedPhoton producers will likely be able to apply the ECAL energy regression as well \r\n\r\nI am now re-running my longer validations these are\r\n- miniAOD -> miniAOD of the entire DoubleEG dataset, this allows us to check the preformance in every bin, also done for a DY sample\r\n- re-miniAOD on a smaller sample size of the DoubleEG dataset + DY sample to validate the results are the same as the re-miniAOD\r\n- the checks Slava suggested (profiles, size increases , etc)\r\n\r\n", "branch": "master", "changed_files": 44, "comments": 21, "commits": 8, "created_at": "1520518709", "deletions": 2474, "labels": ["analysis-pending", "code-checks-approved", "comparison-pending", "orp-pending", "pending-signatures", "reconstruction-pending", "tests-pending"], "milestone": "CMSSW_10_1_X", "number": 22531, "release-notes": [], "review_comments": 0, "state": "open", "title": "EGamma Scale & Smearing For Re-miniAOD", "updated_at": "1520537211", "user": "Sam-Harper"}