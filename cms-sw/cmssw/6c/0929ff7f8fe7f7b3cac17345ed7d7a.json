{"additions": 50, "auther_ref": "reflex_attributes", "auther_sha": "1c5c842bc2507ede914d20abae0f32ede32000eb", "author": "fwyzard", "body": "#### PR description:\r\n\r\nThe way dictionary informations are propagated from the C++ code or XML dictionaries to reflex and cling is rather roundabout:\r\n  - `<field name=\"data_\" comment=\"!\"/>` tags in XML dictionaries are parsed by `genreflex` and injected into the LLVM AST of the corresponding C++ code as comments `//!`;\r\n  - C++ comments like `//!` or `//[size_]` are converted by `genreflex`/`rootcling` into LLVM AST annotations;\r\n  - `cling` parses the LLVM annotations and uses them to generate the desired behaviour in the dictionaries.\r\n\r\nThis approach does not work well with macro-generated data members:\r\n  - macros cannot generate comments, so `//!` or `//[size_]` cannot be used directly;\r\n  - macros cannot easily be used to generate the `class_def.xml` file, requiring manual intervention for their implementation and maintenance.\r\n\r\nHowever, it turns out that dictionaries can bypass the comments and use LLVM annotations directly within the C++ code. So\r\n```c++\r\nprivate:\r\n  int size_;\r\n  float* data_;       //[size_]\r\n  float* transient_;  //!\r\n```\r\ncan be also expressed as\r\n```c++\r\nprivate:\r\n  int size_;\r\n  float* data_ [[clang::annotate(\"[size_]\")]];\r\n  float* transient_ [[clang::annotate(\"!\")]];\r\n```\r\nand annotations _can_ be generated by macros.\r\n\r\nA new header file, `FWCore/Utilities/interface/reflex.h`, currently implements two macros:\r\n  - `EDM_REFLEX_TRANSIENT` can be used to annotate transient data members, like `//!`\r\n  - `EDM_REFLEX_SIZE(SIZE)` can be used to annotate dynamic arrays, like `//[SIZE]`\r\n\r\nTo avoid warning about unrecognised attributes, these macros expand to nothing unless `__CLING__` is defined.\r\n\r\nThe changes to `DataFormats/SoATemplate/interface/SoALayout.h` add these macros to the SoA data members, so they do not need to be explicitly added by hand to the various `classes_def.xml` files.\r\n\r\n#### PR validation:\r\n\r\nThe SoA unit tests under `HeterogeneousCore/AlpakaTest` and `HeterogeneousCore/CUDATest` pass.\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nNo backport expected.", "branch": "master", "changed_files": 3, "comments": 18, "commits": 2, "created_at": "1672999522", "deletions": 16, "labels": ["core-pending", "pending-signatures", "tests-approved", "orp-pending", "code-checks-approved", "heterogeneous-approved"], "milestone": "CMSSW_13_0_X", "number": 40435, "release-notes": [], "review_comments": 1, "state": "open", "title": "Introduce macros to use reflex attributes", "updated_at": "1673281958", "user": "fwyzard"}