{"additions": 2, "auther_ref": "HcalTimeSlew-delay-std-fmin", "auther_sha": "bf26bcdb3185fcd0632d7e4d4706a3a39fcd6602", "author": "davidlt", "body": "SIGSEGV (Segfault) was detected in `HcalDeterministicFit::getLandauFrac`\nwith ICC 16.0.0 20150815.\n\nSegfault happens in RecoLocalCalo/HcalRecAlgos/src/HcalDeterministicFit.cc:42\n\n```\n42        sum= landauFrac[int(ceil(tStart+tsWidth))];\n```\n\nThe function is called here in\nRecoLocalCalo/HcalRecAlgos/interface/HcalDeterministicFit.h:112\n\n```\n112       getLandauFrac(-tsShift4,-tsShift4+tsWidth,i4);\n```\n\nBut `tsShift4` ends up being **NAN**:\n\n```\n112       getLandauFrac(-tsShift4,-tsShift4+tsWidth,i4);\n(gdb) p tsShift4\n$3 = nan(0x400000)\n(gdb) p tsWidth\n$4 = 25\n(gdb) p i4\n$5 = 0\n```\n\n`HcalTimeSlew::delay` use a `log` function and a negative argument in\npassed.\n\n```\n(gdb) p fTimeSlew\n$9 = HcalTimeSlew::InputPars\n(gdb) p fTimeSlewBias\n$10 = HcalTimeSlew::Medium\n(gdb) p fpar0\n$11 = 12.299899999999999\n(gdb) p fpar1\n$12 = -2.1914199999999999\n(gdb) p fpar2 // par2\n$13 = 0\n(gdb) p inputCharge[4] // fC\n$14 = (__gnu_cxx::__alloc_traits<std::allocator<double> >::value_type &)\n@0x7fff38cf7e20: -0.08074517548084259\n```\n\nCalibCalorimetry/HcalAlgos/src/HcalTimeSlew.cc:23\n\n```\nreturn std::min(cap, par0 + par1*log(fC+par2));\n```\n\nThus we end up with `return std::min(6.0, NAN);`\n\n`std::log` has direct description of how it works if implementation\nsupports IEEE:\n\n```\nIf the argument is negative, NaN is returned and FE_INVALID is\nraised.\n```\n\nWhat `std::min` should return in case one of arguments is `NAN` is not directly\ndefined in C++ standard. Standard requires `std::min` to return the\nfirst argumnet (6.0 in our case) if arguments are equivalent. All\ncomparison with `NAN` will return `false`. Becasue of this `std::min`\nimplementation with GCC and Clang will return the first argument. `NAN`\nis returned in ICC case.\n\nAccording to IEEE 754:\n\n```\nmin(x,NaN) = min(NaN,x) = x\n```\n\nC++11 also introduced `std::fmin` from C standard, which provides a\ndirect instructions how `NAN` is handled:\n\n```\n.. between a NaN and a numeric value, the numeric value is chosen)\n```\n\n`std::min` is generic and does not direclty talk about IEEE\nfloating-points.\n\n`std::fmin` works fine in correctly between GCC, Clang and ICC.\n\nICC issue will be reported for Intel for further discussions.\n\nRef: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=47706\n\nSigned-off-by: David Abdurachmanov David.Abdurachmanov@cern.ch\n", "branch": "CMSSW_8_0_X", "changed_files": 1, "closed_at": "1446197451", "comments": 5, "commits": 1, "created_at": "1445762326", "deletions": 2, "labels": ["alca-pending", "comparison-available", "orp-pending", "pending-signatures", "tests-approved"], "merge_commit_sha": "8dd57365f7f471a9b02e83ef77ed0fa2b23864e4", "merged_at": "1446197451", "merged_by": "davidlange6", "milestone": "CMSSW_8_0_X", "number": 12088, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Use std::fmin instead of std::min in HcalTimeSlew::delay", "updated_at": "1446197451", "user": "davidlt"}