{"additions": 18, "auther_ref": "ignoreEDFiltersInRecoPath", "auther_sha": "54fecdeb943398ead86e46772a1f8f2b44641d9c", "author": "perrotta", "body": "This is meant to solve the github issue #23377 ( @Dr15Jones )\r\n\r\nThe following filters were identified in the sequences that end up in the recontruction_step path\r\n- electronsWithPresel\r\n- mvaElectrons\r\n- electronsCiCLoose\r\n- pfNoPileUpCandidates\r\n- pfPileUpAllChargedParticles\r\n\r\nIn order to allow the ```convertToUnscheduled``` function to remove those EDFilters from the Path and put them on the appropriate Task, those modules must be marked with cms.ignore()\r\n\r\nWhen looking at those modules, it turns out that ```electronsWithPresel```, ```electronsCiCLoose```, ```pfNoPileUpCandidates``` and ```pfPileUpAllChargedParticles``` are \"true\" filters, which are however configured in the reco sequence in order to always pass (result of the filter() function could also be \"false\" in principle, but it is always \"true\" with the chosen configurations) -> they can be cms.ignore'd.\r\n\r\nOn the other hand, ```mvaElectrons``` is a \"ElectronIdMVABased\" EDFilter which always returns true by construction [1], and produces mvaElectrons -> This can therefore just be moved to become an EDProducer, instead of an EDFIlter.\r\n\r\nThis PR implements what above. It has been tested running with the short matrix (not all tests have finished yet, but there is no issue in sight so far). No differences at all are expected in the jenkins outputs\r\n\r\n[1] https://cmssdt.cern.ch/lxr/source/RecoEgamma/ElectronIdentification/plugins/ElectronIdMVABased.cc#0156", "branch": "master", "changed_files": 6, "comments": 0, "commits": 4, "created_at": "1529408881", "deletions": 35, "labels": [], "number": 23623, "release-notes": [], "review_comments": 0, "state": "open", "title": "Ignore EDFilters in the recontruction_step path", "updated_at": "1529408895", "user": "perrotta"}