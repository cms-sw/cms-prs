{"additions": 79, "auther_ref": "mm_tkal_addGS_branches", "auther_sha": "107d8e964734962b38ded35ee3ce7b9c22a3e098", "author": "mmusich", "body": "#### PR description:\r\n\r\nThe goal of this PR is to add `GEN-SIM` related branches to the outputs of several Tracker Alignment ALCARECO producers (using resonant di-muon inputs).\r\nThe main goal is to be able to produce MC-truth based validations like the ones shown [here](https://indico.cern.ch/event/1431066/contributions/6022416/attachments/2888005/5061991/AlCaDB_meeting_010724.pdf#page=34) readily from ALCARECO samples instead of relying on scarce and not very easily available `GEN-SIM-RECO` samples.\r\nA similar request was done for analysis purposes e.g. in [this ticket](https://its.cern.ch/jira/browse/PDMVMCPROD-59).\r\nTo limit the output size, we don't add the whole `genParticles` collection, but just the particles with `abs(pdgId) == 13`.\r\nIn order to do that some gymnastics with the `outputCommands` is required. A simpler solution might entail adding directly a new event content `GeneratorInterfaceALCARECO` [here](https://github.com/cms-sw/cmssw/blob/master/GeneratorInterface/Configuration/python/GeneratorInterface_EventContent_cff.py).\r\nThe increase of data volume (limited by construction only to the MC samples, since the added branches are not available in data) is marginal (estimated in less than 1% on 100 input events).\r\n\r\n\r\n#### PR validation:\r\n\r\nRun the following command: `runTheMatrix.py --what upgrade -l 12842.0 -t 4 -j 8 --nEvents=100` to produce an input file, then analyzed with `SagittaBiasNtuplizer` (introduced back then at PR https://github.com/cms-sw/cmssw/pull/44282) by using this patch:\r\n\r\n```diff\r\ndiff --git a/Alignment/OfflineValidation/test/SagittaBiasNtuplizer_cfg.py b/Alignment/OfflineValidation/test/SagittaBiasNtuplizer_cfg.py\r\nindex e5f08e57ebf..bfeb8c65021 100644\r\n--- a/Alignment/OfflineValidation/test/SagittaBiasNtuplizer_cfg.py\r\n+++ b/Alignment/OfflineValidation/test/SagittaBiasNtuplizer_cfg.py\r\n@@ -179,18 +179,19 @@ process.refittedTracks = RecoTracker.TrackProducer.TrackRefitter_cfi.TrackRefitt\r\n ####################################################################\r\n from RecoVertex.PrimaryVertexProducer.OfflinePrimaryVertices_cfi import offlinePrimaryVertices\r\n process.offlinePrimaryVerticesFromRefittedTrks = offlinePrimaryVertices.clone()\r\n-#process.offlinePrimaryVerticesFromRefittedTrks.TrackLabel = cms.InputTag(\"refittedVtxTracks\")\r\n-process.offlinePrimaryVerticesFromRefittedTrks.TrackLabel = cms.InputTag(\"refittedTracks\")\r\n+process.offlinePrimaryVerticesFromRefittedTrks.TrackLabel = cms.InputTag(\"refittedVtxTracks\")\r\n+#process.offlinePrimaryVerticesFromRefittedTrks.TrackLabel = cms.InputTag(\"refittedTracks\")\r\n \r\n ###################################################################\r\n # The analysis modules\r\n ###################################################################\r\n process.ZtoMMNtuple = cms.EDAnalyzer(\"SagittaBiasNtuplizer\",\r\n-                                     #tracks = cms.InputTag('refittedMuons'),\r\n-                                     useReco = cms.bool(True),\r\n-                                     muons = cms.InputTag('muons'),\r\n+                                     muonTracks = cms.InputTag('refittedMuons'),\r\n+                                     useReco = cms.bool(False),\r\n+                                     #muons = cms.InputTag('muons'),\r\n                                      doGen = cms.bool(True),\r\n-                                     tracks = cms.InputTag('refittedTracks'),\r\n+                                     #tracks = cms.InputTag('refittedTracks'),\r\n+                                     genParticles = cms.InputTag('TkAlDiMuonAndVertexGenMuonSelector'),\r\n                                      vertices = cms.InputTag('offlinePrimaryVerticesFromRefittedTrks'))\r\n \r\n process.DiMuonVertexValidation = cms.EDAnalyzer(\"DiMuonVertexValidation\",\r\n@@ -257,9 +258,9 @@ process.TFileService = cms.Service(\"TFileService\",\r\n # Path\r\n ###################################################################\r\n process.p1 = cms.Path(process.offlineBeamSpot\r\n-                      #* process.refittedMuons\r\n-                      #* process.refittedVtxTracks\r\n-                      * process.refittedTracks\r\n+                      * process.refittedMuons\r\n+                      * process.refittedVtxTracks\r\n+                      #* process.refittedTracks\r\n                       * process.offlinePrimaryVerticesFromRefittedTrks\r\n                       * process.ZtoMMNtuple) \r\n                       #* process.DiMuonVertexValidation\r\n```\r\n\r\nand analyzed with: `cmsRun SagittaBiasNtuplizer_cfg.py myfile=file:../../../12842.0_ZMM_13+2024/TkAlDiMuonAndVertex.root`. Finally the resulting output ntuple has been checked for having appropriate branches filled.\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nNot a backport, but can be backported if there's interest for the 2024 MC production.", "branch": "master", "changed_files": 8, "comments": 5, "commits": 2, "created_at": "1719918797", "deletions": 4, "labels": ["alca-pending", "pending-signatures", "tests-approved", "orp-pending", "code-checks-approved"], "milestone": "CMSSW_14_1_X", "number": 45357, "release-notes": [], "review_comments": 0, "state": "open", "title": "Add GEN-SIM information to resonant di-muon TkAl ALCARECO producers", "updated_at": "1719931858", "user": "mmusich"}