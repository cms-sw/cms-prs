{"additions": 82, "auther_ref": "triton_model_instance_control", "auther_sha": "38b55b4b9ae31165b493bda6d4738de4c14c60a7", "author": "wpmccormack", "body": "\r\n#### PR description:\r\n\r\nFor SONIC, the number of instances of a model in a fallback server and the number of threads that fallback server can occupy on local CPU resources can be controlled via the model's triton config file.  We set the number of instances to the number of threads specified for the job, so this implementation requires a bit of text editing before the fallback servers can run.  The model files live in cvmfs, and the config files cannot be edited there, so they are pulled locally.  The precise edits depend on the model's backend; luckily the backend information can be extracted from the config files, so no additional dictionary containing this information is needed.\r\n\r\n#### PR validation:\r\n\r\nThis has been tested locally to verify that: 1) the config files get edited correctly, 2) that the fallback servers start properly, and 3) that a miniAOD processing job can run completely.\r\n\r\n", "branch": "CMSSW_12_6_X", "changed_files": 3, "comments": 16, "commits": 7, "created_at": "1680124716", "deletions": 10, "labels": ["pending-signatures", "tests-rejected", "orp-pending", "heterogeneous-pending"], "milestone": "CMSSW_12_6_X", "number": 41228, "release-notes": [], "review_comments": 54, "state": "open", "title": "initial pass at controlling model instance and threads for fallback triton servers", "updated_at": "1685974837", "user": "wpmccormack"}