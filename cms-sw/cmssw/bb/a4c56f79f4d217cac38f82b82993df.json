{"additions": 354, "auther_ref": "13_1_X_useFakeBSasFallBackInOnlineProducer2", "auther_sha": "579d59f083f3069efcae58fd7fb63a785d7392de", "author": "mmusich", "body": "backport of https://github.com/cms-sw/cmssw/pull/41597\r\n\r\n#### PR description:\r\n\r\nWhile working on https://github.com/cms-sw/cmssw/pull/41193/, I have noticed that despite `OnlineBeamSpotESProducer`  has a refined logic in order to put into the event setup a fake BeamSpot when certain conditions are not met:\r\n\r\nhttps://github.com/cms-sw/cmssw/blob/a52f2d1ecf97bde0e9f10d45959c88337c481687/RecoVertex/BeamSpotProducer/plugins/OnlineBeamSpotESProducer.cc#L168-L174\r\n\r\nthe current `BeamSpotOnlineProducer` logic, if `useTransientRecord_` is true and the  `OnlineBeamSpotESProducer` returned a fake beamspot, just falls back to DB (reading the content of `BeamSpotObjectsRcd`, populated by the PCL in realtime workflows)  - which I have understood from the Beam Spot experts is not the right / expected behaviour.\r\n\r\nhttps://github.com/cms-sw/cmssw/blob/a52f2d1ecf97bde0e9f10d45959c88337c481687/RecoVertex/BeamSpotProducer/plugins/BeamSpotOnlineProducer.cc#L104-L111\r\n\r\nIn this PR (in commit cc1512b6fa5501c09d4e509a75278c4e78d806dc) I change the current behaviour, such that instead now it will indeed produce a fake BS for consumption online (as it was originally devised).\r\nThis has a consequence, that in the case in which we want indeed to fall-back to DB (e.g. for the Phase-2 HLT testing case, after https://github.com/cms-sw/cmssw/pull/41193), the change will alter physics in an undesired way. For this reason, it has been necessary to supply to the `auto:phase2_realistic` GlobalTag key the right  `BeamSpotOnline*ObjectsRcd` payloads in order for the  `OnlineBeamSpotESProducer` to not pick up a fake BeamSpot. This is done in commit 579d59f083f3069efcae58fd7fb63a785d7392de  , while commit  d36e05690dc8cc46cd934f52fa577bf5ce875bb0 sets the the time threshold to `1e6` seconds (as it's done for the Run-3 menus, see https://github.com/cms-sw/cmssw/pull/41193/files#r1152358315) to the same effect.\r\nThe difference in Global Tags is:\r\n   * https://cms-conddb.cern.ch/cmsDbBrowser/diff/Prod/gts/131X_mcRun4_realistic_v4/131X_mcRun4_realistic_v5\r\n\r\n\r\n\r\nTo supply such payloads, I have found convenient to create a new plugin `BeamSpotOnlineFromOfflineConverter` that taking a `BeamSpotObject` in input creates an sqlite file in output containing a payload of the type `BeamSpotOnlineObjects`. This has been added in commit 9aeabd151cac8664023603f1b2e302dd30df8575, while commits f93330556aedc4ea3ba5bd70c4a99d8cb5613d01 and  84271d4dea94aa4c4b11a6830bf75f5f96996e6d add a utility accessor to the `BeamSpotOnlineObjects` condtion format to be able to readily copy from a `BeamSpotObjects` payload (friend class) all the common parameters. Finally commit 8848ad89a4c3b1faf3cf3736e0ba6e295fddd656 adds this converter to the battery of unit tests of the `CondTools/BeamSpot` package. \r\n\r\n#### PR validation:\r\n\r\n`cmssw` complies. Passes back unit tests.\r\n\r\n#### If this PR is a backport please specify the original PR and why you need to backport that PR. If this PR will be backported please specify to which release cycle the backport is meant for:\r\n\r\nThis is a verbatim backport of https://github.com/cms-sw/cmssw/pull/41597, to be backported down to 13.0.X for 2023 data-taking purposes", "branch": "CMSSW_13_1_X", "changed_files": 8, "comments": 7, "commits": 7, "created_at": "1684135614", "deletions": 32, "labels": ["alca-approved", "hlt-approved", "reconstruction-approved", "fully-signed", "tests-approved", "orp-pending", "db-approved", "backport-ok", "tracking"], "milestone": "CMSSW_13_1_X", "number": 41673, "release-notes": [], "review_comments": 0, "state": "open", "title": "[13.1.X] Produce a fake `BeamSpot` object in `BeamSpotOnlineProducer` when using transient record logic and `OnlineBeamSpotESProducer` returned a fake", "updated_at": "1684225965", "user": "mmusich"}