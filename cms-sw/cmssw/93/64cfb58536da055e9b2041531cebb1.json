{"additions": 13219, "auther_ref": "NewMemoryPoolV0", "auther_sha": "b8d0837f4924cb88f991b367d2ffbec85e631b7f", "author": "VinInn", "body": "This PR replaces the old \"notcub\" cache allocator with a memory pool featuring\r\n   * lockfree operations\r\n   * backend agnostic implementation\r\nThe data interface is based on a simple ```Buffer``` that is completely  backend agnostic\r\nThe allocation interface (```makeBuffer```) currently depends on ```cudaStream_t``` that can be easily hidden behind ```void *``` or a light opaque ```struct```\r\nA new feature is a \"Bundle deleter\": buffers can be bundle together and then freed in just one operation: this reduces the number of cuda calls.\r\n\r\nAll previous users of the cache allocator (at least for Pixel wf) have been migrated.\r\n\r\nTests passes: it is not slower than previous implementation. Need a free machine to make definitive tests.\r\n\r\nSome cleanup is still required to remove debug statements.\r\n\r\nPurely technical no regression expected.\r\n\r\nDraft Slides for a possible presentation available @ https://cernbox.cern.ch/index.php/s/Ax4NHYGLHbG8N1C\r\n", "branch": "master", "changed_files": 288, "closed_at": "1652615816", "comments": 25, "commits": 226, "created_at": "1652175312", "deletions": 2443, "labels": ["reconstruction-pending", "simulation-pending", "dqm-pending", "l1-pending", "hlt-pending", "core-pending", "alca-pending", "db-pending", "generators-pending", "geometry-pending", "visualization-pending", "pending-signatures", "tests-pending", "orp-pending", "pdmv-pending", "upgrade-pending", "code-checks-pending", "heterogeneous-pending"], "milestone": "CMSSW_12_4_X", "number": 37887, "release-notes": [], "review_comments": 0, "state": "closed", "title": "New Heterogeneous Memory Pool", "updated_at": "1652616220", "user": "VinInn"}