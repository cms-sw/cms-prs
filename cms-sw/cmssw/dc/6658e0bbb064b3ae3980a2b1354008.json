{"additions": 323, "auther_ref": "OriAlgo", "auther_sha": "163234cad68bad9d8e13d6e00fb1b4bf2646e322", "author": "VinInn", "body": "Added a bitset that keep track of all algos a track has been \"reconstructed\" according to the criteria of the TrackListMerger.\nI took the opportunity to fix the algo-priority-order to reflect the actual order in this release.\ntrackAlgoPriorityOrder.h has been moved to a public header so that it is available also at stages of reconstruction and analysis other than FinalSelectors.\nI also modified class TkMCQuality  to make it producing a vector of \"qualities\" instead of writing a new track collection with a fake quality bit set.\n\nAll this can be used (among others) to measure the reco efficiency using tag&probe method.\nIn particular for muon, Iter10  \"muonSeededStepOutIn\" can be used as a probe to check if the track were found previously.\n\nfor instance these are the results on a sample of 2000 boosted Jpsi (particle gun) superimposed to 13TeV pileup (average 35, 25ns)\n\nthe first table shows the percentage of reconstructed muon for each couple of algorithms.\nThe following histograms shows the final assignment to the track as well as which algo found first:\nthose found first by iter10 are tracker-only inefficiency.\nthe purple line shows the tracks found only by one algo.\nA different view is shown in the second histogram that count how many algo a track has been found in early-iterations. The number of track not found by early-iterations are again the tracker-only inefficiency.\n\nthis method of course does not account for tracker-detector inefficiency.\nfor that standard tag&probe will provide an answer.\n\n![jpsialgotable](https://cloud.githubusercontent.com/assets/4143702/7670772/8975e706-fcb2-11e4-8f3f-75182bd54147.png)\n\n![jpsialgos](https://cloud.githubusercontent.com/assets/4143702/7670791/8b4d0284-fcb3-11e4-8052-d8c5ce5667f1.png)\n\n![jpsicontearly](https://cloud.githubusercontent.com/assets/4143702/7670792/90cb7b46-fcb3-11e4-984b-95a15a19ad11.png)\n", "branch": "CMSSW_7_5_X", "changed_files": 14, "closed_at": "1432016353", "comments": 14, "commits": 13, "created_at": "1431506853", "deletions": 371, "labels": ["comparison-available", "fully-signed", "reconstruction-approved", "simulation-approved", "tests-approved"], "merge_commit_sha": "c986719f664c5d1c030e64d96e6c48bb2ee6ddbd", "merged_at": "1432016353", "merged_by": "cmsbuild", "milestone": "CMSSW_7_5_X", "number": 9073, "release-notes": [], "review_comments": 9, "state": "closed", "title": "Add mask to keep track of all algos where a track is reconstructed (and also move detachedTripletStep right after initialStep in priority order where it should be) Class TkMCQuality is also modified to produce a vector of \"qualities\" instead of writing a new track collection with a fake quality bit set.", "updated_at": "1432016353", "user": "VinInn"}