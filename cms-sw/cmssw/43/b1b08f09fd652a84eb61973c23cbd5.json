{"additions": 96, "auther_ref": "fixDelayedLumiClosure", "auther_sha": "d2aac8a025882fe048f65e700ab5f27df5a9d2bf", "author": "wddgit", "body": "\r\n\r\n\r\n#### PR description:\r\n\r\nThis pull request fixes a problem related luminosity blocks being closed later than necessary in some cases. It was noticed online in heavy ion runs. It should only be a problem online and not occur offline. The initial report and detailed description of the problem are in Issue #42931. There are two items listed in the opening comment of that issue. This PR only addresses the first of those two items. \"Lumisections that no longer receive events are closed late\". It does not help with the second item.\r\n\r\nThe changes should not affect the behavior for the first stream that notices that a luminosity block has ended. Other streams  though will notice the stream has ended and immediately call streamEndLumiAsync instead of waiting for it to be called by a task in the source serial queue. The delay is caused when that queue is blocked.\r\n\r\nThis PR should not affect the output of modules or anything else. It only affects the order in which things run. There are already many unit tests that verify the correct things are running and producing proper output. Those did not need modification. One unit test (see FWCore/Integration/test/testLateLumiClosure_cfg.py) is designed to demonstrate the problem. One can see the behavior in the log output of that test. Comparing the output with and without this PR shows that this PR fixes the problem. It is difficult to make this into a pass or fail type of test because timing can vary from one execution to the next. But I manually ran that test and verified that most of the time the problem is fixed by this PR (every time when I manually ran it). We usually do not want a unit test that occasionally fails. For example, behavior can be affected when the operating system pauses a thread due to contention issues.\r\n\r\nThis does add a small amount of overhead to execute the new code. I expect that to be negligible. In running the full complement of Core unit tests, I added counters that showed that out of 10's of thousands of calls the spin wait was hit briefly twice. The faster closing of the Lumi occurred hundred of times. In terms of performance I would guess this would be a net improvement. The original problem would be worst in cases like heavy ion runs where there are more events that take an unusually long time to process.\r\n\r\nA note for those reviewing the code changes. The code-format tool changed the indentation on many lines in EventProcessor.cc. It looks like I changed more lines of code than I actually changed. The first part is really changed up to line 2223, then there is a big block where the only change is indentation, and at the end new code is added starting at line 2282. All the changes in the middle are just indentation from code-format.\r\n\r\n#### PR validation:\r\n\r\nExisting Core unit tests pass. testLateLumiClosure_cfg.py exhibits the expected improvement in closing lumis\r\n", "branch": "master", "changed_files": 3, "comments": 3, "commits": 1, "created_at": "1699547666", "deletions": 54, "labels": ["core-pending", "pending-signatures", "orp-pending", "tests-started", "code-checks-approved"], "milestone": "CMSSW_14_0_X", "number": 43240, "release-notes": [], "review_comments": 0, "state": "open", "title": "Avoid unnecessary Framework delays closing luminosity blocks", "updated_at": "1699548410", "user": "wddgit"}