{"additions": 190, "auther_ref": "eventsetupOptional", "auther_sha": "213fd4e68c2dee3033142c1bd895eb120cad8b24", "author": "makortel", "body": "#### PR description:\r\n\r\nThe `std:optional` as an `ESProducer::produce()` return type has been supported for a long time already. However, the `ESProducer::produce()` returning an empty std::optional lead to an exception being thrown (about de-referencing an empty std::optional). The fix is use the the default form of the `moveFromTo()` function also for `std::optional`.\r\n\r\nI removed the overload for `std::unique_ptr` as well since it provided no functionality over the default implementation of the function.\r\n\r\nIn order to make the unit tests to not hang in case an exception is thrown by the `moveFromTo()` I added a protection in `exceptionContext()` function.\r\n\r\nResolves https://github.com/makortel/framework/issues/700\r\n\r\n#### PR validation:\r\n\r\nThe `FWCore/Framework` unit tests run.", "branch": "master", "changed_files": 4, "comments": 5, "commits": 2, "created_at": "1698090668", "deletions": 20, "labels": ["core-pending", "pending-signatures", "tests-rejected", "orp-pending", "code-checks-approved"], "milestone": "CMSSW_13_3_X", "number": 43092, "release-notes": [], "review_comments": 0, "state": "open", "title": "Make empty std::optionals to work as ESProducer return value", "updated_at": "1698114642", "user": "makortel"}