{"additions": 4, "auther_ref": "quoted-args", "auther_sha": "1b28c1f6f419d63deb20fe46aae4d6a5ea3bfc31", "author": "kpedro88", "body": "In order to assign `$@` to another variable while preserving quoted arguments, it's necessary to assign it as an array. (This comes from https://stackoverflow.com/questions/3811345/how-to-pass-all-arguments-passed-to-my-bash-script-to-a-function-of-mine; I did not figure it out myself...)\r\n\r\nHere's the test, which can be run to show how the current version gives the wrong answer (4). The version in this PR gives the right answer (3).\r\n```bash\r\ncat << 'EOF' > testArgs.sh\r\n#!/bin/bash\r\nARGS=(\"$@\")\r\necho ${#ARGS[@]}\r\nEOF\r\nchmod +x testArgs.sh\r\n./testArgs.sh 1 \"2 3\" 4\r\ncmssw-env --cmsos cc6 -B $PWD --pwd $PWD -- ./testArgs.sh 1 \"2 3\" 4\r\n```\r\n\r\nI also removed the `sh -c` call, which seemed superfluous; if it's not, let me know and I'll put it back.", "branch": "master", "changed_files": 1, "closed_at": "1623385023", "comments": 2, "commits": 2, "created_at": "1623362320", "deletions": 4, "labels": ["externals-pending", "orp-pending", "pending-signatures", "tests-pending"], "merge_commit_sha": "65ac146792e6d4b7bdd8741f157708344a8a6505", "merged_at": "1623385023", "merged_by": "smuzaffar", "number": 3, "release-notes": [], "review_comments": 0, "state": "closed", "title": "Handle quoted args", "updated_at": "1623385023", "user": "kpedro88"}