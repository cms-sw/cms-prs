{"additions": 11, "auther_ref": "v6-22-Issue-6666", "auther_sha": "629668d8c8a0e8be4f6fcf3c5e51bd4d72e7bb16", "author": "pcanal", "body": "The problem was due  the introduction (in commit f3f0f13) of a fast path in TClass::GetListOfDataMember which did not take in consideration the case:\r\n\r\nc = GetClass(someclassname)\r\nc->GetState() == TClass::kForwardDeclared\r\nc->GetListOfDataMember() -> list is now created but empty.\r\nload and parse header file for\r\nc->GetState() == TClass::kInterpreted\r\nc->GetListOfDataMember() -> list is still empty but should have been filled (loaded at this point).\r\n\r\nThe logic assumed incorrectly that if someclassname was indeed pointing to a class or struct and the list was created then it was loaded.\r\n\r\nTo keep the fast path and correct the logic, we need to 'promote' TListOfDataMembers::fIsLoaded to be an std::atomic", "branch": "cms/v6-22-00-patches/ae29fa4", "changed_files": 2, "closed_at": "1603369085", "comments": 4, "commits": 1, "created_at": "1603278597", "deletions": 6, "labels": ["comparison-notrun", "externals-pending", "orp-pending", "pending-signatures", "requires-external", "tests-rejected"], "merge_commit_sha": "dc3fb486c816e959a226e4c0f066a7af5f5148c9", "merged_at": "1603369085", "merged_by": "smuzaffar", "number": 143, "release-notes": [], "review_comments": 0, "state": "closed", "title": "TClass::GetListOfDataMembers reload list for struct/class when needed.", "updated_at": "1603369085", "user": "smuzaffar"}